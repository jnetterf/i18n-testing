# 
msgid ""
msgstr ""
"Project-Id-Version: 1.0\n"
"Report-Msgid-Bugs-To: translation-team@khanacademy.org\n"
"POT-Creation-Date: 2017-11-22 11:20+0000\n"
"PO-Revision-Date: 2017-11-22 11:20+0000\n"
"Language-Team: English <english-translators@khanacademy.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

# Article is at (x4e6daf99) on the bn stage.
# (KA_SOURCE_TREE: bn)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [jQuery](https://jquery.com/) (The most popular library, by far! - See [example on KA](/computer-programming/crocodile-order-form/5090752502824960))\n"
"*   [ZeptoJS](http://zeptojs.com/)\n"
"*   [MooTools](http://mootools.net/)\n"
"*   [$dom](https://github.com/julienw/dollardom)\n"
"*   [QuoJS](https://github.com/soyjavi/QuoJS)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Bringing in data to your page"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Keeping up to date"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Using new HTML features"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Browsers release improvements often and the web development community is an active one. One of our favorite ways to keep up-to-date with what's new is to subscribe to [HTML5 weekly](http://html5weekly.com/) and [JavaScript weekly](http://javascriptweekly.com/), newsletters with links to articles and demos. Of course, whenever you learn something new, you should try it out to really understand how it works."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Congratulations on learning how to manipulate your webpages with JavaScript!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, Khan Academy has an [API explorer](http://api-explorer.khanacademy.org/) to let you browse the data that you can bring into your server, and here's a [webpage on KA](/computer-programming/example-using-the-ka-api-from-javascript/5839442427379712) that uses that API."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Many webpages let the users interact with dynamic data, like from a database or service. If you have your webpage hosted on your own server, you can bring it in using [AJAX](https://learn.jquery.com/ajax/). If you want to bring the data from an external server and that server makes that data available to others, you can bring it in using [their API or JSONP](http://gdisf-js-apis.appspot.com/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that our webpages environment only allows you to bring in data from [certain servers](https://khanacademy.zendesk.com/hc/en-us/articles/205175520-What-resources-images-scripts-etc-can-I-bring-into-webpages-that-I-make-on-Khan-Academy-), and those servers must be called via SSL (`https://`). Check your developer console to see if you're trying to bring in data from a not-allowed server."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Practice, practice, practice!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# Article is at (xae915e3e) on the bn stage.
# Article is at (xae915e3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Quite a lot of functionality was added to browsers as part of the \"HTML5\" spec, and we didn't get to cover most of that in this course. For example, you can go through these slides on [multimedia](http://www.teaching-materials.org/multimedia/), [storage](http://www.teaching-materials.org/storage/), and [graphics](http://www.teaching-materials.org/graphics/) - or just search the internet for the sort of functionality you're interested in and see if it exists."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "Browsers release improvements often and the web development community is an active one. One of our favorite ways to keep up-to-date with new is to subscribe to [HTML5 weekly](http://html5weekly.com/) and [JavaScript weekly](http://javascriptweekly.com/), newsletters with links to articles and demos. Of course, whenever you learn something new, you should try it out to really understand how it works."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-further-learning/a/html-css-js-further-learning-what-to-learn-next</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, Khan Academy has an [API explorer](http://api-explorer.khanacademy.org/) to let you browse the data that you can bring into your server, and here's a [webpage on KA](https://www.khanacademy.org/computer-programming/example-using-the-ka-api-from-javascript/5839442427379712) that uses that API."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss</a>
# Title of tutorial article (x5ab7a345) on the bn stage
# Title of tutorial article (x5ab7a345) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review HTML/CSS"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss</a>.
# Article is at (x5ab7a345) on the bn stage.
# Article is at (x5ab7a345) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Basic tags: [text](/computing/computer-programming/html-css/intro-to-html/p/html-text-emphasis), [image](/computing/computer-programming/html-css/intro-to-html/p/html-images), [links](/computing/computer-programming/html-css/html-tags-continued/p/html-links)\n"
"*   Grouping elements: [div](/computing/computer-programming/html-css/css-layout-properties/p/css-grouping-elements), [span](/computing/computer-programming/html-css/css-layout-properties/p/css-grouping-elements)\n"
"*   CSS [ids](/computing/computer-programming/html-css/intro-to-css/p/css-selecting-by-id) and [classes](/computing/computer-programming/html-css/intro-to-css/p/css-selecting-by-class)\n"
"*   [CSS absolute positioning](/computing/computer-programming/html-css/css-layout-properties/p/css-position)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript</a>.
# Article is at (x5ab7a345) on the bn stage.
# Article is at (x5ab7a345) on the pl stage.
# Article is at (x97251297) on the bn stage.
# Article is at (x97251297) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can check how well you remember everything in the quiz up next."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss</a>.
# Article is at (x5ab7a345) on the bn stage.
# Article is at (x5ab7a345) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You could also check out the documentation tab below your project, where everything covered in our intro course can be found."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss</a>.
# Article is at (x5ab7a345) on the bn stage.
# Article is at (x5ab7a345) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You should review each of these HTML/CSS concepts, which you can do here on Khan Academy in our [Intro to HTML/CSS course](/html-css):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "You could also check out our [documentation](/computing/computer-programming/docs/webpage), where everything covered in our intro course can be found."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript</a>
# Title of tutorial article (x97251297) on the bn stage
# Title of tutorial article (x97251297) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review JavaScript"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript</a>.
# Article is at (x97251297) on the bn stage.
# Article is at (x97251297) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Variables**: [how to declare variables, assign, re-assign](/computing/computer-programming/programming/variables/a/review-variables), and [local vs. global scope](/computing/computer-programming/programming/functions/p/local-and-global-variables).\n"
"*   **Data types**: numbers, [booleans](/computing/computer-programming/programming/logic-if-statements/p/booleans), [strings](/computing/computer-programming/programming/text-basics/a/review-text-and-strings), [arrays](/computing/computer-programming/programming/arrays/a/review-arrays), and [objects](/computing/computer-programming/programming/objects/a/review-objects).\n"
"*   **Functions**: [how to group code into functions, pass arguments to them, and return values from them.](/computing/computer-programming/programming/functions/a/review-functions)\n"
"*   **Conditionals**: [how to use if/else statements and logical expressions.](/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements)\n"
"*   **Loops**: [how to use while and for loops to repeat code.](/computing/computer-programming/programming/looping/a/review-looping)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript</a>.
# Article is at (x97251297) on the bn stage.
# Article is at (x97251297) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You should review each of these core concepts, which you can do here on Khan Academy in our [Intro to JS course](/computing/computer-programming/programming):"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>
# Title of tutorial article (xba1ab093) on the bn stage
# Title of tutorial article (xba1ab093) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Summary: DOM access methods"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Accessing with sub-queries"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Traversing the DOM"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What do they return?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What methods can we use?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [`document.getElementById(id)`](https://developer.mozilla.org/en-US/docs/Web/API/document.getElementById)\n"
"*   [`document.getElementsByClassName(className)`](https://developer.mozilla.org/en-US/docs/Web/API/document.getElementsByClassName)\n"
"*   [`document.getElementsByTagName(tagName)`](https://developer.mozilla.org/en-US/docs/Web/API/document.getElementsByTagName)\n"
"*   [`document.querySelector(cssSelector)`](https://developer.mozilla.org/en-US/docs/Web/API/document.querySelector)\n"
"*   [`document.querySelectorAll(cssSelector)`](https://developer.mozilla.org/en-US/docs/Web/API/document.querySelectorAll)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   `firstElementChild`\n"
"*   `lastElementChild`\n"
"*   `nextElementChild/nextElementSibling`\n"
"*   `previousElementChild/previousElementSibling`\n"
"*   `childNodes`\n"
"*   `childElementCount`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Another way to access elements is to \"traverse\" the DOM tree. Each element has properties that point to elements related to it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you've found an element, you can do subqueries on it using the methods we've just shown. For example:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The method `querySelectorAll()` returns a [NodeList](https://developer.mozilla.org/en-US/docs/Web/API/NodeList), which also acts like an array. That list is \"static\", which means that the list won't update even if new matching elements are added to the page. Most likely, you won't run into the difference between the two return data types when you're using these methods, but it's good to keep in mind."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The methods `getElementsByClassName` and `getElementsByTagName` return an [`HTMLCollection`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection) object that acts like an array. That collection is \"live\", which means the collection is updated if additional elements with tag name or class name are added to the document."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are two methods that return a single [`Element`](https://developer.mozilla.org/en-US/docs/Web/API/Element) object, `getElementById` and `querySelector`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "These properties are **not** available on `Text` nodes, only on `Element` nodes. To make sure you can traverse an element, you can check its `nodeType`/`nodeValue` properties. You likely will not need or want to use DOM traversal, but it is another option available to you."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We showed how you can use the following methods to find an element or elements in your webpage:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// find the element with that ID\n"
"var salsMotto = document.getElementById(\"salsMotto\");\n"
"// find the spans inside that element:\n"
"var mottoWords = salsMotto.getElementsByTagName(\"span\");\n"
"// log out how many there are\n"
"console.log(mottoWords.length);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var salsMotto = document.getElementById(\"salsMotto\");\n"
"for (var i = 0; i < salsMotto.childNodes.length; i++) {\n"
"   console.log(salsMotto.childNodes[i]);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var salsMotto = document.getElementById(\"salsMotto\");\n"
"salsMotto.innerHTML = \"Math is cool\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var teamMembers = document.getElementsByClassName(\"team-member\");\n"
"for (var i = 0; i < teamMembers.length; i++) {\n"
"   console.log(teamMembers[i].innerHTML);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# Article is at (xba1ab093) on the bn stage.
# Article is at (xba1ab093) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var teamMembers = document.querySelectorAll(\".team-member\");\n"
"for (var i = 0; i < teamMembers.length; i++) {\n"
"   console.log(teamMembers[i].innerHTML);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// find the element with that ID\n"
"var salsMotto = document.getElementById(\"salsMotto\");\n"
"// find the spans inside that element:\n"
"var mottoWords = salsMotto.getElementsByTagName(\"span\");\n"
"// log out how many there are\n"
"console.log(mottoWords.length);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var salsMotto = document.getElementById(\"salsMotto\");\n"
"for (var i = 0; i < salsMotto.childNodes.length; i++) {\n"
"   console.log(salsMotto.childNodes[i]);\n"
"}\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-access/a/summary-dom-access-methods</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var salsMotto = document.getElementById(\"salsMotto\");\n"
"salsMotto.innerHTML = \"Math is cool\";\n"
"\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>
# Title of tutorial article (xb0947c08) on the bn stage
# Title of tutorial article (xb0947c08) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "What DOM animation technique should you use?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Can it actually do what I want to do?\n"
"*   How well does this technique perform? (Does it slow down the browser/computer?)\n"
"*   How accurate does my timing need to be?\n"
"*   Does it work in all the browsers that I want my webpage to work in?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [CreativeJS: requestAnimationFrame](http://creativejs.com/resources/requestanimationframe/)\n"
"*   [CSS Tricks: Using requestAnimationFrame](http://css-tricks.com/using-requestanimationframe/)\n"
"*   [MDN: Guide to using CSS animations](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_animations/)\n"
"*   [TutsPlus: Beginners intro to CSS animation](http://webdesign.tutsplus.com/tutorials/a-beginners-introduction-to-css-animation--cms-21068/)\n"
"*   [The art of web: CSS animation](http://www.the-art-of-web.com/css/css-animation/)\n"
"*   [CSS Animation: An interactive guide](https://itunes.apple.com/us/book/css-animation-interactive/id799975886?mt=11)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Bonus for Doctor Who fans: one of my favorite examples of the power of CSS3 animations is this [animated TARDIS](http://joshnetherton.com/presentations/ConvergeSE2013/slides.html#slide63)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, CSS can't do everything. For example, to draw pixels and shapes in a `<canvas>` tag, you have to call functions like `fillRect()`, you can't use CSS. You would need to use `requestAnimationFrame` or `setInterval` to call those functions periodicially instead. In fact, that's what we do here on Khan Academy, in our ProcessingJS environment. ProcessingJS is a JS library that writes out to a `<canvas>` tag, and if you define a `draw()` function in your code, then ProcessingJS uses `setInterval` to call that `draw()` function repeatedly based on the `frameRate`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Of course, you should keep browser compatibility in mind. If you're writing code that needs to work in IE9, then you can't use `requestAnimationFrame` or CSS animations. You need to use a combination of techniques that work across the browsers, or find a library that does that for you, like [Velocity.js](http://julian.com/research/velocity/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Sometimes, you want to call JavaScript functions periodically, but not because you want to animate something on the page. You might be polling a server for updates, like Twitter does when it updates its realtime feed. In that case, you can just use `setInterval`, and it doesn't matter that the timing isn't accurate, because you're only calling it every minute or so. That's what we do on Khan Academy on the help requests page, to continuously check for new help requests every 2 minutes."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There is a lot more to learn about all of these techniques. Follow these links to learn more:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When making webpages, we're very concerned about performance, so we like to consider that as the most important criteria. However, browser performance does change when new browsers come out, and mobile browsers can perform very differently from desktop browsers, so the technique that performs best today may not be the technique that performs best tomorrow. Currently, CSS animations/transitions are the most performant, then `requestAnimationFrame`, then `setInterval`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you're considering what technique to use, you should consider these questions:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-animation/a/what-dom-animation-technique-should-you-use</a>.
# Article is at (xb0947c08) on the bn stage.
# Article is at (xb0947c08) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You've now seen three techniques that let you animate parts of your webpage: `[window.setInterval](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setInterval)/[setTimeout](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setTimeout)`, [`window.requestAnimationFrame`](https://developer.mozilla.org/en-US/docs/Web/API/window.requestAnimationFrame), and CSS animations/transitions."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types</a>
# Title of tutorial article (x2a280300) on the bn stage
# Title of tutorial article (x2a280300) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "DOM event types"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types</a>.
# Article is at (x2a280300) on the bn stage.
# Article is at (x2a280300) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **mouse events ([`MouseEvent`](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent))**: mousedown, mouseup, click, dblclick, mousemove, mouseover, mousewheel, mouseout, contextmenu\n"
"*   **touch events ([`TouchEvent`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent))**: touchstart, touchmove, touchend, touchcancel\n"
"*   **keyboard events ([`KeyboardEvent`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent))**: keydown, keypress, keyup\n"
"*   **form events**: focus, blur, change, submit\n"
"*   **window events**: scroll, resize, hashchange, load, unload"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types</a>.
# Article is at (x2a280300) on the bn stage.
# Article is at (x2a280300) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that some events are device-specific. Touch events are only triggered on touch-enabled devices like smartphones and touch-screen laptops. Mouse events are triggered on most browsers, but sometimes they're slower than touch events on smartphones. The \"mouseover\" event isn't triggered at all in smartphones, since there's no way to hover over the screen without touching it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types</a>.
# Article is at (x2a280300) on the bn stage.
# Article is at (x2a280300) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Some developers add listeners for both the touch events and mouse events, so that their interface responds quickly across all devices, other developers use libraries like [FastClick](https://github.com/ftlabs/fastclick) that automatically figures out which events to listen to on each device (that's what we do here at Khan Academy). Since you're just getting started, the easiest thing to do is to listen to mouse events, because those are the most universal."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/dom-event-types</a>.
# Article is at (x2a280300) on the bn stage.
# Article is at (x2a280300) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The browser triggers many events. A full list is available in [MDN](https://developer.mozilla.org/en-US/docs/Web/Events), but here are some of the most common event types and event names:"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>
# Title of tutorial article (x7bf86932) on the bn stage
# Title of tutorial article (x7bf86932) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Summary: DOM events"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Adding event listeners"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Removing event listeners"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you are overriding click behavior on a link or submit behavior on a form, you may want to call `event.preventDefault()` to prevent the browser's default behavior."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you no longer need a particular event listener, you can remove it using [`removeEventListener`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you want information about the event that happened, you can look at the event object that the browser passes to your callback function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are many properties on the event object, you can see [a full list here](https://developer.mozilla.org/en-US/docs/Web/API/Event)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To make sure that the browser calls a particular function when an event happens on an element, you must use [`document.addEventListener`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can pass many valid strings as the first argument, see the event types article."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var buttonEl = document.getElementById(\"clicker\");\n"
"var onButtonClick = function() {\n"
"    console.log(\"Oh golly gosh, you clicked me\");\n"
"};\n"
"buttonEl.addEventListener(\"click\", onButtonClick);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var faceEl = document.getElementById(\"face\");\n"
"var onFaceClick = function(e) {\n"
"    console.log(\"You clicked \" + e.clientX + \" , \" + e.clientY);\n"
"};\n"
"faceEl.addEventListener(\"click\", onFaceClick);\n"
"// later...\n"
"faceEl.removeEventListener(\"click\", onFaceClick);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-events/a/summary-dom-events</a>.
# Article is at (x7bf86932) on the bn stage.
# Article is at (x7bf86932) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var faceEl = document.getElementById(\"face\");\n"
"var onFaceClick = function(e) {\n"
"    console.log(\"You clicked \" + e.clientX + \" , \" + e.clientY);\n"
"};\n"
"faceEl.addEventListener(\"click\", onFaceClick);\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>
# Title of tutorial article (x693fa705) on the bn stage
# Title of tutorial article (x693fa705) on the pl stage
# Title of tutorial article (x693fa705) on the pt stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Summary: DOM modification techniques"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Creating elements from scratch"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Modifying an existing element"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Modifying attributes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Modifying class names"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Modifying inner HTML / text"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Modifying styles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Generally, you should be careful when using either of these 2 properties, because they will also remove event listeners (which we teach in the next tutorial)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you don't need to pass in HTML tags, you should use [`textContent`](https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent) instead:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you want to remove an attribute, you should do that with [`removeAttribute`](https://developer.mozilla.org/en-US/docs/Web/API/Element.removeAttribute) - like to remove the `disabled` attribute off a button, effectively enabling it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In [newer browsers](http://caniuse.com/#search=classList), you can use the [`classList`](https://developer.mozilla.org/en-US/docs/Web/API/Element.classList) functionality instead:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In addition, you can also use the [`setAttribute`](https://developer.mozilla.org/en-US/docs/Web/API/Element.setAttribute) method, like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Remember to \"camelCase\" the multi-word CSS property names, since hyphens are not valid JS property names:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "Similarly, you can also use [`insertBefore`](https://developer.mozilla.org/en-US/docs/Web/API/Node.insertBefore), [`replaceChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node.appendChild), `[removeChild](https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild), and [insertAdjacentHTML](https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML).`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That will override any existing classes, so you should do this instead if you just want to add to the list of classes:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There is a whole set of functions that you can use to create entirely new elements and add them to the page."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To add a class to an element, you can set the `className` property:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To append it to the page, call [`appendChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node.appendChild) on the target parent element:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To completely replace the contents of an element with an arbitrary string of HTML, use [`innerHTML`](https://developer.mozilla.org/en-US/docs/Web/API/Element.innerHTML):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To create a new element, use the aptly named [`createElement`](https://developer.mozilla.org/en-US/docs/Web/API/document.createElement):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We covered various ways that you can modify aspects of an existing element:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can change styles just like how you change attributes, by accessing the `style` property of the element, and setting the corresponding property. For example, to change the color:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can set an attribute on an element by setting the property of the same name. For example, to change the `src` of an `<img>`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"document.body.appendChild(imgEl);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"headingEl.style.backgroundColor = \"salmon\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"headingEl.style.color = \"hotpink\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"imgEl.removeAttribute(\"disabled\");\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"imgEl.setAttribute(\"src\", \"http://www.dogs.com/dog.gif\");\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"imgEl.src = \"http://www.dogs.com/dog.gif\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mainEl.classList().add(\"warning\");\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mainEl.className += \" warning\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mainEl.className = \"warning\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mainEl.innerHTML = \"cats are the <strong>cutest</strong>\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mainEl.textContent = \"cats are the cutest\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the bn stage.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var imgEl = document.createElement(\"img\");\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques">http://translate.khanacademy.org/computing/computer-programming/html-css-js/html-js-dom-modification/a/summary-dom-modification-techniques</a>.
# Article is at (x693fa705) on the pl stage.
# Article is at (x693fa705) on the pt stage.
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Similarly, you can also use [`insertBefore`](https://developer.mozilla.org/en-US/docs/Web/API/Node.insertBefore), [`replaceChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node/replaceChild), [`removeChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild), and [`insertAdjacentHTML`](https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML)."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>
# Title of tutorial article (x4e6daf99) on the bn stage
# Title of tutorial article (x4e6daf99) on the pl stage
# Title of tutorial article (x4e6daf99) on the pt stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "The world of JS libraries"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## CSS frameworks"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## JS app architecture libraries"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## JS browser libraries"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Mini libraries & microlibraries"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Web frameworks"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   DOM manipulation\n"
"*   DOM Events\n"
"*   AJAX / Data retrieval\n"
"*   Effects & animation\n"
"*   HTML templating\n"
"*   Page layout\n"
"*   UI widgets\n"
"*   Graphics & charts\n"
"*   Data modeling\n"
"*   Routing & navigation\n"
"*   Accessibility\n"
"*   Multi-browser support\n"
"*   Mobile support"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   DOM: [tinyDOM](https://github.com/ctult/TinyDOM)\n"
"*   Events: [Events.js](https://github.com/kbjr/Events.js)\n"
"*   AJAX: [MicroAjax](http://code.google.com/p/microajax/)\n"
"*   Animation: [Morpheus](https://github.com/ded/morpheus), [Viper](https://github.com/alpha123/Viper)\n"
"*   Data Modeling: [Spine](https://github.com/spine), [Knockout](http://knockoutjs.com/)\n"
"*   Templates: [Handlebars](http://handlebarsjs.com/), [Mustache](https://github.com/janl/mustache.js)\n"
"*   Routing: [PathJS](https://github.com/mtrpcic/pathjs)\n"
"*   Object-Orientation: [Classy](http://www.pocoo.org/projects/classy/), [Klass](https://github.com/ded/klass)\n"
"*   Graphics: [Processing.JS](http://processingjs.org/) (See [example on KA](/computer-programming/processingjs-inside-webpages-template/5157014494511104)), [RaphaelJS](http://code.tutsplus.com/tutorials/an-introduction-to-the-raphael-js-library--net-7186) (See [example on KA](/computer-programming/example-js-library-raphaeljs/6507593544630272)), [D3](http://d3js.org/), [Three.JS](http://threejs.org/) (See [example on KA](/computer-programming/example-js-library-threejs/6158072058871808)), [Paper.js](http://paperjs.org/)\n"
"*   Charts: [gRaphael](http://www.javascriptoo.com/graphael), [High Charts](http://www.highcharts.com/)\n"
"*   Date/time: [moment.js](http://momentjs.com/)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [Facebook React](https://facebook.github.io/react/) + [Facebook Flux](https://facebook.github.io/flux/)\n"
"*   [Backbone](http://backbonejs.org/)\n"
"*   [AngularJS](https://angularjs.org/)\n"
"*   [EmberJS](http://emberjs.com/)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [Twitter Bootstrap](http://getbootstrap.com/) (See [example on KA](/computer-programming/css-library-example-bootstrap/4697699761913856))\n"
"*   [ZURB Foundation](http://foundation.zurb.com/) (See [example on KA](/computer-programming/example-css-library-zurb/6648586516430848))\n"
"*   [Pure CSS](http://purecss.io/)\n"
"*   [Topcoat](http://topcoat.io/)\n"
"*   [Skeleton](http://getskeleton.com/)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [jQuery UI](https://jqueryui.com/)\n"
"*   [jQueryMobile](https://jquerymobile.com/)\n"
"*   [Dojo](https://dojotoolkit.org/)\n"
"*   [Sencha](https://www.sencha.com/)\n"
"*   [QooxDoo](http://qooxdoo.org/)\n"
"*   [Closure](https://developers.google.com/closure/)\n"
"*   [KendoUI](http://www.telerik.com/kendo-ui)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [jQuery](https://jquery.com/) (The most popular library, by far! - See [example on KA](/computer-programming/crocodile-order-form/5090752502824960))\n"
"*   [ZeptoJS](http://zeptojs.com/)\n"
"*   [MooTools](http://mootools.net/)\n"
"*   [dollardom](https://github.com/julienw/dollardom)\n"
"*   [QuoJS](https://github.com/soyjavi/QuoJS)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A CSS library is a collection of CSS style rules, and documentation that shows you what HTML tags and classes to use. There are many popular CSS libraries that will make it easier for you to make a beautifully styled website. They sometimes include optional JavaScript widgets, but developers often choose to use other JS libraries with a CSS library."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram showing different ways of breaking a webapp into UI, interactivity, and data."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Have you tried out a JS library in your webpages here on Khan Academy? Share it in the comments below."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's another way I like to think of it - a webpage is made up of the User Interface (HTML & CSS), Interactivity (JS + DOM), and Data (which we often bring in through JS). You can make your data-driven interactive UI without a library, or you can bring in different libraries to help out with different parts. Some libraries will do a lot, some will do just one part:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One of the hardest parts of web development is deciding what libraries to use, because you'll often be writing code that builds on top of the libraries, and it's hard to change your decision later. There's no right answer - know your options, then make an educated guess."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are some libraries that \"do it all\" - everything from data retrieval to DOM manipulation to fancy UI widgets. If you use one of these frameworks, you'll typically be bringing a lot of JavaScript into your page, so you'll want to make sure you really need most of what the framework is offering you. For some developers, these frameworks do _too much_, and they find it better to use smaller libraries with more focused tasks."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are thousands of JavaScript libraries that you could bring into your webpage, and many aspects of your webpage that they can help you with:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "These are libraries that will make it easier for you to use browser functionality - like the DOM API, the window methods - the topics we discussed in this course. They often make it possible to accomplish the same thing in less code, and they'll take care of cross-browser bugs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "These libraries help you with your web apps as they grow larger. Your code might be manageable now, at a few hundred lines of code, but once you get to thousands of lines of code, your code might become \"spaghetti code\" - an unmanageable mess. These libraries help you separate your \"model\" (data) from your \"view\" (presentation), and often use object-oriented programming principles to organize your code."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can also use small libraries that developers have written for a specific task - when they're really small, they're sometimes called \"microlibraries\". Here's a smattering:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can find more at microjs.com or just by searching the internet for \"javascript library [functionality]\" for whatever functionality you're looking for."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# Article is at (x4e6daf99) on the bn stage.
# Article is at (x4e6daf99) on the pl stage.
# Article is at (x4e6daf99) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c6240e4be5168ab4d0c4ddda22e7b847470a6a58.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   DOM: [tinyDOM](https://github.com/ctult/TinyDOM)\n"
"*   Events: [Events.js](https://github.com/kbjr/Events.js)\n"
"*   AJAX: [MicroAjax](http://code.google.com/p/microajax/)\n"
"*   Animation: [Morpheus](https://github.com/ded/morpheus), [Viper](https://github.com/alpha123/Viper)\n"
"*   Data Modeling: [Spine](https://github.com/spine), [Knockout](http://knockoutjs.com/)\n"
"*   Templates: [Handlebars](http://handlebarsjs.com/), [Mustache](https://github.com/janl/mustache.js)\n"
"*   Routing: [PathJS](https://github.com/mtrpcic/pathjs)\n"
"*   Object-Orientation: [Classy](http://www.pocoo.org/projects/classy/), [Klass](https://github.com/ded/klass)\n"
"*   Graphics: [Processing.JS](http://processingjs.org/) (See [example on KA](https://www.khanacademy.org/computer-programming/processingjs-inside-webpages-template/5157014494511104)), [RaphaelJS](http://code.tutsplus.com/tutorials/an-introduction-to-the-raphael-js-library--net-7186) (See [example on KA](https://www.khanacademy.org/computer-programming/example-js-library-raphaeljs/6507593544630272)), [D3](http://d3js.org/), [Three.JS](http://threejs.org/) (See [example on KA](https://www.khanacademy.org/computer-programming/example-js-library-threejs/6158072058871808)), [Paper.js](http://paperjs.org/)\n"
"*   Charts: [gRaphael](http://www.javascriptoo.com/graphael), [High Charts](http://www.highcharts.com/)\n"
"*   Date/time: [moment.js](http://momentjs.com/)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [Twitter Bootstrap](http://getbootstrap.com/) (See [example on KA](https://www.khanacademy.org/computer-programming/css-library-example-bootstrap/4697699761913856))\n"
"*   [ZURB Foundation](http://foundation.zurb.com/) (See [example on KA](https://www.khanacademy.org/computer-programming/example-css-library-zurb/6648586516430848))\n"
"*   [Pure CSS](http://purecss.io/)\n"
"*   [Topcoat](http://topcoat.io/)\n"
"*   [Skeleton](http://getskeleton.com/)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [jQuery](https://jquery.com/) (The most popular library, by far! - See [example on KA](https://www.khanacademy.org/computer-programming/crocodile-order-form/5090752502824960))\n"
"*   [ZeptoJS](http://zeptojs.com/)\n"
"*   [MooTools](http://mootools.net/)\n"
"*   [$dom](https://github.com/julienw/dollardom)\n"
"*   [QuoJS](https://github.com/soyjavi/QuoJS)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   DOM: [tinyDOM](https://github.com/ctult/TinyDOM)\n"
"*   Events: [Events.js](https://github.com/kbjr/Events.js)\n"
"*   AJAX: [MicroAjax](http://code.google.com/p/microajax/)\n"
"*   Animation: [Morpheus](https://github.com/ded/morpheus), [Viper](https://github.com/alpha123/Viper)\n"
"*   Data Modeling: [Spine](http://spinejs.com/), [Knockout](http://knockoutjs.com/)\n"
"*   Templates: [Handlebars](http://handlebarsjs.com/), [Mustache](https://github.com/janl/mustache.js)\n"
"*   Routing: [PathJS](https://github.com/mtrpcic/pathjs)\n"
"*   Object-Orientation: [Classy](http://www.pocoo.org/projects/classy/), [Klass](https://github.com/ded/klass)\n"
"*   Graphics: [Processing.JS](http://processingjs.org/) (See [example on KA](https://www.khanacademy.org/computer-programming/processingjs-inside-webpages-template/5157014494511104)), [RaphaelJS](http://code.tutsplus.com/tutorials/an-introduction-to-the-raphael-js-library--net-7186) (See [example on KA](https://www.khanacademy.org/computer-programming/example-js-library-raphaeljs/6507593544630272)), [D3](http://d3js.org/), [Three.JS](http://threejs.org/) (See [example on KA](https://www.khanacademy.org/computer-programming/example-js-library-threejs/6158072058871808)), [Paper.js](http://paperjs.org/)\n"
"*   Charts: [gRaphael](http://www.javascriptoo.com/graphael), [High Charts](http://www.highcharts.com/)\n"
"*   Date/time: [moment.js](http://momentjs.com/)"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>
# Title of tutorial article (xcd601ed3) on the bn stage
# Title of tutorial article (xcd601ed3) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "What's a JS library?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But first, how do you actually use a library? I'll show you that next!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, here's a snippet of the [documentation for Galleria](http://galleria.io/docs/api/methods/), a popular JS library for making slideshows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, here's one from [National Geographic](http://news.yahoo.com/photos/125-years-of-national-geographic-stunning-photography-since-1888-1380118227-slideshow/jou-jou-captive-chimpanzee-reaches-out-it%C3%A2s-hand-to-dr-jane-goodall-in-brazzaville-zoo-brazzaville-photo-1380113767228.html):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's one from [BBC](http://www.bbc.com/news/in-pictures-33642538#1):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How do we know what functions we can use? We could look at the JavaScript file, if it's short, or better, we could look at the **documentation**. Most libraries have documentation with a list of available functions or a real-world example."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In JavaScript, the way we do that is by using a **library**. A library is a JavaScript file that contains a bunch of functions, and those functions accomplish some useful task for your webpage."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, it's possible that every one of those web developers wrote their own JavaScript code to make a slideshow, but a lot of them probably re-used the same code. As programmers, we should re-use existing code when we can, so that we don't waste our time writing code that another programmer has already written."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One more, from [The Onion](http://www.theonion.com/slideshow/6-dogs-who-know-how-to-have-fun-35356#6):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of a slideshow from BBC"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of a slideshow from National Geographic"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of a slideshow from The Onion"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of the documentation for Galleria"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are a billion webpages, and many of them are interactive in some way - in fact, many of them are interactive in the same ways. How many websites have you seen that use a slideshow? I've seen hundreds, myself!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When a programmer creates a JS library and puts it out into the world, they're purposefully deciding to share it with the world - so that often means they put in the effort to come up with great documentation and examples. Perhaps one day you will decide to create a library of some functionality that you find really useful and share it with the world."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/69e65160fc339784bee301cf52b990d06ec6f212.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/8203dfdf1fd16be97ca593e0a88e8a4d0658e4c0.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/b6024d631a613023729c0efd78af559d62f6882e.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library</a>.
# Article is at (xcd601ed3) on the bn stage.
# Article is at (xcd601ed3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/debfa86fd676dd88356ca91020b7df4127cbf82c.png"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>
# Title of tutorial article (x59601445) on the bn stage
# Title of tutorial article (x59601445) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Where are JS libraries hosted? "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you were working on a webpage on your own computer and you had all the files downloaded, then you could use a \"relative\" URL instead, like simply `slideshow.js` or `lib/slideshow.js` if it was inside a folder named `lib`. When you're working locally, make sure you open up your browser's network panel to make sure it found all the local resources like your JS files and CSS files. If the browser couldn't find a resource, you'll see a 404, and you can debug the URL and file location."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Now, back to this URL:\n"
"`https://cdn.rawgit.com/pamelafox/a8b77c43f56da1753348/raw/slideshow.js`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "On Khan Academy, we use a security mechanism called [CSP](http://www.html5rocks.com/en/tutorials/security/content-security-policy/) in our webpage environment to make sure that you can only bring in resources from servers we trust: [bootstrapcdn.com](http://getbootstrap.com/), [rawgit.com](http://rawgit.com/), [googleapis.com](https://developers.google.com/speed/libraries/), [jsdelivr.net](http://www.jsdelivr.com/), and [cdnjs.com](https://cdnjs.com/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "On your own websites, you'll need to make the decision whether to serve the JS library from your own server or include it from an external CDN. Most big websites decide to host libraries on their own server, because they can have more control and make optimizations like combine multiple libraries into a single JS file for better loading performance. It's up to you -- just keep in mind everything we talked about here!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That URL is an \"absolute\" URL, which means that it includes the protocol and domain. When we include JS libraries in the Khan Academy environment, we must use an absolute URL so that the environment knows the full path to the library."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The protocol is `https` - that means it’s a secure URL. We only allow you to bring in secure resources in Khan Academy webpages, and that's a best practice in web development. Not all servers have SSL enabled yet, however, so you may sometimes have to start URLs with `http` in your projects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The server is `cdn.rawgit.com`, and it's an example of a \"CDN\" - a \"content delivery network.\" CDNs are optimized for serving static files like JS libraries and serving them very quickly. There are a few big CDNs that host multiple JS libraries (like [Google's CDN](https://developers.google.com/speed/libraries/) and [cdnjs](https://cdnjs.com/)), and there are some libraries that have their own dedicated CDN. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"When we included the slideshow JS library in our webpage in the previous talk-through, we typed this URL:\n"
"`https://cdn.rawgit.com/pamelafox/a8b77c43f56da1753348/raw/slideshow.js`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/where-are-js-libraries-hosted</a>.
# Article is at (x59601445) on the bn stage.
# Article is at (x59601445) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you bring a JS library into your webpage from a CDN -- or any server that's not your own -- you should trust that server. A malicious server could replace the JS library with code that stole your user's data and sent it somewhere, and you certainly don't want that to happen!"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>
# Title of tutorial article (x6f3c4947) on the bn stage
# Title of tutorial article (x6f3c4947) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Which JS library should you use?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Will it be a good developer experience?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Will it be a good user experience?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **File size**: How much will it contribute to how much JS  your users have to download? For context, jQuery gzipped and minified is 18k and Select2 is 7K.\n"
"*   **Performance**: Besides size, other aspects of a JS library can affect its performance, like if it does heavy DOM manipulation, graphics rendering, computation, synchronous storage calls, etc. Look for promises of great performance on the documentation, and of course, try it out yourself.\n"
"*   **Browser support**: Check that it supports all your desired browsers. Many libraries these days purposefully don't support older browsers (which your webpage may need to support), because they're designed to be lightweight and only for mobile browsers.\n"
"*   **Accessibility**: Many libraries for UI components look great, but they are not accessible (they do not work well for users with visual disabilities). For a quick check, you can run [WAVE](http://wave.webaim.org/) on the library's demos page.\n"
"*   **Responsive**: If your users will ever use the UI component from a library on a mobile browser, then it should work well for them there. Are the buttons big enough? Does it use touch events? Does it scale to small screen sizes?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Number of forks**: Lots of forks (or stars) means there are at least a lot of developers that cared enough to fork the library. That doesn't mean they'll help you, but it's a start! Large libraries often have thousands of forks, more niche libraries have 100s or 10s of forks.  \n"
"*   **Number of issues**: Are there many open issues? That might be a sign that there's not a community effort around responding and closing issues. It can also mean it's just a very popular project with a lot of ideas for improvement, so continue on to the next point.\n"
"*   **Vibe on issues**: Read through a few issues and pull requests. Are the maintainers receptive to feedback? Do they answer usage questions? Do you get a positive or negative vibe from the conversations on them?  \n"
"*   **External community**: Are questions about the library answered on StackOverflow? Are there libraries that build on top of the library? Many smaller libraries won't be big enough to have a visible external community, but bigger ones like Modernizr or Backbone have significant ones, and that's a big motivation for using them. You can do a search on the internet for the library name to see what kind of results you find.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Well documented**: It should be easy to find a reference of function signatures, demos of actual usage, and a more narrative how-to-use guide. If a library has no documentation, it's usually a sign that they are not the most developer-friendly.\n"
"*   **Flexible**: The demos in the documentation might look great - but might want to use a library in a slightly or completely different way than what the demos show. Look for signs of flexibility - Is it easy to send in configuration options? Is there a documented plugin architecture? Does it trigger many events that you could hook your code into? \n"
"*  **Actively maintained**: Browsers change frequently. Libraries that once worked can suddenly stop working, because they relied on some quirk of the browser that changed. This is specially true of [HTML5 shims and polyfills](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills), because browsers are frequently releasing new versions with evolving implementations of the HTML5 elements. Check the date of the most recent commit.  \n"
"*   **Future thinking**: If you're looking for an HTML5 \"shim\", prefer a \"polyfill\" - a shim that mimics the API. That way, theoretically, when all your users were using browsers that supported the technology, you'd be able to stop using the library entirely, with no change to your code at all. For example, if you're using a library to use video in your webpage, use a polyfill that will let you use the HTML5 `video` tag, and it will replace it with a fallback technology like Flash in older browsers.   \n"
"*   **Tested**: All good libraries should include tests that make sure their functionality works as expected. When a library is tested, then we can have confidence there will be some degree of backwards compatibility in new versions of the library.  \n"
"*   **Clean code**: We could treat open-source libraries as black boxes, and refuse to look inside of them, but sometimes, you may need to dig inside of the library code to debug an issue or add a new bit of functionality. Take a quick look at the code and see how easy it is to read, and if it has any red flags, like big chunks of commented-out lines of code. \n"
"*   **Responsive community**: You *will* have questions. You *will* encounter bugs. Ideally, you'll be able to figure them out with developers, whether that's the maintainers or users."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But too many choices can turn into decision paralysis for us web developers. How do we know which one is best? What if we make the wrong choice?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If the JS library does not create a UI component, then only the first few of these matter."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If the library is hosted on a version control site like Github, you can look at:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you've considered all that criteria, and still can't decide between a handful of libraries, then you might try the call-a-friend approach: ask colleagues or developer friends what library they use. You might just find a crowd favorite."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Remember: there isn't one right answer, there isn't one best choice. Also, you don't have to comprehensively review every JS library you are thinking about using, especially if you're working on projects for your own. You can just pick a library and see what you like about it while you use it. You'll start to build a list in your head of your favorite libraries to use, and your own criteria for libraries, and that will help you in your future decisions."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since a JS library is often used when developing a user-facing product, these considerations should satisfy two audiences: the developers that must code and maintain the code that uses the library (like you!), and the users that will interact with it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are a huge number of libraries out there, and for any given bit of functionality, there are likely *multiple* libraries that accomplish that bit of functionality. For example, there are so many date-picker libraries out there, that there are articles like [\"Top 15 jQuery DatePickers\"](http://www.smashingapps.com/2012/01/19/15-jquery-calendar-date-picker-plugins.html) to try to help developers pick from them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use">http://translate.khanacademy.org/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use</a>.
# Article is at (x6f3c4947) on the bn stage.
# Article is at (x6f3c4947) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There's often not a single \"best choice\" in web development. But there are often better choices than others, and thinking through the considerations below can help you make the better choice."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>
# Title of tutorial article (xcbf6fe3e) on the bn stage
# Title of tutorial article (xcbf6fe3e) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Planning your webpage"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid " Once you've made your wireframes, you might want to do another round of user testing. Some wireframing tools let you share your wireframes for others to comment on. There are also tools like [InvisionApp](http://www.invisionapp.com/) that let you create interactive wireframes, where clickable areas lead to new screens."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Brainstorming"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Paper prototyping"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Wireframes "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A good next step is to create a paper prototype—your webpage, but on paper. It's a sketch of the components of your webpage, with scribbles for content and boxes for elements. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After you generate lots of ideas, you'll need to decide which ones you actually want to pursue. Prioritize the ones you're most excited about—try starring them or moving them into a list—and discard the rest or save them for later."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After you've made a prototype, you might want to do some user testing. Show the prototype to a friend, then ask them what they'd click first or where their eyes travel to. See if they have any other feedback."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Below is a paper prototype for SF quiche, a web app that will satisfy all your quiche-finding needs:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How can you turn a blank page into the webpage of your dreams? You could just start writing HTML and CSS—changing things along the way, removing things you don't like, adding things you suddenly think of, and rearranging parts of the page. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you're feeling pretty good about your paper prototypes, you might want to turn them into wireframes. A wireframe is like a prototype, but it's typically digitally drawn and more precise.  A wireframe is made up of boxes that represent each part of a page, plus small bits of text and icons as needed. For example, below is a wireframe of our SF quiche app:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of a paper prototype of SF quiche app"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of a wireframe of SF quiche app"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since it doesn't take much time to make a paper prototype, you can iterate quickly and not feel too stuck to your original design. You can also make a few different prototypes at once, and you can make prototypes for multiple pages of your site. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's not always the best strategy, however, as it can lead to a lot of wasted time writing HTML and CSS that you later discard. Instead, you should plan your webpage before you actually build it. You can figure out content, layout, and even the look and feel."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first step of planning anything is often brainstorming—figuring out anything and everything you might want to do. You brainstorm by drawing mind maps on paper, jotting notes in a document, or by putting post-it notes on a board. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This wireframe was created in a popular online prototyping tool called [MyBalsamiq](https://balsamiq.com/products/mockups/mybalsamiq/). You can also make wireframes using the shape tools in office tool—like Powerpoint/Keynote—or by using design apps like Photoshop, Gimp, or InDesign. You can also search for more prototyping tools online. Keep in mind that many wireframing apps cost money when you're deciding which to use."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can brainstorm by yourself or—if you want to multiply the range of ideas—enlist a collaborator to brainstorm with you. While you're brainstorming with a collaborator, use the \"Yes, and…\" approach. Don't focus on what won't work about your collaborator's ideas; focus on what might work and which related things might work."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/5b86e3d507b70566e689ac50f218ccb7028be90b.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage">http://translate.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/a/planning-your-webpage</a>.
# Article is at (xcbf6fe3e) on the bn stage.
# Article is at (xcbf6fe3e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/68f0d4b10ecf20e1ea202d1f581a3cbbdaa327ac.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Hosting webpages on a server"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Keep learning"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Making webpages outside Khan Academy"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## More CSS selectors and properties"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## More HTML tags"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Using JS in webpages"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **CSS3**: We covered CSS that's been supported in browsers for years, but there are many new CSS properties and selectors in what's known as the \"CSS3\" specifications, and browsers are adding support continuously as they release new versions. Learn many [from these slides](https://dl.dropboxusercontent.com/u/10998095/css3-workshop/index.html#slide1) and check [caniuse.com](http://caniuse.com) to see what's supported in each browser.\n"
"*   **Media queries**: This is a technique that lets you specify different CSS for different situations, like when your webpage is viewed at a smaller size or when it's printed. Learn more [with these slides](http://www.teaching-materials.org/csstools/#slide2).\n"
"*   **CSS frameworks**: A framework is a collection of CSS rules and classes, and many developers use CSS frameworks to enable them to write CSS faster. The most popular one is [Twitter Bootstrap](http://getbootstrap.com/), but there's also [ZURB foundation](http://foundation.zurb.com/), [Pure CSS](http://purecss.io/), [Topcoat](http://topcoat.io/), and more."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Form tags**: There are quite a few tags that are used to create web forms, like [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button)s and [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input)s. They are typically used to communicate data back to a server, something which we don't enable on Khan Academy. They can also be used with JS to create a game, which we do teach in the HTML/JS course. Learn more about form tags [with these slides](http://www.teaching-materials.org/htmlcss-1day/html-forms/slides.html#slide1). Learn server-side languages like PHP, Python, Ruby on [Codecademy](http://codecademy.com).\n"
"*   **Iframes**: The [`<iframe>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe) tag is a way to frame another webpage inside yours, and is handy for things like embedding Youtube videos, Google Maps, etc. That tag is disabled on Khan Academy currently for security and moderation purposes, but can be experimented with elsewhere. Learn more [with these slides](http://www.teaching-materials.org/htmlcss-1day/html-embeds/slides.html#slide1).\n"
"*   **Multimedia tags**: The [`<audio>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio) and [`<video>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video) tags are supported in modern browsers as a way to play audio and video files on webpages. Like the `<iframe>` tag, they are currently disabled on Khan Academy, but can be used elsewhere. Learn more [with these slides](http://www.teaching-materials.org/multimedia/).\n"
"*   **New semantic tags**: In the past few years, as part of the \"HTML5\" specification, browsers have added new semantic tags for developers to use instead of `<div>`s, like `<article>`, `<aside>`, `<nav>`, etc. There are many [articles about them here](http://html5doctor.com/article-archive/), including [this handy flowchart](http://html5doctor.com/downloads/h5d-sectioning-flowchart.png) for deciding when to use them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Congratulations on learning HTML and CSS fundamentals! You now understand a lot of what goes into the webpages you see around the internet, and you should hopefully be able to look at those webpages and start to recognize the HTML tags and CSS properties in use."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "First, you'll have to find a company that will host your site. There are many hosting providers out there, with varying degrees of flexibility and price. Learn more [from these slides](http://www.teaching-materials.org/hosting/slides.html#slide1)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "HTML and CSS are constantly changing, because browsers release improvements so often and the web development community is an active one. One of our favorite ways to keep up-to-date is to subscribe to [HTML5 weekly](http://html5weekly.com/), a newsletter with links to articles and demos. Of course, whenever you learn something new, you should try it out to really understand how it works."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you want to code outside of the browser, you can download an IDE and save your webpages as \".html\" files. Popular IDEs are [Notepad++ (Windows only)](http://notepad-plus-plus.org/), [SublimeText](http://www.sublimetext.com/), [Adobe Brackets](http://brackets.io/), [Coda](https://panic.com/coda/), and [TextWrangler](http://www.barebones.com/products/textwrangler/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you have a web host, you can transfer your files to the server with an FTP client like FileZilla. That's a program that connects directly to the server and allows you to browse, download and upload files to and from the server. You might also be able to SSH into the server and directly edit the files on that machine."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That means that if you want to learn to make your webpages interactive, you both need to learn the fundamentals of the JavaScript language (which you can do here on Khan Academy), plus you need to learn the DOM API (which you can learn in our [course here](/html-css-js))."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then you will also want to create a domain name, like \"mycoolname.com\", so that your site can be a part of your identity. Sometimes you can do that with your hosting provider, but often times, you use a different domain name registrar for that. Learn more [from these slides](http://www.teaching-materials.org/domains/slides.html#slide1)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There is a whole lot more that you can do to build on your HTML and CSS knowledge, however. Read on!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We host the webpages that you create here on Khan Academy on our own server, but you may want to set up your own web presence."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We love to see you making cool webpages here and sharing what you're learning with the community, but we also think its a great thing to experience other code editing environments and get to experiment with functionality that we don't have enabled. If you want to continue coding inside the browser (especially if you're on a ChromeBook), you can try [JSBin.com](http://www.jsbin.com), [JSFiddle.net](http://jsfiddle.net), [Cloud9 IDE](http://c9.io), or [Mozilla Thimble](http://thimble.webmaker.org)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Web developers use JavaScript to make webpages interactive, to respond to user events and bring in data dynamically from servers. They do that by embedding `<script>` tags inside the HTML, and putting JavaScript inside those tags. Their JS code then uses the \"DOM API\", a set of functions that browsers make available on every webpage to let developers query and manipulate that page."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the bn stage.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You should be able to experiment with all of these on Khan Academy:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/html-css-further-learning-what-to-learn-next</a>.
# Article is at (xd2d98915) on the pl stage.
# Article is at (xd2d98915) on the pt stage.
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "First, you'll have to find a company that will host your site. There are many hosting providers out there, with varying degrees of flexibility and price. "
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>
# Title of tutorial article (x9ccc09f7) on the bn stage
# Title of tutorial article (x9ccc09f7) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Webpage design"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"  * If you change the styling of links too much from the default, users may not realize they're links anymore. \n"
"  * The colors of foreground/background text should contrast enough that your users don't need to squint. Check your colors in [this contrast checker](http://webaim.org/resources/contrastchecker/).\n"
"  * Many humans are color blind. Some color combinations won't have sufficient contrast for them. Check your colors in [this color blindness simulator](http://www.color-blindness.com/coblis-color-blindness-simulator/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Picking good colors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Picking good fonts"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Starting from templates and frameworks"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Using whitespace well"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A CSS framework is a collection of CSS rules that give you a great starting point for a slick website. There are many popular CSS frameworks that will make it easier for you to create a beautifully styled website—[Twitter Bootstrap](http://getbootstrap.com/), [ZURB Foundation](http://foundation.zurb.com/), [Pure CSS](http://purecss.io/), [Topcoat](http://topcoat.io/), and more. You can check out examples of [Twitter Bootstrap](/computer-programming/css-library-example-bootstrap/4697699761913856) and [ZURB foundation](/computer-programming/example-css-library-zurb/6648586516430848) here on Khan Academy."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A template is HTML and CSS that already looks like a complete webpage, often with fake content filled in. You can find templates on [OpenDesigns.org](http://www.opendesigns.org/) or by searching the web for \"free webpage templates\"—and hoping that the ones you find are indeed free! Once you download a template, you can substitute your content and continue modifying the CSS to meet your needs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As you decide on how your palette will translate into CSS, consider a few things:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Besides looking good, you probably also want your webpage to look distinct from other webpages so that it stands out to your users. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "By default, browsers serve webpages with the generic serif font family, which tends to convey a more formal look to a page. You might decide to change that to the generic sans-serif font family, or you might specify a specific font family that's on most users computers, like Garamond or Helvetica."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For an extreme example, here's a comparison of our course page sidebar with and without whitespace:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I once asked my colleague—who's now a designer at Google—what his secret to great design was. His response? Whitespace!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you're not sure about the way you're using your color palette, send it around to a few friends and ask for their honest opinion. Can they read everything? Do they know what's clickable? Do any colors make their noses crinkle? What colors do they love?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you're starting from scratch, you can browse around the palettes at [COLOURLovers](http://www.colourlovers.com/), a community of people who love colors and contribute color, palette, and pattern ideas. Here's a palette named Giant Goldfish:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "My friend is right—whitespace can have a big effect on how good your webpage looks and how easy it is to read. My designer friends sometimes spend hours tweaking whitespace to get it just right, because they know how important it is."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Need help picking a palette? If you already know a few colors that you want to base the palette on, you could head over to [Paletton](http://paletton.com/), a tool that lets you visualize different types of palettes: monochromatic, triads, adjacent colors, and tetrads. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you download a CSS framework, you can browse through the documentation to find examples—they often have templates too!—and figure out what CSS class names will achieve the look you want."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you have a palette picked out, you're to the hard part: figuring out which colors to apply to which parts of your webpage. What color should the headlines be? The links? The text? The background? The great thing about Paletton is that they give you an example webpage that uses the palette:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of a before and after of Khan Academy page with different whitespace"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of a palette of greens"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of color palette of oranges and blues"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of example website using green palette"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of heading on Khan Academy webpage"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of two webpage templates"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's often the hard part—making your webpage look good while also making it look distinct. You can make it awfully distinct by covering everything with zebra stripes and using a 64-pixel font, but should you? Probably not. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To give your webpage a more distinct look, you can also use a custom web font. For example, Khan Academy uses Proxima Sans Nova on all of our pages, a nice sans-serif font:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We've shown you how to make webpages, but we haven't necessarily shown you how to make webpages that *look good*. Of course, beauty is in the eye of the beholder, so it's ultimately up to you—and your users—to decide whether your webpage looks good. We can give you some tips and tricks, though!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What does that mean for you? It's hard to give hard and fast rules about whitespace; just be aware of it. Whenever you have an element that's next to another element, consider how much margin is between them. If you have an element with a background or border, consider how much padding they have. When creating paragraphs and lists, consider if extra line-height would give them some reading room."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When designing a webpage, you often want to use a color palette—a range of colors that work well together and can be used for the various parts of your webpage. These colors might be based on your company logo, they might relate to the theme of the page, or they might just look good together."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you use a web font, you're actually making the user's browser download a font file to the user's computer so you can reference that font file from the CSS. It's an extra download for the browser, so you shouldn't use too many, and you shouldn't include any you don't intend on actually using. One great source of free web fonts is [Google Web Fonts](https://www.google.com/fonts). Check out this [example webpage](/computer-programming/google-web-fonts-example/6665372888072192) on Khan Academy that uses two Google Web Fonts."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you use templates or frameworks, you risk your website looking exactly like another website and thus not standing out as much in your user's mind. To avoid that, add in your own logo and change some key elements like the font family or the background color."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Wherever you get your fonts from, you should watch out for font overload. Generally, you shouldn't use more than two or three font families on a page, and your fonts should pair nicely together. Here's a [helpful website](http://fontpair.co/) that gives examples of Google Web Fonts that pair well together."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Whitespace refers to any blank space between elements, and in CSS land, it usually comes from properties like padding, margin, and line-height."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You might be intimidated after reading all of these guidelines, especially if you don't consider yourselves to have an eye for design. Don't worry, you don't have to be a design expert to have a great looking webpage. Instead, you can start from a template or framework and take advantage of the effort that other designers have put into it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://fastly.kastatic.org/ka-perseus-images/22334d60313fbad22650ff0c5e3edee26efe722a.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://fastly.kastatic.org/ka-perseus-images/46dafd81ca18d2b219db7b56c8ab80975a4b5b02.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://fastly.kastatic.org/ka-perseus-images/67d027ba3a0651938c774012dbe15e811b43eb5f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://fastly.kastatic.org/ka-perseus-images/6b06f5b488380019e081415ae69642052e783cf3.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://fastly.kastatic.org/ka-perseus-images/aa189ec79ff88af33802f060640b73475afd2ed8.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# Article is at (x9ccc09f7) on the bn stage.
# Article is at (x9ccc09f7) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://fastly.kastatic.org/ka-perseus-images/ffa08c44cf05dd4237167e3a08532f15af05dbaa.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design">http://translate.khanacademy.org/computing/computer-programming/html-css/html-css-further-learning/a/webpage-design</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "By default, browsers serve webpages with a the generic serif font family, which tends to convey a more formal look to a page. You might decide to change that to the generic sans-serif font family, or you might specify a specific font family that's on most users computers, like Garamond or Helevetica."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>
# Title of tutorial article (xd144ee6a) on the bn stage
# Title of tutorial article (xd144ee6a) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Quick tip: Selecting by tag name"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As you just learned, we use CSS rules to select elements on a web page so that we can then style those elements."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you are trying to select all the `<h2>`s on the page, you must remove the angle brackets to form the `h2` selector and not add any other symbols."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you are trying to select all the `<h2>`s on the page, you must remove the angle brackets to form the `h2` selector."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's check if that made sense. Which of these rules would select all of the `<h2>` elements on a page?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The element selector selects HTML elements based on their tag names. Each HTML element—`<h1>`, `<p>`, `<li>`, `<body>`—and *any* other HTML element can be selected with CSS by using the tag name without the angle brackets (`<` and `>`). For example, you can select all of the `<p>` tags in your webpage by using the element selector `p`. Here's a CSS rule that changes the color of each paragraph on a web page:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The way we tell our CSS rule which HTML elements to style is by using **selectors**. There are many types of selectors that we'll cover later, but here we just want to review the one we showed in the talk-through: the **element selector**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You got it! The element selector should just be the tag name, no brackets or other symbols."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You'll try out using element selectors with different tag names in the next challenge. As you're experimenting, pay attention to what effect your CSS rules have on the page - which elements change color and don't."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"````\n"
"#h2 {\n"
"   color: rgb(255, 0, 0);\n"
"}````"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"````\n"
"<h2> {\n"
"   color: rgb(255, 0, 0);\n"
"}````"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"````\n"
"h2 {\n"
"   color: rgb(255, 0, 0);\n"
"}````"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-css/a/quick-tip-selecting-by-tag-name</a>.
# Article is at (xd144ee6a) on the bn stage.
# Article is at (xd144ee6a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"````\n"
"p {\n"
"    color: rgb(255, 0, 0);\n"
"}\n"
"````"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Where should your tags go?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Any content that is visible on your web page should go between the opening **<body>** tag and the closing **</body>** tag, like in the screenshot below:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before you dive into the challenge, here's a quick review of HTML tags:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of an HTML tag anatomy"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of HTML code and diagram"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The **<h1>** and **<p>** tags are the contents of the **<body>** tag, so we say they're \"_inside_\" the **<body>** tag. In fact, those tags _must_ go inside the **<body>** tag, so remember that when you're writing your HTML in your first challenge. Try it out now!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The closing tag always comes after the content of the tag - it's how the browser knows that you want the tag to end."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The contents of an HTML tag are the stuff that goes between the opening and closing tags - this is what we mean when we say \"inside\" a tag. The contents of a tag can be normal text or a mix of other tags."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/2b914caea7fdf9df8ff30e4780096d38624cab4f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# Article is at (x0f134878) on the bn stage.
# Article is at (x0f134878) on the pl stage.
# Article is at (x0f134878) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a88dceb91dbddc6f1c031bf92bedb90afca3ff05.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags">http://translate.khanacademy.org/computing/computer-programming/html-css/intro-to-html/a/quick-tip-html-tags</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "The contents of an html tag is the stuff that goes between the opening and closing tags - this is what we mean when we say \"inside\" a tag. The contents of a tag can be normal text or a mix of other tags."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>
# Title of tutorial article (x0dc83fd5) on the bn stage
# Title of tutorial article (x0dc83fd5) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Developing webpages outside of Khan Academy"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Command-line editors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Desktop editors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Online editors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Picking an editor"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A third option is to use a command-line editor. If you're not already familiar with the command line, you probably don't want to go down this route since you'll also need to learn a lot about the command line first. On the other hand, if you love typing and navigating with your keyboard instead of your mouse, you might find you love command-line tools. Two popular command-line editors are Emacs and Vim, and they are often already installed on Unix-based systems like Macs and Linux. Here's a video of me editing a webpage in Vim:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Another option is to use a desktop editor. An app is downloaded to your computer and saves the files to your hard drive. There are lots of desktop editors for you to pick from, depending on what OS and price you're looking for. Some popular desktop editors are Sublime Text, Coda, Atom, and Adobe Brackets. Here's a video of me editing a webpage in Sublime Text:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Bar chart of editor preference—Sublime Text, Vim, Emacs, Atom, in that order."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, our coding editor doesn't let you try *everything*—both for security reasons and because it's hard to host a full-featured editor in such a small space!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you learn HTML/CSS here, you will likely want to start developing webpages in a more full-featured editor outside of Khan Academy, which would add features like multiple files, file search, and custom plugins. In any editor that you use, make sure you save your file with a filename that ends  in \".html\"— that's the file extension that is used for all HTML pages to make sure that both editors and browsers know what they are."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One option is to use an online editor, similar to ours but with additional features. You might want to use an online editor if you have a computer that doesn't let you download apps, like a ChromeBook. Online editors often have multi-person realtime editing tools as well, if that's something you're looking for. Some popular online editors are Cloud9.io, nitrous.io, and Koding.com. Here's a video of me editing a webpage in Cloud9:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "P.S. I polled the Khan Academy engineering team, and here's what we use:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We provide an in-browser coding editor for you here on Khan Academy to make it easy for you to try out HTML, get immediate feedback, and share your work."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Which one should you pick? Well, you're welcome to just keep using the Khan Academy HTML/CSS editor for now. Eventually though, you'll want to get comfortable with at least one other editor. You might want to try out a couple different free options and see which one you like the most. You can also ask around to see what friends and colleagues use. It's often helpful to use whichever tool is most popular with your peers because then you can ask them for help."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/developing-webpages-outside-of-khan-academy</a>.
# Article is at (x0dc83fd5) on the bn stage.
# Article is at (x0dc83fd5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/b424153b3b80abdbfac61861b8be8a55c4e4449e.png"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>
# Title of tutorial article (x1b2aa4de) on the bn stage
# Title of tutorial article (x1b2aa4de) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Using the browser developer tools"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Inspecting CSS"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Inspecting HTML "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Another useful tool is the CSS inspector; with this tool, you can check out which styles gets applied to an element and play with them yourself. Here's a video showing how to use this tool in Chrome:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One great tool is the ability to right click on any element on a webpage and inspect the HTML for that element. Here's a video of how to do that in Chrome:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The browser developer tools which are included in most modern browsers are a big favorite of most developers. Each browser differs in exactly which tools they provide, but they're more similar than they are different."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are lots more tools as well, but those two will give you a great start to being a better web developer. Try inspecting an element on this webpage and see what you find out!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "These tools can both help you understand the structure of other websites and help you debug your own websites."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools">http://translate.khanacademy.org/computing/computer-programming/html-css/web-development-tools/a/using-the-browser-developer-tools</a>.
# Article is at (x1b2aa4de) on the bn stage.
# Article is at (x1b2aa4de) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Web development is tricky. That's why web developers use lots of tools to help them with their jobs—and they're always looking for new tools to add to their toolbox."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>
# Title of tutorial article (xc8da8162) on the bn stage
# Title of tutorial article (xc8da8162) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: DOM animation in jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Animating responsibly"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Changing visibility"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Custom animation"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Animations should always improve the user experience, not make it worse. Animations should help users understand something about the state of your web app or add a touch of fun - they should not slow down the experience unnecessarily and frustrate the user. You can ask users for feedback about your use of animations or work with a designer to decide how and where to animate."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"For simple visibility changes, you can use [`hide()`](https://api.jquery.com/hide/) and [`show()`](https://api.jquery.com/show/):  \n"
"`$(\"#pic\").hide();`  \n"
"`$(\"#pic\").show();` \n"
"[(See example)](/computer-programming/jquery-example-show-hide-toggle/5805110748381184)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you know your user is on a device that doesn't perform well with animations, you can set [`$.fx.off`](https://api.jquery.com/jquery.fx.off/) to `true`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you'd like to animate specific CSS properties, you can use [`animate()`](https://api.jquery.com/animate/):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that you can only animate CSS properties that take numeric values - so you can't use this to animate properties like 'color'. [(See example)](/computer-programming/jquery-example-animate/6147702841278464)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can also attach various callback functions in `animate()`, if you'd like to find out when the animation has progressed or is complete. Check [the documentation](https://api.jquery.com/animate/#animate-properties-options) for more details."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can also chain multiple effects together and call [`delay()`](https://api.jquery.com/delay/) if you'd like a delay between them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"You can also use [`slideDown()`](https://api.jquery.com/slideDown/), [`slideUp()`](https://api.jquery.com/slideUp/) and [`slideToggle()`](https://api.jquery.com/slideToggle/) for sliding effects [(See example)](/computer-programming/jquery-example-slideup-slidedown-and-slidetoggle/4722237555474432) or [`fadeIn()`](https://api.jquery.com/fadeIn/), [`fadeOut()`](https://api.jquery.com/fadeOut/) and [`fadeToggle()`](https://api.jquery.com/fadeToggle/) for fading effects \n"
"[(See example)](/computer-programming/jquery-example-fadein-fadeout-and-fadetoggle/5312653019447296)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"You can also use [`toggle()`](https://api.jquery.com/toggle/), which will decide whether to show or hide based on the current state:\n"
"`$(\"#pic\").toggle();` [(See example)](/computer-programming/jquery-example-show-hide-toggle/5805110748381184)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can pass a callback function as the second parameter to any of those functions, and jQuery will call that callback function when the animation is complete:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"You can pass a duration into any of those functions, and jQuery will then animate the changing of the visibility:\n"
"`$(\"#pic\").toggle(1000);`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`$(\"#pic\").slideUp(300).delay().fadeIn();`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"#pic\").animate({\n"
"       width: \"70%\",\n"
"       opacity: 0.7,\n"
"       padding: 20\n"
"    }, 1000);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"$(\"#pic\").toggle(1000, function() {\n"
"    $(\"body\").append(\"It's here!\");\n"
"});\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# Article is at (xc8da8162) on the bn stage.
# Article is at (xc8da8162) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "jQuery provides a number of functions for animation and effects, which are listed in [its documentation](https://api.jquery.com/category/effects/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-animation-with-jquery/a/review-dom-animation-in-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"#pic\").animate({\n"
"       width: \"70%\",\n"
"       opacity: 0.7,\n"
"       padding: 20\n"
"    }, 1000);"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties</a>
# Title of tutorial article (x70626fce) on the bn stage
# Title of tutorial article (x70626fce) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "What DOM events and properties are there?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties</a>.
# Article is at (x70626fce) on the bn stage.
# Article is at (x70626fce) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"* **mouse events**: 'click' ([example](/computer-programming/jquery-example-mouse-click/6324195041607680)), 'mousedown'/'mouseup' ([example](/computer-programming/jquery-example-mousedownmouseup/6551168493944832)), 'mousemove' ([example](/computer-programming/jquery-example-mousemove/4920886418341888)), 'mouseenter'/'mouseleave' ([example](/computer-programming/jquery-example-mouseentermouseleave-events/5664895501205504))\n"
"* **keyboard events**: 'keydown', 'keypress', 'keyup' ([example](/computer-programming/jquery-example-keyboard-events/5042465149681664))\n"
"* **touch events**: 'touchdown', 'touchup', 'touchstart', ‘touchcancel’ ([example](/computer-programming/jquery-example-touch-events/5875932257714176))\n"
"* **drag events**: 'dragstart', 'dragend' (Many developers use jQueryUI for drag functionality, as it can be tricky to use the drag events directly. Here are examples of [draggable elements](/computer-programming/jquery-example-draggable-elements/6241625051889664) and [drop zones](/computer-programming/jquery-examples-drag-and-drop/6362163139706880).)\n"
"* **form events**: 'submit' ([example](/computer-programming/jquery-example-submit/4745335285612544)), 'change' ([example](/computer-programming/jquery-example-change/6439339173740544)), 'focus'/'blur'  ([example](/computer-programming/jquery-example-focusblur-events/6166706125406208)). \n"
"* **window events**: 'scroll' ([example](/computer-programming/jquery-example-scroll/4757306970079232)), 'reload', 'hashchange'"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties</a>.
# Article is at (x70626fce) on the bn stage.
# Article is at (x70626fce) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A full list of browser events is on [MDN](https://developer.mozilla.org/en-US/docs/Web/Events), but here are some of the most common event types and names, plus examples of using them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties</a>.
# Article is at (x70626fce) on the bn stage.
# Article is at (x70626fce) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Browsers trigger many events. You can use jQuery to add event listeners for any of those events."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/dom-events-and-properties</a>.
# Article is at (x70626fce) on the bn stage.
# Article is at (x70626fce) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you add an event listener and the event happens, jQuery will call your code back with a  [jQuery event object](http://api.jquery.com/category/events/event-object/) that has relevant properties on it. Read [the documentation](http://api.jquery.com/category/events/event-object/) to learn more about what properties are available."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>
# Title of tutorial article (x4628563e) on the bn stage
# Title of tutorial article (x4628563e) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: DOM events in jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Adding an event listener"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Checking DOM readiness"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### More event techniques"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Triggering events"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A shorter version of that is to pass your code to the jQuery function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For a longer summary and deeper dive into jQuery events, read [jQuery Event Basics](https://learn.jquery.com/events/event-basics/#inside-the-event-handler-function) in their documentation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you need to access details about the event, you can find them in the [jQuery event object](https://api.jquery.com/category/events/event-object/) that's passed into the callback function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you want to be sure that the browser does not run your JS code until the DOM is fully loaded and ready, then you can pass your code to [`ready()`](https://learn.jquery.com/using-jquery-core/document-ready/):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that if you include your JS in a `<script>` tag at the bottom of the page, then your DOM should be fully ready by the time the browser runs your JS. However, if you want to be doubly sure, then you can choose to always check for DOM readinesss."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That can be useful when testing new functionality, or when you want some code to run both when the page loads and after some particular event."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That code is not as readable as the longer version, however, so we recommend using the `ready()` function."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can add an event using [`on()`](https://api.jquery.com/on/):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"You can manually trigger an event on an object from your JavaScript using trigger:  \n"
"`$(\"#save-button\").trigger(\"click\");`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"#face-pic\").on(\"click\", function(event) {\n"
"       var mouseX = event.pageX;\n"
"       var mouseY = event.pageY;\n"
"    });\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"#save-button\").on(\"click\", function() {\n"
"       // handle click event\n"
"    });\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(document).ready(function() {\n"
"      $(\"h1\").text(\"Y'all ready for this?\");\n"
"    });\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# Article is at (x4628563e) on the bn stage.
# Article is at (x4628563e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(function() {\n"
"      $(\"h1\").text(\"Y'all ready for this?\");\n"
"    });\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"#face-pic\").on(\"click\", function(event) {\n"
"       var mouseX = event.pageX;\n"
"       var mouseY = event.pageY;\n"
"    });"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"#save-button\").on(\"click\", function() {\n"
"       // handle click event\n"
"    });"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(document).ready(function() {\n"
"      $(\"h1\").text(\"Y'all ready for this?\");\n"
"    });"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-events-with-jquery/a/review-dom-events-in-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(function() {\n"
"      $(\"h1\").text(\"Y'all ready for this?\");\n"
"    });"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>
# Title of tutorial article (xb0438b78) on the bn stage
# Title of tutorial article (xb0438b78) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Project: Extreme Makeover, Webpage Edition"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A large fraction of webpages on the internet include jQuery - so when you visit them, you can open your JavaScript console, and successfully run a line of code like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, you can go to [Twitter](http://www.twitter.com) and replace all the images with an image of a very grumpy cat:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Look how great our Khan Academy account looks now!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Share the code for your webpage makeovers in the Tips/Thanks below. Let's make the web a more beautiful (or cat-iful) place!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That means you can use jQuery to have fun with webpages that aren't your own, and get an idea for how their HTML is composed."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What are some of your favorite websites? Try to find one that has jQuery included (by testing the first line of code) and see what fun ways you can modify it. Some websites limit what resources you can bring into them, so you have to be more creative. For example, Twitter only allows images from Twitter, so I [searched for cat images located on twitter.com](https://www.google.com/search?site=&tbm=isch&source=hp&biw=1438&bih=746&q=site%3Atwitter.com+cat&oq=site%3Atwitter.com+cat&gs_l=img.3...1492.3592.0.3729.20.6.0.14.0.0.121.509.2j3.5.0....0...1ac.1.64.img..16.4.434.bAszcI1DSgs)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`$(\"body\").text(\"Mwahahaha\");`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`$(\"img\").attr(\"src\", \"https://pbs.twimg.com/profile_images/616542814319415296/McCTpH_E.jpg\");`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/project-extreme-makeover-webpage-edition</a>.
# Article is at (xb0438b78) on the bn stage.
# Article is at (xb0438b78) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/04f6653a335eae85c873167dbaab9669ffc41d6e.png"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>
# Title of tutorial article (xb7cc4266) on the bn stage
# Title of tutorial article (xb7cc4266) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: DOM modification with jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Add a class name with [`addClass()`](https://api.jquery.com/addClass/):  \n"
"`$(\"h1\").addClass(\"warning\");` "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Change CSS styles with [`css()`](https://api.jquery.com/css/):  \n"
"`$(\"h1\").css(\"font-family\", \"monospace\");`  \n"
"`$(\"h1\").css({\"font-family\": \"monospace\", color: \"red\"});`\n"
"[(See example)](/computer-programming/jquery-example-css/6664374186541056)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"If you'd like, you can pass in the full HTML, including tag contents, attributes, and styles.  \n"
"`var $p = $('<p style=\"color:red;\">I love people who love cats.</p>');`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Once you create an element, you can modify it using any of the methods above:  \n"
"`$p.addClass(\"warning\");`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you have found a collection of elements using the jQuery function, you can change them using various methods."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Read the jQuery documentation for more details on each of these methods, following the linked method names above. We won't be able to cover everything here, and as web development best practices change quickly, you will need to get good at reading documentation to keep up to date on the latest and greatest. It's good to start working on that skill now!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Set attributes with [`attr()`](https://api.jquery.com/attr/):  \n"
"`$(\".dog-pic\").attr(\"src\", \"dog.jpg\");`  \n"
"`$(\".google-link\").attr(\"href\", \"http://www.google.com\");` [(See example)](/computer-programming/jquery-example-attr/4515659090886656)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Set their inner html with [`html()`](https://api.jquery.com/html/):  \n"
"`$(\"h1\").html(\"I <strong>love</strong> cats\");` [(See example)](/computer-programming/jquery-example-html/4832671566528512)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Set their inner text with [`text()`](https://api.jquery.com/text/):  \n"
"`$(\"h1\").text(\"All about cats\");` [(See example)](/computer-programming/jquery-example-text/5823484014493696)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Then you can append it to an existing element using [`append()`](https://api.jquery.com/append/), :  \n"
"`$(\"#main-div\").append($p);` [(See example)](/computer-programming/jquery-example-append/6024147839352832)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"You can also create new elements from scratch by passing a string of HTML into the jQuery function:  \n"
"`var $p = $(\"<p>\");`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/dom-modification-with-jquery/a/review-dom-modification-with-jquery</a>.
# Article is at (xb7cc4266) on the bn stage.
# Article is at (xb7cc4266) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can also insert it into the page using [`prepend()`](https://api.jquery.com/prepend/) [(See example)](/computer-programming/jquery-example-prepend/6051834003849216) or [`appendTo()`](https://api.jquery.com/appendTo/) [(See example)](/computer-programming/jquery-example-appendto/5886836929593344)."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>
# Title of tutorial article (x6c308a79) on the bn stage
# Title of tutorial article (x6c308a79) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Why process forms with jQuery?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note: Due to a browser bug, form processing won't work in IE 11 in our Khan Academy webpage environment. Please use a different browser if you're currently in IE 11."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of modifying the username on the settings page and getting an error about invalid characters"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of selecting the right answer and seeing that it's correct"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can also use jQuery to create an in-browser quiz or game, like the exercises we have on Khan Academy:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can use jQuery to do form \"validation\" - checking that inputs are the correct format, like the right phone number or length - and then send it off to a server. We do form validation in a few places on the [Khan Academy settings page](/settings/account):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We use forms on the web to get input from our users. Sometimes we send that input to a server to save it, and sometimes we just do something interesting with it in the browser. We often use jQuery to help us process that form, either before sending to a server, or replacing the need for a server entirely."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You'll use the same techniques for both of those sort of uses, and that's what we'll go through now. If you need a review of HTML forms first, [go through these slides](http://www.teaching-materials.org/htmlcss-1day/html-forms/slides.html#slide1)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/9bed9f8f30559a61f5372141fb03512af5b361f9.gif"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/process-forms-with-jquery-intro</a>.
# Article is at (x6c308a79) on the bn stage.
# Article is at (x6c308a79) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/b8dffd4330ed7d46fde3ccaf422c8e4c9819de93.gif"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>
# Title of tutorial article (x2a7e8710) on the bn stage
# Title of tutorial article (x2a7e8710) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: Processing forms with jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "([See a full example here](/computer-programming/jquery-example-submit/4745335285612544))"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you are processing the form entirely in jQuery, then you should call [`preventDefault()`](https://api.jquery.com/event.preventDefault/) to prevent the page reloading:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Inside the callback function, you can reference the form element using the `this` keyword. A common pattern is to call [`find()`](http://api.jquery.com/find/) on the form element, to find only inputs inside the form element:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To process a form with jQuery, you should add an event listener to the form element for the 'submit' event:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you want to know what a user filled out for an input in a form, you typically use [`val()`](http://api.jquery.com/val/):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"form\").on(\"submit\", function() {\n"
"       // process form\n"
"    });\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"form\").on(\"submit\", function() {\n"
"      // store the value of the input with name='age' \n"
"       var age = $(this).find('[name=age]').val();\n"
"    });\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"form\").on(\"submit\", function(event) {\n"
"       event.preventDefault();\n"
"       // process form\n"
"    });\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# Article is at (x2a7e8710) on the bn stage.
# Article is at (x2a7e8710) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```   \n"
"    var answer = $(\"#answer\").val();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"form\").on(\"submit\", function() {\n"
"       // process form\n"
"    });"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"form\").on(\"submit\", function() {\n"
"      // store the value of the input with name='age' \n"
"       var age = $(this).find('[name=age]').val();\n"
"    });"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"form\").on(\"submit\", function(event) {\n"
"       event.preventDefault();\n"
"       // process form\n"
"    });"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/form-processing-jquery/a/review-processing-forms-with-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "    var answer = $(\"#answer\").val();"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>
# Title of tutorial article (x34b1c0df) on the bn stage
# Title of tutorial article (x34b1c0df) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "What to learn after jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Beyond jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### More jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### jQuery plugins"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"* [jQuery Learning Center](https://learn.jquery.com/)\n"
"* [jQFundamentals](http://jqfundamentals.com/)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Congratulations on learning jQuery! You've now learned the most popular JS library on the web today. Not only will you be able to code your websites with jQuery now, but you'll also have an easier time understanding code from other web developers and using any new JS library. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"There are many more libraries to learn that will help you build more powerful websites - like libraries for data visualization or libraries for architecting your code. \n"
"Read through our [list of libraries](/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/the-world-of-js-libraries) and start trying out some more!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To find plugins, you can  search the internet for \"jQuery plugin [desired-functionality]\" like \"jQuery plugin datepicker\" or search the npm [jquery plugin packages](https://www.npmjs.com/browse/keyword/jquery-plugin). Sometimes you'll find multiple plugins that do what you want -- in that case, you can [use these tips](/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use) for deciding which one to use."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We certainly didn't cover all of jQuery here - there are more functions, and more options in the functions that we did cover. Check out the [documentation](http://api.jquery.com/) for every function that you use, to make sure you know all the ways you can use it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can also go through additional tutorials - many of them will probably overlap with what you learned here, but sometimes it helps to hear it from multiple places:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# Article is at (x34b1c0df) on the bn stage.
# Article is at (x34b1c0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "jQuery is a great library that does a lot, but it certainly doesn't do everything. Many web developers bring in additional libraries for specific tasks or UI widgets. A lot of those libraries have been built specifically with jQuery in mind, and we call them \"jQuery plugins\". To use a jQuery plugin, you must first have the jQuery script tag on your HTML page, then a script tag pointing a the plugin's js file. Make sure you load jQuery *before* the plugin. Then after all of that, call the jQuery plugin's function name from your code. You can see [an example here](/computer-programming/example-using-a-jquery-plugin/5629385647456256)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"* [jQuery Learning Center](https://learn.jquery.com/)\n"
"* [jQFundamentals](http://jqfundamentals.com/)\n"
"* [AppendTo: Selectors 101](http://learn.appendto.com/lesson/selectors-101)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/further-learning-jquery/a/what-to-learn-after-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "To find plugins, you can browse search the internet for \"jQuery plugin [desired-functionality]\" like \"jQuery plugin datepicker\" or search the npm [jquery plugin packages](https://www.npmjs.com/browse/keyword/jquery-plugin). Sometimes you'll find multiple plugins that do what you want -- in that case, you can [use these tips](/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/which-js-library-should-you-use) for deciding which one to use."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>
# Title of tutorial article (xa1258967) on the bn stage
# Title of tutorial article (xa1258967) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "History break: How did John build jQuery?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Back in 2006, [John Resig](http://ejohn.org) was a web developer working on his own projects. He was frustrated with how hard it was to write cross-browser JavaScript, and decided to write his own JS library to fix the problem for him: **jQuery**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Many web developers loved the simplicity and power of jQuery, and John's library soon grew in popularity. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "On January 16th, 2006, John Resig [gave a talk](http://ejohn.org/blog/barcampnyc-wrap-up/) about his new library at a local BarCamp, to a small crowd of local web developers, and blogged about it after:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of blog post where John first announces jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of the jQuery Webpage in 2006"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is what the [jQuery webpage](http://jquery.com) looked like [back then](https://web.archive.org/web/20060203025710/http://jquery.com/):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Today, it's the most popular JS library on the web, and is maintained by [the jQuery Foundation](https://jquery.org/team/), a large team of volunteers."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to learn more about why John invented jQuery and how he turned it into a successful library with hundreds of contributors and thousands of developers? Watch this video where UMich School of Information professor Charles Severance interviews John Resig in the Khan Academy office:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/b4583911ca57c38ada5098e23f362e3d40cab36e.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/history-of-jquery</a>.
# Article is at (xa1258967) on the bn stage.
# Article is at (xa1258967) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c03abb27165c7ea955cc4b8a820c5c729a3e9b5b.png"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>
# Title of tutorial article (x6cd5453a) on the bn stage
# Title of tutorial article (x6cd5453a) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Project: DOM detective"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"* All the links.\n"
"* This article.\n"
"* Every image.\n"
"* The sidebar navigation.\n"
"* Your name in the upper right corner.\n"
"* The text that says 'Home'.\n"
"* ...keep going!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now get on your detective hat and start sleuthing around our DOM!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, try to use CSS selectors to find more elements of this Khan Academy page, like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The Khan Academy website includes jQuery, so you can actually open your JavaScript console right now and successfully run this line of code to show you the inner text of all the `<h1>` elements on this page:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to know how many `<h1>` elements there are? Run this line of code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You're welcome to share your selectors in the discussion below, but keep in mind that our HTML constantly changes, so the selectors that once worked might not keep working forever. Also, there are often multiple CSS selectors that can find the same element, so there are lots of right answers out there."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`$(\"h1\").length;`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/project-dom-detective</a>.
# Article is at (x6cd5453a) on the bn stage.
# Article is at (x6cd5453a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`$(\"h1\").text();`"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>
# Title of tutorial article (x42d58c53) on the bn stage
# Title of tutorial article (x42d58c53) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: DOM access with jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Behind the scenes, these jQuery functions all use the DOM API that we taught in the [HTML/JS course](/computing/computer-programming/html-css-js). For example, the `$` function uses methods like `getElementById()` and `querySelectorAll()`, and `attr()` uses the `getAttribute()` method. When you use the `$` function, you get to use those functions in fewer lines of code, and also know that your code will work in all of jQuery's supported browsers, which is especially important when using the more recent DOM API functions."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the next tutorial, you'll learn many more methods to get and set properties of DOM elements."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Many people prefer `$` because it's so short. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that the jQuery function can be named `$` or `jQuery`, so those are the same as:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Once you've found DOM elements with jQuery, you can do things like set their inner contents with [`text()`](https://api.jquery.com/text/#text2):\n"
"`$(\"#temperature\").text(\"89° Fahrenheit\");`\n"
"[(See full example)](/computer-programming/jquery-example-text/5823484014493696)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The jQuery function will always return a jQuery collection of matching elements, even if there is only one matching element -- or none! You can read more about the [jQuery function](https://api.jquery.com/jQuery/) in their documentation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To find DOM elements with jQuery, pass a [valid CSS selector](https://www.w3schools.com/cssref/css_selectors.asp) into the jQuery function:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"You can use the same method [`text()`](https://api.jquery.com/text/#text1) to get the inner content, by passing it 0 parameters:  \n"
"`var heading = $(\"#heading\").text();`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"$(\"h1\"); // selects all the h1s\n"
"$(\"#heading\"); // selects the element with id of \"heading\"\n"
"$(\".warning\"); // selects all the elements with class name of \"warning\"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# Article is at (x42d58c53) on the bn stage.
# Article is at (x42d58c53) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"jQuery(\"h1\");  \n"
"jQuery(\"#heading\");  \n"
"jQuery(\".warning\");  \n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-dom-access/a/review-dom-access-with-jquery</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "To find DOM elements with jQuery, pass a [valid CSS selector](http://docs.webplatform.org/wiki/css/selectors) into the jQuery function:  "
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>
# Title of tutorial article (xe3aba850) on the bn stage
# Title of tutorial article (xe3aba850) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Get ready to learn jQuery"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>.
# Article is at (xe3aba850) on the bn stage.
# Article is at (xe3aba850) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "- **HTML/CSS**: You should know how to use tags like `<h1>`, `<p>`, `<img>`, `<a>`, `<div>`, and know how to make CSS rules that select by id and class name, plus rules that use descendant selectors. You can take [this quiz](/computing/computer-programming/html-css-js/html-css-js-intro/e/quiz--html-css-recap) to see how well you remember all that, and [review any HTML/CSS](/computing/computer-programming/html-css-js/html-css-js-intro/a/review-htmlcss) that you forgot."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>.
# Article is at (xe3aba850) on the bn stage.
# Article is at (xe3aba850) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "- **JS DOM API**: Browsers expose the JS DOM API to give web developers a way to manipulate webpages in JS, and jQuery functions call the DOM functions behind the scenes (like `document.getElementById`). Some web developers choose to learn jQuery without ever learning the DOM API, but we strongly encourage you to learn the DOM API first - and we will refer to it throughout this course. You will likely have to use both in your time as a web developer, and it's valuable to understand how you can use JS in a browser without any library at all. You can learn the DOM API in our [HTML/JS course](/computing/computer-programming/html-css-js) and read the summary articles for a review."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>.
# Article is at (xe3aba850) on the bn stage.
# Article is at (xe3aba850) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "- **JavaScript**: You should be able to store data in variables, group code into functions, iterate over array with loops, and call methods on objects. You can take [this quiz](/computing/computer-programming/html-css-js/html-css-js-intro/e/quiz--javascript-recap) to see how well you remember all that and [review any JS](/computing/computer-programming/html-css-js/html-css-js-intro/a/review-javascript) that you forgot."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>.
# Article is at (xe3aba850) on the bn stage.
# Article is at (xe3aba850) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "- **Using JS libraries**: You should know how to insert a `<script>` tag in your webpage to include a JS library. If you haven't done that before, you can go through this [short tutorial](/computing/computer-programming/html-css-js/using-js-libraries-in-your-webpage/a/whats-a-js-library)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>.
# Article is at (xe3aba850) on the bn stage.
# Article is at (xe3aba850) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what you should be familiar with:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>.
# Article is at (xe3aba850) on the bn stage.
# Article is at (xe3aba850) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you're here, then you're probably geared up to learn jQuery and want to dive in right now. But we want to make sure that you've got all the knowledge and skills that you need to be successful with jQuery, so that you keep going all the way through the course. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-intro/a/are-you-ready-to-learn-jquery</a>.
# Article is at (xe3aba850) on the bn stage.
# Article is at (xe3aba850) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That sounds like a lot, I know -- and it is! But if you learn and review it all now, before diving into jQuery, you'll be happier down the road. Once you feel good and ready, keep going..."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code</a>
# Title of tutorial article (x70d3f378) on the bn stage
# Title of tutorial article (x70d3f378) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Behind the scenes: Browse the jQuery source code"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code</a>.
# Article is at (x70d3f378) on the bn stage.
# Article is at (x70d3f378) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, take a look at the [code for the `html()` method](http://james.padolsey.com/jquery/#v=2.1.3&fn=jQuery.fn.html). It does a lot of checks for various error conditions and edge cases and eventually, it runs the line of code that actually tells the browser to set the inner HTML contents:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code</a>.
# Article is at (x70d3f378) on the bn stage.
# Article is at (x70d3f378) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It can be intimidating to look at the code for jQuery, because it involves both advanced JavaScript syntax and a whole lot of expert knowledge about how browsers work - but it can also be really cool to see all the code that goes into making a powerful JS library that works across so many browsers."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code</a>.
# Article is at (x70d3f378) on the bn stage.
# Article is at (x70d3f378) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can see the source on Github, or use these two sites that make it easier to browse through: [jQuery source viewer](http://james.padolsey.com/jquery/#v=2.1.3&fn=jQuery.fn.html) and [jQuery deconstructed](http://davestewart.io/resources/javascript/deconstructed/jquery/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code</a>.
# Article is at (x70d3f378) on the bn stage.
# Article is at (x70d3f378) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You might be thinking jQuery is pretty magical at this point, with everything it can do. But it's not magic, it's just a whole lot of JavaScript - and since it's open source, anybody can browse the code of jQuery and see the magic for themselves."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/bonus-dig-into-the-jquery-source-code</a>.
# Article is at (x70d3f378) on the bn stage.
# Article is at (x70d3f378) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`elem.innerHTML = value;`"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>
# Title of tutorial article (x7717704d) on the bn stage
# Title of tutorial article (x7717704d) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: jQuery collections & looping"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Looping through collections"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## jQuery collections"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you'd  like to retrieve the DOM node out of a jQuery object, then you can treat the jQuery object like an array and use bracket notation:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you'd like to loop through multiple elements in a collection, you can use a normal `for` loop or jQuery's [`each()`](https://api.jquery.com/each/): "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you'd like to turn a DOM node into a jQuery object, you can pass it into the jQuery function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It is common practice to start variable names like that with a `$` sign to show that they're storing jQuery collection objects. That helps distinguish them from variables that store DOM nodes."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you call the `each()` function, you must pass a 'callback function' to it. jQuery will then call that callback function for each element in the collection, and it will pass the current index and element to the function."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you use jQuery to find elements, jQuery returns back a jQuery collection object:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"p\").each(function() { \n"
"        $(elem).text( $(this).text() + \"!!\"); \n"
"    );\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    $(\"p\").each(function(index, element) { \n"
"        $(elem).text( $(element).text() + \"!!\"); \n"
"    );\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`var $heading = $('h1');`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# Exercise at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/e/quiz--jquery-variables">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/e/quiz--jquery-variables</a>.
# Exercise at (x61b2063e) on the bn stage.
# Exercise at (x61b2063e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`var $heading = $(heading);`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`var heading = $heading[0];`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# Article is at (x7717704d) on the bn stage.
# Article is at (x7717704d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "jQuery will also set the context of the function to the current element, which means you can reference the element with the `this` keyword:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"p\").each(function() { \n"
"        $(elem).text( $(this).text() + \"!!\"); \n"
"    );"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping">http://translate.khanacademy.org/computing/computer-programming/html-js-jquery/jquery-tools-techniques/a/review-jquery-collections-looping</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"    $(\"p\").each(function(index, element) { \n"
"        $(elem).text( $(element).text() + \"!!\"); \n"
"    );"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### How did you learn to program?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What do you do when you're not programming?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What do you work on?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What’s your one piece of advice for new programmers?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a screenshot of my support queue from today:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a script that I wrote in Python to get a list of support cases from the FogBugz API:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I am a Support Engineer at [Fog Creek Software](http://www.fogcreek.com/). We make several products aimed at software developers, to help make their lives easier so that they can focus on programming! I work on [FogBugz](https://www.fogcreek.com/fogbugz/) (a bug tracking program) and [Kiln](http://www.fogcreek.com/kiln/) (a software version control and code tracking program, functional with both [Git](http://git-scm.com/) and [Mercurial](https://www.mercurial-scm.org/))."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I spend my days answering emails from customers about using our programs, like bug reports and feature requests. Since I know the programs that I support inside and out, I can also offer our customers great ideas for how they can improve their workflow. Plus, I work remotely, so I can even be in my pajamas while I answer their questions!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I’ve always been interested in computers (I remember playing with the [Logo Turtle](https://logo.codeplex.com/) drawing program when I was about 7), but wasn’t really comfortable with the idea of having a career “on the internet” until fairly recently. I got my degree in Civil Engineering, but was frustrated in the working world by the reliance on computer programs without understanding how or why they work--or sometimes, if they even do! I ran into instances where my hand calculations came up with different answers than the computer programs, and even the most senior engineers I was working under couldn’t tell me why we were trusting the program that was giving different answers."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Allyson Lubimir"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of adorable cats"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of Allyson's support queue"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of Python code"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I decided to learn how to program, I looked for programs where ever I could find them. I started by taking an edX course in Python, and also used tutorials through [Codecademy](http://codecademy.com), [Khan Academy](/), [Learn Code the Hard Way](http://learncodethehardway.org/), and others. I then moved into learning front end development, which I learned primarily through [Skillcrush](http://skillcrush.com/). It was tough to stay motivated from time to time, but I was very lucky to have friends in the industry who were able to help me when I got stuck and point me towards next steps when I wasn’t sure where to go."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I’m not programming, I like to snuggle with my cats (and my husband too, I suppose)!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Hi, I'm Allyson Lubimir!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]I also enjoy playing board games and knitting. I recently bought a 100 year old house, so decorating that and fixing up all the old bits keeps me busy too."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]On the bug hunting-and-fixing side, I spend time reproducing bugs sent in by customers, and frequently going into their databases to clean up rogue entries. I also help customers update their software, or move from our self-hosted software to our [SaaS](http://en.wikipedia.org/wiki/Software_as_a_service) offerings (that way they don’t have to worry about administering large databases themselves!) I also work a lot with our [XML](http://en.wikipedia.org/wiki/XML) [API](http://en.wikipedia.org/wiki/Application_programming_interface), helping create custom workflows and integrate our programs with other systems."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]When I run into larger bugs that I can’t solve on my own, I work with our development teams to determine the best course of action, a timeline for the bug fix, and explain what is happening back to the customer. We work hard to be as open and honest as possible with our customers, and I’m part of the front line to make sure that happens."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/658c4a37868df3de9b2e7195b36e515f01621b0b.jpg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/7dd00e80450e30b2eb018527a57abb298afe0e1a.jpg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/7f58de73c29f75f7198005fb84a2551e12a72ac3.jpg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/allyson-lubimir-support-engineer-and-cat-lover</a>.
# Article is at (x2f29cfb0) on the bn stage.
# Article is at (x2f29cfb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/dbab2d43e8f700bbdd8b4932959eddbcc2a087b1.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What do you do when you’re not programming?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Bow in hand, ready to shoot"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Do not let other people intimidate you. Everyone is continuously learning, and people will probably be using very different tools and languages just a few years from now. This field is extremely broad but extremely young, and we’re not even close to figuring out all the new things we can do, and a few years and a big ego don’t matter as much as being able to continually learn."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Geared up and ready to race"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hi, I'm Amy Quispe!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I also enjoy playing piano. If I see a piano, I can’t resist sitting down and cranking something out."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I was first introduced to programming by my sixth grade math teacher, who had me working through a QBASIC tutorial. At the time, I only thought programming was cool because it could do my math homework faster. I didn’t know that computer science existed until I went to high school, which was when I learned a lot more and realized how much more could be done with programming. And even then, when I went to college, there was so much more to the programming world than I realized."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I’ve been trying out a lot of new things lately. I recently went GoKart racing for the first time:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "My computer science program was really challenging, and regardless of previous experience, the playing field was leveled by sophomore year. And then we all started finding different things we were enthusiastic about, and our enthusiasm translated into hard work, and eventually skill. A good friend of mine is getting a PhD in Natural Language Processing. Another is really interested in security and performance. I was able to explore my interests in open data, developer tools, hackathons and startups. And after all this time, I’m happy to say that I’m still learning to program, and I hope to keep learning!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now I work at Google in the Developers Relations group. I’m still really dedicated to making it easy for other developers to build the things that they want to build, but now I do that for Google. I work with both the engineering team that builds the AdMob SDK, and with developers outside of Google that want to use this SDK."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Amy Quispe"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Amy in GoKart racing suit"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Amy with archery bow"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I was in school at Carnegie Mellon, I worked on open data. I felt like a lot of the students around me had great ideas to improve their community, but were blocked when it came to actually accessing things like course schedules, room reservations, etc - and that even if they were able to get ahold of this data, they got in trouble for using it, or found it in a poor format that was difficult to work with. I lobbied for my university - and many others! - to open up their data, and I pulled together a group of students called [ScottyLabs](http://www.scottylabs.org) to manage this data and make it easy for students to use."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "and I tried my hand at archery:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/8ad50d58debc2e6d7d0fc868dd2454a1fccc93bb.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/8c4961b5a24260500c6b40e8978cb54d322e0e4e.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/amy-quispe-data-liberator-and-developer-relater</a>.
# Article is at (xf998ca27) on the bn stage.
# Article is at (xf998ca27) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/bae795a2ab0df5a1e90a0a07416f2efb06546999.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What do you do when you're not working?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A development version of the dashboard I built for GRIFFIN, from the first online test of the SPICE detector."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After grad school is when I really learned to program. As was the case for a lot of professional academics, science jobs were few and far between after grad school. While I was looking for work, my partner, a noted web developer in the Vancouver web development scene, suggested I teach myself some JavaScript, and start showing up to the local software meetup groups around town. This was brilliant advice, since it turned out that Vancouver had (and still has) a vibrant software startup scene which welcomed me with open arms, supporting me as I taught myself the basics of web design and development. By interacting with the Vancouver scene, I realized that there was a very rich culture not only of computing technology, but technique as well. It was this refined craftspersonship that was missing from computing in science, and I’ve been working to bring those two worlds together ever since."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For GRIFFIN, my work focuses on modernizing the way scientists interact with their experiment. Past experiments in my field have relied on rudimentary displays to communicate to scientists what was going on at the moment with their experiment; imagine long lists of numbers arranged in tables nested in more tables, scattered across a lot of different places. This was fine decades ago, when an experiment might only involve a relatively small number of simple devices - but modern experiments can have **thousands of detectors and data streams** (GRIFFIN alone will produce **200 TB of data every week**), and an enormous support infrastructure on top of that."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I also try to get to as many conferences as possible to talk to programmers about working together to make science faster and better - here’s me at LXJS in Lisbon, Portugal in 2013 with the brilliant Angelina Fabbro, speaking about scientists and programmers teaming up:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I started my programming life as a grad student working on the ATLAS experiment on the LHC at CERN - and it was a disaster! I had had exactly one class in programming as an undergraduate - which I failed. I knew nothing about coding, at all, and was convinced I was terrible at it - and then suddenly as a PhD student, I was writing code full time. For five years, I muddled through writing a sophisticated analysis package which formed the core of my dissertation - but it actually wasn’t then that I really learned to program. What I learned from my experiences in grad school was how lost and adrift professional science was in terms of a culture of good computing - and what an enormous leap forward we could make if we learned to do it right."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In addition to my user interface work, I’m also trying to help scientists modernize the way they write code by getting them to use the tools used by real software developers. Computing has become so central to our methodology, that you simply cannot be a serious physicist today without writing a lot of code - but up until now, the physics community has yet to catch up with good computing education and techniques. Most physicists learn to program by simply guessing until they get something that (sort of) works. Strategies like version control and open source software collaboration were developed by programmers to streamline the development process; if scientists could learn from these strategies, we could not only supercharge how we do science, but make it more open and reproducible too. Labs in all fields need people who are able to bring in fresh ideas from outside their usual sphere, so that scientific techniques can continue to grow and evolve, and that’s exactly what I’m trying to do between physics and computing today."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Never forget that there is no such thing as an inborn skill. It’s easy to look at great programmers and feel really inadequate, like you’ll never measure up or be a ‘real’ programmer. But I have had the privilege of meeting some of the greatest programmers on the web today, and they all have had the same experience - they all felt like fakes and impostors when they were starting out, and none of them thought it was easy at first, no matter how easy they make it look now. If you have written one single line of code, then you are a real programmer - and if you keep on coding and learning, you will one day be a master, too."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our experiments have grown too big and too complicated to manage with disorganized interfaces and simplistic reporting. And if that wasn’t bad enough, different teams of scientists will be flying in to use GRIFFIN all the time - they don’t have the bandwidth to learn a complicated user interface on top of conducting their experiments. Therefore, GRIFFIN has to have a user interface that is as intuitive and easy to use as possible, without sacrificing detail or power; that’s why for the past year, I’ve been using all the cool ideas and technologies the JavaScript community has built to make a user interface that will let scientists get started doing science as fast as possible when they arrive at the lab."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Bill Mills"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "These days, my work is all about the many ways good programming, user interfaces, and computing user experience can help science move faster and be more fun! I work for [TRIUMF](http://www.triumf.ca), Canada’s national lab for nuclear physics, as a web technology specialist and software project manager for the GRIFFIN experiment. GRIFFIN is a cutting edge new gamma ray spectrometer coming online at TRIUMF in late 2014, designed to record data about radioactive particles more efficiently and at much higher rates than any previous experiment, allowing us to get a more detailed picture of the nucleus of the atom than ever before."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Web based detector efficiency calculator for GRIFFIN and its sister detectors, which replaced pen-and-paper (!) calculations of the same."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I’m not programming, I’m probably teaching about programming! I’ve mentored for [Ladies Learning Code](http://ladieslearningcode.com/), an educational outreach program to help break down barriers for women interested in learning to code, and I’m very excited to be almost finished my certification to teach for [Software Carpentry](http://software-carpentry.org/), a bootcamp workshop program designed to teach coding to scientists. I’m also currently building InterdisciplinaryProgramming.com, a free service to match volunteer developers with scientists looking for coding mentorship, and am exploring the possibility of bringing the maker movement to lab by helping my colleagues in ecology and agriculture learn about Arduino electronics prototyping and other open hardware options for modernizing their experiments."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I’m really properly away from the computer, I try and find time to volunteer with environmental groups in my community; I am passionate about correcting our relationship with nature, and wrote content and research for SPEC in Vancouver for some time."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Hi, I'm Bill Mills!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/09ab74925de24888d84f6faa3ab037dbf0441cc4.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/4fdf5107b0933ee345919f32776dcc78921c0b6a.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# Article is at (x68a12851) on the bn stage.
# Article is at (x68a12851) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/9669a1fca45a2c8bf32af343233fceb1b9c6e241.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/bill-mills-physicist-and-interdisciplinary-programmer</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I’m not programming, I’m probably teaching about programming! I’ve mentored for [Ladies Learning Code](http://ladieslearningcode.com/), an educational outreach program to help break down barriers for women interested in learning to code, and I’m very excited to be almost finished my certification to teach for [Software Carpentry](http://software-carpentry.org/), a bootcamp workshop program designed to teach coding to scientists. I’m also currently building [InterdisciplinaryProgramming.com](http://interdisciplinaryprogramming.com/), a free service to match volunteer developers with scientists looking for coding mentorship, and am exploring the possibility of bringing the maker movement to lab by helping my colleagues in ecology and agriculture learn about Arduino electronics prototyping and other open hardware options for modernizing their experiments."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A photo of Brenda biking up the hills of San Francisco"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After college, I pursued a career in opera, then non-profit fundraising. I found myself doing all kinds of web work and being good at it. So last year, I decided to learn JavaScript and become a Web Developer. It took a lot of hard work, but I landed a great job at Macys.com."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Biking in the hills of San Francisco"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Brenda, with her Pac-Man themed Google Glass"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Don’t be afraid to feel like a n00b - everybody is a n00b at something! Learning is what we do every day on the job, and it’s a part of this career that I absolutely love."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I can’t show you what I’m working on now, but you can check out [the CyberSwipe JS library](https://github.com/brendajin/cyberswipe.js/blob/master/README.md) that I built last year:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I code interactive A/B web prototypes for Tablet at Macys.com with JavaScript, HTML, and CSS. We design, build, and test these prototypes in front of real users. We use the results of these tests to improve the prototypes in what is called an “iterative” process. Eventually, the best features from these tests will be brought into the Macys.com experience."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I found my calling, and I’m so grateful to be a programmer. It’s a lot of hard work, but also a lot of fun!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I make electronic music and love hiking and biking! I also hack for fun - my side projects include microcontrollers like Arduino and wearables like Google Glass."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In college, I majored in Musicology and took a computer science course that would lay the groundwork for success later on. It was called PLOrk: Princeton Laptop Orchestra. We used a language called [ChucK](http://chuck.cs.princeton.edu/) to program music and wrote compositions every week using Computer Science fundamentals!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It all started with AOL Instant Messenger in the 90s. Back then, you could use HTML to decorate your profile. My friends and I used to have a lot of fun changing colors and font styles in the basic editor."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Brenda Jin"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of the CyberSwipe library on an iPad"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The CyberSwipe library on an iPad"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Hi, I'm Brenda Jin!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/2e8ae7ff07148796a7fcf28687ac901d1f01af6c.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/383f66a24bff3b187af82f9c14bb40853a4fde9f.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# Article is at (x2ac03fb5) on the bn stage.
# Article is at (x2ac03fb5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/6d5471f417855008878566dfd671bae6f52daa51.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/brenda-jin-mobile-prototyper-and-dj</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "I can’t show you what I’m working on now, but you can check out [the CyberSwipe JS library](http://www.brendajin.com/cyberswipe-js/) that I built last year:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Carrie dancing"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hi, I'm Carrie Cai!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I am a computer science graduate student at MIT specializing in human-computer interfaces for language education and online learning. Depending on where I am in the research cycle, I am usually coding interactive systems and prototypes, brainstorming how to help people learn languages, or gathering and analyzing data."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I am now exploring new ways to help people learn informally by making use of wait-time during a person’s otherwise busy day, such as at a bus stop, during commercial breaks, in the midst of stalled conversations, or during less interesting parts of a football game. The hope is that, by giving people bite-sized items to learn during time that they would ordinarily spend waiting anyway, learning can feel less time-consuming and more integrated into the rhythm of daily life."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I didn’t learn to code until age 23, well after college. I had no interest in computers, and had always been interested in human behavior, so in college I majored in an interdisciplinary mix of psychology, linguistics, and education. In my first job out of college working in sales and HR, I became motivated to learn programming when I found myself frequently coming up with ideas, but often dependent on engineers or other teams to implement features or fix bugs for me. I eventually went back to school and spent a year or so taking foundational computer science courses alongside college undergrads. Within the first few weeks, I got hooked learning about recursion, and was surprised to discover how similar programming was to solving mini-brain teasers. Even though I wasn’t enrolled in a degree program, it turns out that simply being on a university campus can open many doors! Not only did I join a research project on dialogue systems for childhood language learning, but I also got to teach programming to other students. I eventually applied to PhD programs in computer science and was thrilled to be admitted given my limited background."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I love dancing of all forms, especially in fusion. I also enjoy playing piano improvisation for fun. As the Arts Chair in my graduate dorm this year, I’ve organized a number of events for students to learn different forms of art informally, from theatrical improvisation to swing dance and painting. When I’m not programming or working on research, I’m usually dancing or taking a musical improv break.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It’s never too late to learn to code! But know that coding is not necessarily the end goal, but rather the means."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Last year, I augmented Tetris with speech recognition so that learners can practice speaking foreign language vocabulary while they play Tetris. In order to rotate the block, the player has to first speak the correct word for the picture on the block. You can [read more here](http://people.csail.mit.edu/ccai/website/publications.html) and see a video demo below!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Looking back on my first day of CS courses at age 23, I remember sitting in a room full of college freshmen and feeling completely daunted by the sight of a Unix terminal. I sometimes questioned whether I was in over my head for switching into CS. Fortunately, I had the support from peers who hacked through projects and problem sets with me, mentors who took a risk on me with timely opportunities, and family who believed I could succeed even when I changed my career direction mid-flight."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Carrie Cai"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Ribbon dancing!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What’s most gratifying about learning to program is that I can still renew my earlier interests in psychology and education, but now I can also enact these ideas through code, evaluate how they impact human behavior, and share them with others!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/1759a1ca7503ec8cc9b9193a5a3da34704d1d14b.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/carrie-cai-researcher-and-dancer</a>.
# Article is at (x5034795e) on the bn stage.
# Article is at (x5034795e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a02af048c7c557dd849ce2e695e30cee5f58506c.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hi, I'm Lauren Haynes, from Chicago, Illinois!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I actually don’t program that much in my job, but understanding programming is hugely important for my role in product management, as it helps me scope out what we're building for the website and how we’re going to get it done."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I work for a company called [GiveForward](http://www.giveforward.com/), a crowd fundraising platform to help individuals pay for Medical Bills. To date we’ve raised over \\$80 million for people in need. I'm a Product Manager, which is a mix of Agile project management and business analysis - I have to hear what the different stakeholders want or need from our product and decide what we're building, as well as prioritizing the tasks at hand. Then I have to take all of that and communicate it in a way that makes sense to the software engineers so they build the product we're envisioning."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the past, I was a IT Manager for a non-profit and a consultant for Fortune 100 companies around Knowledge Management and Collaboration. The coolest thing I’ve ever built was a 10 foot wide by 7 foot tall interactive wall for the High Museum of Art in Atlanta, Georgia based on artwork for the Louvre."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Lauren Haynes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Lauren with her interactive wall"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "My high school calculus teacher encouraged me and three of my close female friends to take his AP CS class. We learned C++. I continued with CS as a minor in college, where I took a Principles of User Interfaces and found Human Computer Interaction; it’s basically the intersection of Computing, Psychology, and Sociology. I love looking at how technology changes people, and how they in turn change technology."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Lauren Haynes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Lauren Haynes and wall"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Programming is super creative - find a problem you’re interested in solving or something you want to create and it will make the challenges worth solving."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I’m not on the job, I’ve been taking Lindy Hop/Swing Dancing lessons for about the last year and a half, and go out social dancing when I can. It’s a really nice release. I’m also on the Board of Directors for a non-profit called Break Away that focuses on service learning trips for college students, and life long active citizenship."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/7fb615163b0aacb8382b673c463c794a9e2cc710.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# Article is at (x0392d42c) on the bn stage.
# Article is at (x0392d42c) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/8bbd0b741d945ed622f9f692177aef2caf7d49fb.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/lauren-haynes-product-manager-and-lindy-hopper</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "I work for a company called [GiveForward](http://www.giveforward.com/), a crowd fundraising platform to help individuals pay for Medical Bills. To date we’ve raised over $80 million for people in need. I'm a Product Manager, which is a mix of Agile project management and business analysis - I have to hear what the different stakeholders want or need from our product and decide what we're building, as well as prioritizing the tasks at hand. Then I have to take all of that and communicate it in a way that makes sense to the software engineers so they build the product we're envisioning."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After college, I went to [art school](http://www.risd.edu) and the most influential class I took there was in [Type Design](http://gd.risd.edu/course/type-design) where I learned about drawing an entire typeface. I have drawn, on average, about one font every two years since ~2008\\. I also [have](http://instagram.com/p/genHJXnHwl/) [a](http://instagram.com/p/Xl4CfJHHwx/) [dog](http://instagram.com/p/jKPqn2HH13/)!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I work on a mix of [frontend](http://en.wikipedia.org/wiki/Front_and_back_ends) web programming and design here at [Khan Academy](/). I often split my time between the two, thinking about how things should work while I think about how they should look. At work I program in [JavaScript](http://en.wikipedia.org/wiki/JavaScript) and [Python](http://en.wikipedia.org/wiki/Python_%28programming_language%29), primarily. For design work, I use [Adobe Illustrator](http://www.adobe.com/products/illustrator.html) for drawing and [robofont](http://doc.robofont.com/) when I need to [hack on a font](https://github.com/khan/font-awesome)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In high school, around 1998, I briefly programmed and admin'd a [text-based online game](http://en.wikipedia.org/wiki/MUD) which sucked away probably a year of my life. A year later, I got into web programming and made a [primitive CMS](https://web.archive.org/web/20010515192820/http://acme.bishops.com/) using php3 and mysql by spending most of the fall reading [webmonkey](https://web.archive.org/web/20000815055032/http://hotwired.lycos.com/webmonkey/programming/php/tutorials/tutorial4.html) [articles](https://web.archive.org/web/20000815054226/http://hotwired.lycos.com/webmonkey/programming/javascript/tutorials/tutorial1.html) and experimenting with webpages and online publishing. Going to college, I didn't learn much programming, but I learned [lots of theory](http://www-math.mit.edu/academics/undergrad/major/course18c.html) which has served me well. Even now I'm not a very quick programmer, but I keep [learning all the time](/) and I'm always [making new things](https://github.com/nsfmc?tab=repositories) which doesn't hurt."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It sounds silly, but the most important thing for me has been to make [things](https://github.com/nsfmc/Stumblr) that make me giggle. Recreational programming is something of a luxury, but it has forced me to [learn new things](https://github.com/nsfmc/swatch) and challenged me in ways I didn't expect. Having a friend who can gut-check your work or provide honest feedback on your projects is invaluable, seek them out!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "My dog!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "My older brother showed me how to program on a [VIC-20](http://en.wikipedia.org/wiki/Commodore_VIC-20) by having me [copy games out of old magazines](http://en.wikipedia.org/wiki/Type-in_program) when I was around six years old. It was incredibly frustrating. I didn't really catch the programming bug until around seventh grade when a [Borland C Compiler](http://en.wikipedia.org/wiki/Turbo_C%2B%2B) appeared on our [PC](http://en.wikipedia.org/wiki/IBM_PS/1#Model_2133). My first significant program came around 9th grade which printed a table of possible [combos for Master Locks](http://freaky.staticusers.net/textfiles/MasterLock.algorithm.txt). That was my first \"formal\" exposure to [modulo arithmetic](http://en.wikipedia.org/wiki/Modulo_arithmetic) and `for` loops."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Marcos Ojeda"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Depending on how busy I am, I love to cook with my wife. When I was in college I [worked as a line-cook](http://en.wikipedia.org/wiki/Garde_manger) which made me a very competent cook. I still have a whole bookshelf full of vinyl from when [I used to DJ](https://archive.org/details/MarcosOjedaMnchen2004Mixtape) [Jungle/Drum & Bass](http://en.wikipedia.org/wiki/Drum_and_bass) and [UK Garage](http://en.wikipedia.org/wiki/UK_garage) music between 2002-2007."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Hi, I'm [Marcos Ojeda](/profile/marcos)!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/4421a3a56412cf212ee9d72f6cea15c82e4ab1aa.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/marcos-ojeda-designer-dj-and-dog-owner</a>.
# Article is at (x9bad50cc) on the bn stage.
# Article is at (x9bad50cc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/96b23a75f4f79b07133ab4baa746812ff6963a7a.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But I do quite enjoy writing. I write a ton on my personal website, mostly as a way of clarifying my own thoughts. Writing is how I think. I don’t truly understand something until I get it down on (digital) paper. Here are [some of my articles](http://pgbovine.net/intro.htm)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Find a mentor. This is so easy to say, but often so hard to do. No matter how awesome educational technology becomes, it’s still impossible to replace a good human mentor."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hi, I'm Philip Guo!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, since neither of my parents knew how to program, and there were no role models around to teach me, I didn’t learn programming until AP Computer Science class in 11th grade. That brief exposure got me hooked, and I decided to major in Computer Science in college. I learned most of my programming through college classes, summer internships, and on-campus research projects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I am a computer science researcher and teacher specializing in human-computer interaction and educational technology. I am now finishing up a postdoctoral research position at MIT and will soon be moving to upstate New York to start my new job as an assistant professor at the University of Rochester."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I grew up in the 1990s right as the Web was in its infancy. I loved playing computer games, making silly Photoshop graphics, and putting together ugly-looking personal websites with animated GIFs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I recently wrote about my programming backstory on my personal website, and the story got picked up by Slate, NPR, the BBC, and a few other news outlets. [Read more here](http://pgbovine.net/tech-privilege-NPR-interview.htm)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If I'm not programming, then I'm writing about programming, of course! :) No, just kidding, I don’t actually write _that much_ about programming."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One area I am super passionate about is creating tools to help people learn programming. Since 2010, I have been building and maintaining [Online Python Tutor](http://www.pythontutor.com/), which is now the most widely-used program visualization tool for education. Over half a million people from over 165 countries have used it for learning Python programming, often as a supplement to textbooks, online tutorials, Khan Academy videos, and MOOCs (massive open online courses). Here is a one-minute YouTube video intro:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Philip in the wilderness"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/philip-guo-python-tutor-and-writer</a>.
# Article is at (x7adc2d94) on the bn stage.
# Article is at (x7adc2d94) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/ab7c2868b7217bbb86d5385938525e14d2ea9347.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hi, I'm Sarah Northway!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hiking through the hills of Greece"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I design and program indie video games. My most well known one is [Rebuild](http://rebuildgame.com), a post-apocalyptic strategy game for browsers and mobile phones. It's not your usual shoot-the-zombies-in-the-head kind of game; instead you manage a city of survivors and have to make tough decisions to keep them alive. It's written in Adobe Flash (AS3 / AIR) and took me about a year to make. I'm currently working on [Rebuild 3](http://www.youtube.com/watch?v=wquytk2aX_4), which I raised money for on [Kickstarter](http://www.kickstarter.com/projects/sarahnorthway/rebuild-gangs-of-deadsville)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I leave you with me, wearing a horseshoe crab as a hat:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I love being an indie game developer because I don't have a boss, so I can make whatever kind of game I want, and I can do it on my own schedule. I also get to wear a lot of hats as they say; I've done everything from art and sound to customer service. It means I never get bored, but some hats are more fun than others. Programming is my favorite part."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I loved computers from a young age in the 80s and 90s, because I loved the games you could play on them. I learned shell scripting so I could run games, learned how to use BBSes so I could download games, then learned HTML so I could make websites about... I'll let you guess. I did my earliest real programming in first year college and fell in love with the world of puzzles and language that sits inside every piece of software. To me, programming is a game."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I majored in computer science, which involved far too much math and theory and circuit boards for my liking. I learned the most from working on projects that interested me, not from books or teachers. My favorite project was a game I wrote with a boy (my future husband!) about evolving insects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I'm crazy about snorkeling, hiking, exotic places and cultures, weird foods and strange creatures. I like cities and wilderness in equal measure, and I love the other indie game developers that we've met all over the world."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Lauren and Colin, living on a canal boat in Scotland"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Lauren hiking through the hills of Greece"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Lauren wearing a horseshoe crab as a hat"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Living on a canal boat with Colin in Scotland"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Sarah with a lobster hat"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Playing Rebuild on a phone"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Playing Rebuild on an iPad in the Phillipines"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Programming in Panama"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Smiling with a lobster hat"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The Rebuild game, being played on a phone"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The best, best part of being an indie game dev is being able to travel. My husband Colin and I sold all our stuff four years ago and have been traveling around the world making games since then, living in places like Japan, Thailand, Turkey, Honduras, and (right now) Brazil. We even made another game together called [Incredipede](http://incredipede.com), and it's also about bugs... sort of."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Today, if I was just starting to learn, I would choose something I really wanted to make (probably a game of course) and take it one step at a time, learning along the way as I go. There are so many free resources now, and so many tools to make programming easier. All you need is motivation, and the desire to make stuff is what drives me."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/2c35c2fbd815e9cc24d722b415bb93f2e4a1d38f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/2f931bdf864be073d84fb3a0e3a16b660f933766.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/341b05f057cf7852b6c4971f2a1d46aebc782b43.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/59164543e8f6388d79eed71e9ca7894bcd9edaf1.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/876e21c47b5d47be05b835b5ab0e6fc93b51f955.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d6d3ebcbe245286a70a45168f644e87fca9e87d4.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/sarah-northway-game-maker-and-nomad</a>.
# Article is at (x8779e691) on the bn stage.
# Article is at (x8779e691) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/fba8d0d31a8ab00ace40f899a7ce5a2901a9024a.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Apple IIGS"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Find a language you love, make cool stuff with it, and never be afraid to experiment."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Flying over the San Francisco bay"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For me, the hardest thing about learning any language is finding a good place to start. Taking a hundred pages of documentation and turning that into something cool is a pretty insurmountable task, so instead I try to take an idea and find a similar open source project in the language I’m trying to learn. Then I can follow along with the code and get a basic structure down into which I can pour my own logic, Googling as I go. Identifying similar concepts is also key - Understanding Categories in Objective-C is a lot easier if you already know what Open Classes are in Ruby."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hi, I'm Tom Heinan!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I also play piano and guitar and do a bit of songwriting [here](https://soundcloud.com/tomheinan/once-upon-a-time-on-mars) and [there](https://soundcloud.com/tomheinan/travellers-hymn-but-you-do). I love acting, and I was a member of my university’s improv comedy team for several years - we still have the occasional nerd reunion in Nova Scotia, where I went to school. Being a software engineer doesn’t give you a whole lot of extra time for theatrics, but if you’ve watched AMC’s The Walking Dead, you might’ve seen me get killed [once](http://imgur.com/a/KxnhD) or [twice](http://imgur.com/a/wN6D9). I’ve been told I have a pretty solid shamble."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I code a lot at work, and I also code a lot for fun, but when I’m not writing code, I like to spend time outside. Camping and hiking are always a good time, and we’ve got plenty of great places to do so here in California. I’m also working on my pilot’s license right now - there’s nothing more relaxing after a long day of meetings than heading up to 3,000’ and enjoying the sunset over the bay.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I work for a company called [One Medical Group](http://www.onemedical.com/), which is a technology-enabled medical practice. I spend most of my time working on our mobile app in Objective-C, where we’re implementing all sorts of cutting edge product features aimed at helping people manage their health and wellness effectively. I also do a bit of back-end code in Ruby, developing the APIs that our app needs in order to communicate health data securely and reliably."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our patients use the [mobile app](https://itunes.apple.com/us/app/one-medical-mobile/id393507802) to schedule appointments, get virtual triage for common issues, and communicate with their doctors, so I try my best to squash bugs and improve usability with incremental updates while at the same time planning and prototyping exciting new features.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Tom in front of plane"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Ready to fly"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Three screens from the mobile app in action"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "View from outside the pilot window when flying over the bay"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]My parents bought our first family computer in 1986, the year I was born. It was an Apple IIGS, and I started playing around with GS/OS as soon as I could read. I learned basic HTML and JavaScript in elementary school (I even got the Computers merit badge in Boy Scouts!) and then took AP Computer Science in high school, the curriculum for which was mostly introductory Java. When I got to university, I skipped over many of the more traditional language courses (BASH scripting, C++) and instead taught myself the basics of Ruby, which remains one of my favourite languages today."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/7485824fd5bf47e2867221da646d2db9fd6abb08.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a57869b0a452fe95cf4a229cf203f96276c6327b.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d4595adb38a3206a7e5fad9cf973d46215dbd563.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/tom-heinan-mobile-developer-pilot-and-zombie</a>.
# Article is at (xb3f98376) on the bn stage.
# Article is at (xb3f98376) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/fd5e1e4213f36cad3e12d87405547875a3b338bc.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Algorithm dreaming up faces"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I am a machine learning Ph.D. candidate. I design and code artificial intelligence algorithms that can learn from examples. They are like programs that can program themselves. I spend most of my time discussing new ideas for algorithms, coding in Python, drinking tea and reading up on recent developments."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It all started when I realized that all you needed to make programs was a computer. Here was a way to translate my wacky ideas into reality without any money or heavy lifting. I’ve always had a wide imagination so I thought that was very exciting. Programming meant being able to make my own games, websites and tools."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "My research focuses on large-scale deep neural networks. I've been able to apply some of my work at Google and Microsoft through internships. These days, I'm working on distributing the learning of neural networks on clusters of computers. I’ve also worked on new learning algorithms that can extrapolate data. Here is such [an algorithm making up images of faces](http://npcontemplation.blogspot.ca/2012/02/machine-that-can-dream.html):   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Yann Dauphin"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of Yann playing bass"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Playing a gig"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So in middle school around 1999, I bought a programming book. That book was so dry that it made me give up. A year later, I stumbled upon [Howstuffworks’ excellent C programming tutorial](http://computer.howstuffworks.com/c.htm ). The very same day I was writing my first programs. At first they were pretty simple, but it was cool to see all the things you could make the computer do. I honed my skills mostly by working on my own projects and by contributing to open source projects on [Sourceforge](http://sourceforge.net/). Later on, I broadened my knowledge by studying computer engineering in university."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The more you know, the more you can do. However, you don’t need to know everything to get things done. Just a bit of know-how is enough to get started on most projects, you can learn the rest along the way. Don’t be afraid to break stuff, it’s all virtual anyway."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]] Hi, I'm Yann Dauphin!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]My favorite way to move around is biking. I ride about 100 km per week in the summer. It helps me clear my mind and stay in shape. I also enjoy playing music. I listen to all kinds of music (like rock, reggae and rap), and I try to play a bit of everything with my bass."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/0aaec0334bdb871bfc317965c98899a1daf1bc52.gif"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/83954d93af0a14d2b924a37e7bac81d3fd99484e.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player">http://translate.khanacademy.org/computing/computer-programming/meet-the-computing-professional/a/yann-dauphin-researcher-and-bass-player</a>.
# Article is at (xa4a9c3e1) on the bn stage.
# Article is at (xa4a9c3e1) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c10795e1847bb7d1b29ffdefe5ff17b7a3a00758.jpeg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Face-down tiles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Face-up tiles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Step 1:** We create an array of the possible images, using the `getImage` function to pick ones from our library:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Step 2:** We'll only need 10 images for the faces of our 20 tiles, so then we create a new array that holds 2 copies of 10 randomly selected images from that first array."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Step 3:** We randomize the selected images array, so that the pairs of images are no longer next to eachother in an array."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Step 4:** In the nested for loop where we create the tiles, we'll assign an image from that array to each tile."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  We create an array of the possible images, using the `getImage` function to pick ones from our library.\n"
"2.  We'll only need 10 images for the faces of our 20 tiles, so then we create a new array that holds 2 copies of 10 randomly selected images from that first array.\n"
"3.  We randomize the selected images array, so that the pairs of images are no longer next to eachother in an array.\n"
"4.  In the nested for loop where we create the tiles, we'll assign an image from that array to each tile."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And **now** we can check how our tiles look. Let's add a new for loop that iterates through all the tiles and calls the drawing method on them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And now we have an array of 10 pairs of images, randomly sorted!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But, uh, it's hard to know if the tiles will look good, because we don't have any code to draw them yet! In fact, maybe we should have done that first. Sometimes, in programming, it's hard to know what to do first, aye? Let's now add a method to the `Tile` object that draws a tile face-down on the canvas. We'll draw a rounded rectangle with a cute Khan leaf on top, at the assigned location."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Finally, to test it all works, we can change our for loop to call `drawFaceUp` instead of `drawFaceDown`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here it is, all together. Try restarting it to see how the tiles change each time."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what our program looks like, with all that code. Try tweaking the different numbers in the nested for loop to see how it changes the grid or changing how they're drawn (different logo, perhaps?)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I picked a bunch of avatars, but you could change it to pick whatever your favorite images are. The important thing is to make sure that this array has at least 10 images in it, so that we don't run out of images for our 20 tiles. We can add lots more than 10 images though, to give our game more variety each time its played, because we'll narrow down the list in the next step."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In JavaScript, every array object has a built-in [`sort`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) method that will sort the array \"lexicographically\". That means that it will convert each item to a string, and sort them as if they were words in a dictionary. For example, let's see how it'd sort an array of numbers and letters:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we've defined the constructor, we can use that in a loop to create tiles at appropriate x and y positions. In fact, we'll use two for loops - a nested for loop - as that makes it conceptually easy to generate coordinates for a grid."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we've got a grid of face-down tiles, let's tackle a bit of a trickier problem: assigning each of them an image, such that there's 2 of every image in the array, randomly distributed throughout. There are likely many ways we could accomplish this, but here's what I'd suggest:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Okay, so how can we use this to sort an array randomly? Well, we just need to return a random number from that function, a number that's either negative or positive. Here's how we can do that, on our `selected` array from above:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our outer loop iterates for as many columns as we want, our inner loop iterates for each of the rows, and each new `Tile` is initialized with an x and y that corresponds to that row and column."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So we now theoretically have images assigned to each tile, but we're not displaying them yet! Let's add a method to the `Tile` object that's responsible for drawing them face up. It'll be similar to drawing face down, except that the `this.face` property is passed to the `image` function."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That sorting order can sometimes be useful, but most of the time, we want to sort our array in some other way. For example, if we had an array of numbers, we may want to sort them numerically. That's why the `sort` method optionally accepts an argument, a callback function that will get called on every pair of items in an array, and return a value to indicate whether to sort one item higher than the other. A negative number means that the first item should be first, a positive number means that the second item should be first, and a zero will leave the items' order unchanged."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The \"tile\" is an important enough object in the game of \"Memory\" that we will use [object-oriented principles](/cs/programming/object-oriented/p/object-types) to define a `Tile` object and then create multiple instances of it. Then we'll be able to associate both properties (like location and image) as well as behavior (like turning face down or up) with each of the `Tile`s."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first step of playing the \"Memory\" game is to randomly shuffle all the tiles, and then lay them out in a rectangular grid, face down so that we can't see which image is on the other side of each tile."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Those steps may not make sense yet - let's do them each and see what they look like."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To do that, we create a for loop that iterates 10 times. In each iteration, we randomly pick an index from the `faces` array, push that twice onto the `selected` array, and then use the [splice](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice) method to remove it from the `faces` array, so that we don't select it twice. That last step is very important!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To reduce repeated code, we could actually add an additional method that is only responsible for drawing the outline, and just call that method from each of the drawing methods. But we'll leave it like this for now."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To sort an array numerically from lowest to highest, we can pass a function that returns `a-b`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To start off in programming the game, let's just worry about creating face-down tiles, and figure out how to do the different images later."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To start off, we'll define the `Tile` constructor function. Since we're not dealing with the images yet, we'll just pass `x` and `y` arguments to it. We'll also remember the tile width (a constant) in a property on the object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have 20 images in our `selected` array, and we're iterating 20 times to instantiate new tiles at locations in the grid. To assign each image to a tile, we can just use the [`pop`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop) method on the array. That method removes the last element from the array and returns it, and is the easiest way to make sure we assign all the images but don't double assign them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We start off by initializing an empty `tiles` array:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You might be wondering, how does one randomly sort an array in JavaScript? There are a few techniques, but I'll show you my favorite."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Tile.prototype.drawFaceDown = function() {\n"
"    fill(214, 247, 202);\n"
"    strokeWeight(2);\n"
"    rect(this.x, this.y, this.width, this.width, 10);\n"
"    image(getImage(\"avatars/leaf-green\"), this.x, this.y, this.width, this.width);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Tile.prototype.drawFaceUp = function() {\n"
"    fill(214, 247, 202);\n"
"    strokeWeight(2);\n"
"    rect(this.x, this.y, this.width, this.width, 10);\n"
"    image(this.face, this.x, this.y, this.width, this.width);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < NUM_COLS; i++) {\n"
"    for (var j = 0; j < NUM_ROWS; j++) {\n"
"        tiles.push(new Tile(i * 78 + 10, j * 78 + 40, selected.pop()));\n"
"    }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < tiles.length; i++) {\n"
"    tiles[i].drawFaceDown();\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < tiles.length; i++) {\n"
"    tiles[i].drawFaceUp();\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"selected.sort(function() {\n"
"    return 0.5 - random();\n"
"});\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var NUM_COLS = 5;\n"
"var NUM_ROWS = 4;\n"
"for (var i = 0; i < NUM_COLS; i++) {\n"
"    for (var j = 0; j < NUM_ROWS; j++) {\n"
"        tiles.push(new Tile(i * 78 + 10, j * 78 + 40));\n"
"    }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Tile = function(x, y) {\n"
"    this.x = x;\n"
"    this.y = y;\n"
"    this.width = 70;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var faces = [\n"
"    getImage(\"avatars/leafers-seed\"),\n"
"    getImage(\"avatars/leafers-seedling\"),\n"
"    getImage(\"avatars/leafers-sapling\"),\n"
"    getImage(\"avatars/leafers-tree\"),\n"
"    getImage(\"avatars/leafers-ultimate\"),\n"
"    getImage(\"avatars/marcimus\"),\n"
"    getImage(\"avatars/mr-pants\"),\n"
"    getImage(\"avatars/mr-pink\"),\n"
"    getImage(\"avatars/old-spice-man\"),\n"
"    getImage(\"avatars/robot_female_1\"),\n"
"    getImage(\"avatars/piceratops-tree\"),\n"
"    getImage(\"avatars/orange-juice-squid\")\n"
"];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var items = [\"A\", 1, \"C\", \"H\", 10, \"D\", 2];\n"
"items.sort();\n"
"1,10,2,A,C,D,H\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var nums = [1, 5, 10, 2, 4];\n"
"nums.sort(function(a, b) {\n"
"   return  a-b;\n"
"});\n"
"// 1,2,4,5,10\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var selected = [];\n"
"for (var i = 0; i < 10; i++) {\n"
"    // Randomly pick one from the array of faces\n"
"    var randomInd = floor(random(faces.length));\n"
"    var face = faces[randomInd];\n"
"    // Push 2 copies onto array\n"
"    selected.push(face);\n"
"    selected.push(face);\n"
"    // Remove from faces array so we don't re-pick\n"
"    faces.splice(randomInd, 1);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/grid-of-tiles</a>.
# Article is at (x596b3048) on the bn stage.
# Article is at (x596b3048) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var tiles = [];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory</a>.
# Article is at (x0a274f09) on the bn stage.
# Article is at (x0a274f09) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "\"Memory\" is a fun game that you may have played in \"real life\", with actual paper tiles. It's called that because the main skill in the game is your memory - how well you can remember the position of tiles. It's also a game that can be re-created on a computer, and is a good example of using _computer memory_ to remember information, like with arrays."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory</a>.
# Article is at (x0a274f09) on the bn stage.
# Article is at (x0a274f09) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   The game consists of an even number of tiles with images on one side and a generic back. Each image appears on precisely two tiles.\n"
"*   When the game starts, all tiles are turned face down.\n"
"*   The player then flips over two cards, selecting them by clicking on them. If the two tiles have the same image, they remain face up. Otherwise, the tiles flip back over after a small period of time.\n"
"*   The goal of the game is to get all the tiles flipped face up (i.e., find all the matching image pairs) in the least number of tries. That means that lower number of tries are better scores."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory</a>.
# Article is at (x0a274f09) on the bn stage.
# Article is at (x0a274f09) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once we're done, this is what our \"Memory\" game will look like:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory</a>.
# Article is at (x0a274f09) on the bn stage.
# Article is at (x0a274f09) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To make the game, we will need to re-create the physical parts of the game using our drawing commands and implement the rules of the game using variables and logic. We will make a single-player version of the game, which will simplify some of the logic. Here's an outline of what we'll implement:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/intro-to-memory</a>.
# Article is at (x0a274f09) on the bn stage.
# Article is at (x0a274f09) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/303fff16bcb3b75de2881949fe2a9451c1fcc973.gif"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Click-flipping tiles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Delay-flipping tiles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Scoring"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   We create a global variable called `delayStartFC`, initially null.\n"
"*   In the `mouseClicked` function, right after we've flipped over a second tile, we store the current value of `frameCount` in `delayStartFC`. That variable tells us how many frames have passed since the program started running, and is one way of telling time in our programs.\n"
"*   We define the `draw` function, as that function will be called continuously as the program runs, so we know it will be called for every value of frameCount. In that function, we check if the new value of `frameCount` is significantly higher than the old one, and if so, we flip all of the tiles over and set `numFlipped` to 0\\. We also reset `delayStartFC` to null."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   When the game starts, all tiles are turned face down.\n"
"*   The player then flips over two cards, selecting them by clicking on them.\n"
"*   If the two tiles have the same image, they remain face up. If not, they should be flipped face down again after a short delay."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**If the two tiles have the same image, they remain face up. Otherwise, the tiles flip back over after some period of time.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**The goal of the game is to get all the tiles flipped face up (i.e., find all the matching image pairs) in the least number of tries. That means that lower number of tries are better scores.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But we don't always want the tiles to flip back over - remember, **if two tiles match, then they should stay face up**. That means that we should check for matching tiles whenever there are 2 flipped over, and **before** we set up the delay. In pseudo-code, that'd be:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what that looks like. Click a bunch of tiles and see what happens:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How do we know if the current tile in the for loop is face up or down? We might have called the `drawFaceUp` method on it at some point before, but we never kept track of that. Ba ba bum, it's time for a boolean! Let's modify the draw methods to set a boolean that tells us the state of a tile."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How do we track the number of tries? Well, a \"try\" is every time you've flipped over two tiles, which corresponds to our if block that checks `flippedTiles.length === 2`. We can add a new global variable, `numTries`, that we increment inside that conditional."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In JavaScript at least, the [equality operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators) will return true if it's used on two variables that point to objects, and both of those variables refer to the same object in memory. That means that our check can be simple - just use the equality operator on the `face` property of each tile:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's actually a nice solution that doesn't require too much code to implement. As a performance optimization, we can use the `loop` and `noLoop` functions to make sure that the draw code is only being called when there's a delay happening. Here it all is:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice something? We implemented one aspect of game play, that the player is able to flip over the tiles, but we're missing an important restriction: _they shouldn't be able to flip more than two tiles at once_."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have that method, we can use a for loop in `mouseClicked` to check if each tile is under the `mouseX` and `mouseY`. If so, we'll draw them face up:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we know the tiles match, we need to keep them up. Currently, they'd all get turned over after a delay. We could just not set up the animation in this case, but remember, there will be an animation in later turns - so we can't rely on that. Instead, we need a way of knowing \"hey, when we turn all of them back over, we shouldn't turn these particular ones over.\" Sounds like another good use for a boolean property! We could set a `isMatch` property to true inside that if block, and then only turn tiles over if it's not true:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we can modify the check to make sure the tile is actually face down:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we need to figure out if the two tiles in the `flippedTiles` array do indeed have the same face. Well, what is the `face` property? It's an object - and actually, the face of matching tiles should be exactly the same object, as in, the variable is pointing at the same place in computer memory for both. That's because we only created each image object once (like with `getImage(\"avatars/old-spice-man\")` and then we pushed the same image object onto the faces array twice:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, when you find two matching tiles below, they should stay up after the delay (and after future turns):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Okay, our two-tile-flipping logic is complete. What's next? Let's recap the game rules again:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Okay, so we now have a grid of tiles that we can display face up or face down. But we have no way of actually playing the game. To remind you, here's how the game works:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our modified `mouseClick` function looks like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's not quite right, however - with that code, what would happen if we clicked on the same tile twice in a row? Think about it - it would flip it \"twice\", set `numFlipped` to 2, and prevent future flips. Instead, we only want it to flip the card if it hasn't already been turned face up."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To flip a tile, the player must click on it. To respond to clicking in ProcessingJS programs, we can define a `mouseClicked` function, and that code will be executed every time the mouse is clicked."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try it out below - it's pretty cool how the tiles automatically flip back over, aye?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We already have a check for whether there are two tiles flipped over (`numFlipped === 2`), so how do we check if the tiles have the same face? First, we need some way of accessing the two flipped over tiles. We could iterate through our array, find all the tiles with `isFaceUp` set to true, and then store those into an array. Or, I have a better idea: let's just always store our flipped tiles in an array, for easy access. In fact, we can just replace `numFlipped` with an array, and then use `flippedTiles.length` everywhere we previously used `numFlipped`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can display the score when the game is over- when the player has matched all of the tiles. How do we check that? Well, we have an array of all our tiles, and each has a boolean that tells us if they're matches, so we can just loop through that and check if all of them are true. A neat way to accomplish this in code is to initialize a boolean to true before looping, and keep ANDing it with the boolean on each looped item. As long as it never sees a false (and the array is more than 0 items long!), it will still be true at the end. Here's what that looks like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We know how to flip tiles back over, using the `turnFaceDown` method, but how do we do that _after some period of time_? Every language and environment has a different approach to delaying execution of code, and we need to figure out how to do it in ProcessingJS. We need some way of keeping track of time - whether the delay period has passed - and a way of calling code after the period of time has passed. Here's what I'd suggest:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We will need to keep track of the number of flipped tiles somehow. One simple way would be a global `numFlipped` variable that we increment each time the player turns a card face up. We could then skip the tile hit check if `numFlipped` is 2."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'll first implement the second part, which automatically flips the tiles back over, because it will be hard to test the first part if we can't easily look for new matches."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'll put all that code at the end of our `mouseClicked` function by the way, so that we run it after we've checked for matches in that turn."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'll start by turning our tiles all face down again:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We're only missing one thing now: the scoring. Here's a reminder of that part of the game rules:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When our program sees that the player has clicked somewhere, we want to check if they've clicked on a tile, using `mouseX` and `mouseY`. Let's start by adding a `isUnderMouse` method to `Tile` that returns true if a given x and y is within a tile's area. With the way we've drawn the tiles, the x and y of the tile correspond to the upper left corner of the tile, so we should return true only if the given x is between `this.x` and `this.x + this.width`, and if the given y is between `this.y` and `this.y + this.width`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we've found all of them, we can display some congratulatory text to the user with the number of tries, like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can try it out below, but it might take you a while to get to the win state (no offense to you, of course, it also takes me a while!). Here's a tip for whenever you're testing out parts of your game that are hard to reach - modify your game temporarily so that it's quicker to get there. For example, in this game, change `NUM_ROWS` and `NUM_COLS` to be smaller numbers, and you'll be able to finish much more quickly. Now, try *that* below!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Tile.prototype.drawFaceDown = function() {\n"
"    // ...\n"
"    this.isFaceUp = false;\n"
"};\n"
"\n"
"Tile.prototype.drawFaceUp = function() {\n"
"    // ...\n"
"    this.isFaceUp = true;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Tile.prototype.isUnderMouse = function(x, y) {\n"
"    return x >= this.x && x <= this.x + this.width  &&\n"
"        y >= this.y && y <= this.y + this.width;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < tiles.length; i++) {\n"
"    if (!tiles[i].isMatch) {\n"
"        tiles[i].drawFaceDown();\n"
"    }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if (flippedTiles.length === 2) {\n"
"                    numTries++;\n"
"                    // ...\n"
"               }\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if (flippedTiles[0].face === flippedTiles[1].face) {\n"
"    flippedTiles[0].isMatch = true;\n"
"    flippedTiles[1].isMatch = true;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if (flippedTiles[0].face === flippedTiles[1].face) {\n"
"  // ...\n"
"  }\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if (foundAllMatches) {\n"
"    fill(0, 0, 0);\n"
"    text(\"You found them all in \" + numTries + \" tries\", 20, 360);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if (tiles[i].isUnderMouse(mouseX, mouseY)) {\n"
"            if (numFlipped < 2 && !tiles[i].isFaceUp) {\n"
"              tiles[i].drawFaceUp();\n"
"              numFlipped++;\n"
"            }\n"
"        }\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if there are two tiles flipped over:\n"
"    if the first tile has the same face as the second tile:\n"
"       keep the tiles face up\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    for (var i = 0; i < tiles.length; i++) {\n"
"        if (tiles[i].isUnderMouse(mouseX, mouseY)) {\n"
"            tiles[i].drawFaceUp();\n"
"        }\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"  // process click somehow\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var face = possibleFaces[randomInd];\n"
"    selected.push(face);\n"
"    selected.push(face);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var flippedTiles = [];\n"
"var delayStartFC = null;\n"
"\n"
"mouseClicked = function() {\n"
"    for (var i = 0; i < tiles.length; i++) {\n"
"        if (tiles[i].isUnderMouse(mouseX, mouseY)) {\n"
"            if (flippedTiles.length < 2 && !tiles[i].isFaceUp) {\n"
"                tiles[i].drawFaceUp();\n"
"                flippedTiles.push(tiles[i]);\n"
"                if (flippedTiles.length === 2) {\n"
"                    delayStartFC = frameCount;\n"
"                    loop();\n"
"                }\n"
"            } \n"
"        }\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var foundAllMatches = true;\n"
"    for (var i = 0; i < tiles.length; i++) {\n"
"        foundAllMatches = foundAllMatches && tiles[i].isMatch;\n"
"    }\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var numFlipped = 0;\n"
"mouseClicked = function() {\n"
"    for (var i = 0; i < tiles.length; i++) {\n"
"        if (tiles[i].isUnderMouse(mouseX, mouseY)) {\n"
"            if (numFlipped < 2) {\n"
"              tiles[i].drawFaceUp();\n"
"              numFlipped++;\n"
"            }\n"
"        }\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# Article is at (x608a6d79) on the bn stage.
# Article is at (x608a6d79) on the pl stage.
# Article is at (x608a6d79) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var numFlipped = 0;\n"
"var delayStartFC = null;\n"
"\n"
"mouseClicked = function() {\n"
"    for (var i = 0; i < tiles.length; i++) {\n"
"        if (tiles[i].isUnderMouse(mouseX, mouseY)) {\n"
"            if (numFlipped < 2 && !tiles[i].isFaceUp) {\n"
"                tiles[i].drawFaceUp();\n"
"                numFlipped++;\n"
"                if (numFlipped === 2) {\n"
"                    delayStartFC = frameCount;\n"
"                    loop();\n"
"                }\n"
"            } \n"
"        }\n"
"    }\n"
"};\n"
"\n"
"draw = function() {\n"
"    if (delayStartFC && (frameCount - delayStartFC) > 30) {\n"
"        for (var i = 0; i < tiles.length; i++) {\n"
"            tiles[i].drawFaceDown();\n"
"        }\n"
"        numFlipped = 0;\n"
"        delayStartFC = null;\n"
"        noLoop();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"<pre>if there are two tiles flipped over:\n"
"    if the first tile has the same face as the second tile:\n"
"       keep the tiles face up</pre>"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/memory-game/a/playing-the-game</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ cs-program 1]]Notice something? We implemented one aspect of game play, thatthe player is able to flip over the tiles, but we're missing an important restriction: _they shouldn't be able to flip more than two tiles at once_."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Edges"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Nodes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A simple shape to start working with is a cube. Although a tetrahedron has fewer sides, its sides aren't orthogonal, which makes things trickier. Let's start by creating a 200×200×200 pixel cube, centred at the origin (0, 0, 0)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As you may have noticed, the nodes are all 8 ways of arranging three lots of positive or negative 100."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Next we define an array of edges, where each edge is an array of two numbers. For example, `edge0` defines an edge between `node0` and `node1`. We start counting at 0 because arrays are indexed starting at zero (To get the value of the first node we type `nodes[0]`)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The tricky part is making sure you join the right edges together. Here's a visualization of the edges we're connecting for a cube:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We start by defining an array of nodes, where each node is an array of three digits, the x, y and z coordinates of that node:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We will start not with actually drawing anything, but with coming up with arrays of numbers that describe our shapes in 3D shape - specifically, arrays that describe our **nodes** and our **edges**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can see the nodes of a 2x2x2 cube centered at the origin in the visualization below. Rotate using the mouse:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var edge0 = [0, 1];\n"
"var edge1 = [1, 3];\n"
"var edge2 = [3, 2];\n"
"var edge3 = [2, 0];\n"
"var edge4 = [4, 5];\n"
"var edge5 = [5, 7];\n"
"var edge6 = [7, 6];\n"
"var edge7 = [6, 4];\n"
"var edge8 = [0, 4];\n"
"var edge9 = [1, 5];\n"
"var edge10 = [2, 6];\n"
"var edge11 = [3, 7];\n"
"var edges = [edge0, edge1, edge2, edge3, edge4, edge5, edge6, edge7, edge8, edge9, edge10, edge11];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/creating-3d-shapes</a>.
# Article is at (x4595883b) on the bn stage.
# Article is at (x4595883b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var node0 = [-100, -100, -100];\n"
"var node1 = [-100, -100, 100];\n"
"var node2 = [-100, 100, -100];\n"
"var node3 = [-100, 100, 100];\n"
"var node4 = [ 100, -100, -100];\n"
"var node5 = [ 100, -100, 100];\n"
"var node6 = [ 100, 100, -100];\n"
"var node7 = [ 100, 100, 100];\n"
"var nodes = [node0, node1, node2, node3, node4, node5, node6, node7];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Drawing edges"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Drawing nodes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Is that it?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Setting things up"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "All this talk of projections might sound complicated, but it is very easy to implement: we just ignore the z-coordinates when drawing."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Also inside the draw function we add the code for drawing edges. I would add it before the code for drawing nodes, so the nodes are drawn on top of the edges."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I like to create variables at the top of my programs to control how things are displayed, so I can easily change them later. Here are some variables we will want shortly; feel free to change the values."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Inside the draw function we loop through all the nodes and draw an ellipse at the (x, y) coordinate of that node:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we add a basic draw function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So now that we have a representation of our cube, we need to find a way to draw it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This code loops through the array of edges. It gets the two numbers defined by an edge and looks up the corresponding node in the nodes array. Then it draws a line from the (x, y) coordinate of the first node to the (x, y) coordinate of the second node."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This shifts our canvas 200 pixels right and 200 pixels down, so the pixel at position (0, 0), is now in the centre of our canvas. This means that our cube will be drawn in the center of the screen. The reason for doing things this way will become clear when we start to rotate our objects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To draw a 3D shape on a 2D surface, we need to \"project\" it. Imagine shining a light behind the cube and projecting its shadow onto a screen. The simplest form of projection is an orthogonal projection, which is what you would get if the beams of light were parallel to one another."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could have drawn that with a lot less effort. However, this really is our cube - it's just that we're viewing it end on. If we can work out how to rotate our cube so it's no longer end on to the screen, we'll see that it's not just a square and four circles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We set out to draw a cube, yet all we've done is draw a square and four circles:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We will also need to add the following to our code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"fill(nodeColor);\n"
"noStroke();\n"
"for (var n = 0; n < nodes.length; n++) {\n"
"   var node = nodes[n];\n"
"   ellipse(node[0], node[1], nodeSize, nodeSize);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"stroke(edgeColor);\n"
"for (var e = 0; e < edges.length; e++) {\n"
"   var n0 = edges[e][0];\n"
"   var n1 = edges[e][1];\n"
"   var node0 = nodes[n0];\n"
"   var node1 = nodes[n1];\n"
"   line(node0[0], node0[1], node1[0], node1[1]);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"translate(200, 200);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var backgroundColor = color(255, 255, 255);\n"
"var nodeColor = color(40, 168, 107);\n"
"var edgeColor = color(34, 68, 204);\n"
"var nodeSize = 8;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/drawing-3d-shapes</a>.
# Article is at (x360afc57) on the bn stage.
# Article is at (x360afc57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var draw = function() { \n"
"    background(backgroundColor);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Defining a cuboid"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Working with multiple shapes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A cuboid has three dimensions: width, height and depth:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And a similar for loop for displaying nodes:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we used that function to create a cuboid, we'd access the first node like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It also has a position in 3D space, giving us six parameters. There are a couple of ways we could define the position of the cube: we could define its center or we could define one corner. The former is probably more common, but I think the latter is easier to use."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Make sure you remove any other calls to the rotate functions that do not pass in any nodes. You can see the complete code below."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we need to change the display and rotate functions to work with an array of objects. Start by wrapping the code to display edges in a for loop that loops through all the shapes:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now when we use the mouse to rotate, we have to loop through the shapes and call the function for each one:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our function needs to return both the nodes and edges array. One way to return two variables is to package the variables into an object, with a key for `nodes` and a key for `edges`. Note, you can use any string to refer to the variable, I just find it easier to use the same word."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since our previous code just references global `nodes` and `edges` variables, we need to store our object's properties into those globals:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So we have a cube now, but what if we want to change its position or size? Or what if we want a rectangular cuboid or many cuboids? With our current code, we would have to change the nodes one-by-one, which would be nuisance. What we would like is a simple method to create a cuboid with a certain position and dimensions. In other words, we want a function that maps a position and dimensions into an array of nodes and an array of edges."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This will set `node0` to the first value in the `nodes` array. At the moment, however, there are no values in the nodes or edges arrays."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can create shapes with different dimensions, what if we want more than one? Whenever we want a variable number of things, an array is useful, so lets create an array of shapes."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can then create a cuboid with width 100, height 160, depth 50 and one node on the origin like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could add a similar for loop to each of the rotate functions, but I think it's more flexible to pass the array of nodes to each function - that way we can rotate shapes independently of one another. For example, the rotateZ3D() function would look like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We define the nodes as being every combination of position with or without the corresponding dimension. Edges are defined the same way as before (except rather than define each of the edges individually first, I define them all at once). Note that this function allows you to specify negative dimensions for the cuboid."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can see the complete code below."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// Create a cuboid with a vertex at (x, y, z)\n"
"// with width, w, height, h, and depth, d.\n"
"var createCuboid = function(x, y, z, w, h, d) {\n"
"   var nodes = [];\n"
"   var edges = [];\n"
"   var shape = { 'nodes': nodes, 'edges': edges };\n"
"   return shape;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// Draw edges\n"
"stroke(edgeColor);\n"
"for (var shapeNum = 0; shapeNum < shapes.length; shapeNum++) {\n"
"   var nodes = shapes[shapeNum].nodes;\n"
"   var edges = shapes[shapeNum].edges;\n"
"   for (var e = 0; e < edges.length; e++) {\n"
"      var n0 = edges[e][0];\n"
"      var n1 = edges[e][1];\n"
"      var node0 = nodes[n0];\n"
"      var node1 = nodes[n1];\n"
"      line(node0[0], node0[1], node1[0], node1[1]);\n"
"   }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// Draw nodes\n"
"fill(nodeColor);\n"
"noStroke();\n"
"for (var shapeNum = 0; shapeNum < shapes.length; shapeNum++) {\n"
"   var nodes = shapes[shapeNum].nodes;\n"
"   for (var n = 0; n < nodes.length; n++) {\n"
"      var node = nodes[n]; ellipse(node[0], node[1], nodeSize, nodeSize);\n"
"   }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseDragged = function() {\n"
"   var dx = mouseX - pmouseX;\n"
"   var dy = mouseY - pmouseY;\n"
"   for (var shapeNum = 0; shapeNum < shapes.length; shapeNum++) {\n"
"      var nodes = shapes[shapeNum].nodes;\n"
"      rotateY3D(dx, nodes);\n"
"      rotateX3D(dy, nodes);\n"
"   }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var createCuboid = function(x, y, z, w, h, d) {\n"
"   var nodes = [[x, y, z ], [x, y, z+d], [x, y+h, z ], [x, y+h, z+d], [x+w, y, z ], [x+w, y, z+d], [x+w, y+h, z ], [x+w, y+h, z+d]];\n"
"\n"
"   var edges = [[0, 1], [1, 3], [3, 2], [2, 0], [4, 5], [5, 7], [7, 6], [6, 4], [0, 4], [1, 5], [2, 6], [3, 7]];\n"
"\n"
"   return { 'nodes': nodes, 'edges': edges};\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var nodes = shape.nodes; var edges = shape.edges;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var object = createCuboid(0, 0, 0, 100, 160, 50);\n"
"var node0 = shape.nodes[0];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var rotateZ3D = function(theta, nodes) { ... };\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var shape = createCuboid(0, 0, 0, 100, 160, 50);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/generating-3d-shapes</a>.
# Article is at (x30b0bdb2) on the bn stage.
# Article is at (x30b0bdb2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var shape1 = createCuboid(-120, -20, -20, 240, 40, 40);\n"
"var shape2 = createCuboid(-120, -50, -30, -20, 100, 60);\n"
"var shape3 = createCuboid( 120, -50, -30, 20, 100, 60);\n"
"var shapes = [shape1, shape2, shape3];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### A reason to learn trigonometry"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Rotating a point about the origin"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Rotating in three dimensions"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### User interaction"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Writing a rotate function"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "> $ x = r × cos(α) \\\\ y = r × sin(α) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "> $ x' = r × cos(α + β) \\\\ y' = r × sin(α + β) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "> $ x' = r × cos(α) cos(β) - r × sin(α) sin(β) \\\\ y' = r × sin(α) cos(β) + r × cos(α) sin(β) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"> $ x' = x \\times cos(\\theta) $\n"
"> \n"
"> $ y' = x \\times sin(\\theta) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "> $ x' = x × cos(β) - y × sin(β) \\\\ y' = y × cos(β) + x × sin(β) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And we can use the same argument to create a function that rotates our cube around the x-axis:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we rotate by β to point (x', y'), then:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you don't understand where these equations came from, [this video](/math/trigonometry/less-basic-trigonometry/angle-addition-formula-proofs/v/proof-angle-addition-sine) might help."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have those functions defined, we can rotate 30 degrees by the two other axis:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we know the mathematics, we can write a function to rotate a node, or even better, our array of nodes, around the z-axis. This function will loop through all the nodes in the node array, find its current x and y coordinates and then update them. We store `sin(theta)` and `cos(theta)` outside the loop so we only need to calculate them once:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Rotating things in three dimensions sounds complicated and it can be, but there are some simple rotations. For example, if we imagine rotating our cube around the z-axis (which points out of the screen), we are actually just rotating a square in two dimensions:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Substituting in the values for x and y above, we get an equation for the new coordinates as a function of the old coordinates and the angle of rotation:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To rotate the cube by 30 degrees, we'll call the function like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Triangle diagram"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Using some trigonometric identities, we get:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can now rotate our cube in two dimensions, but it still looks like a square. What if we want to rotate our cube around the y-axis (vertical axis)? If we imagine looking down on our cube as we rotate it around the y-axis, what we would see is a rotating square, just like we do when we rotate about the z-axis."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can rotate the cube by adding function calls, but it's a lot more useful (and satisfying) if we can enable the viewer to rotate the cube using their mouse. For this we need to create a `mouseDragged()` function. This function is automatically called whenever the mouse is dragged."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can take our trigonometry and function from before, and just re-label the axis so that the z-axis becomes the y-axis. In this case, the y-coordinates of the node do not change, only the x and the z:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can see for yourself below."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can see the complete code below. Try using the number scrubber to change the values in the function calls."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can see the rotated cube below - it's slightly more interesting than before, but not by much:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]] We can simplify things further, by just looking at a single node at position (x, 0). Using simple trigonometry we can find that the position of the point after rotating it by θ around the origin is:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]The example above allows us to rotate a point that starts on the x-axis about the origin, but what if it isn't on the x-axis? This requires some slightly more advanced trigonometry. If we call the distance between the point (x, y) and the origin $ r $, and the angle between the line to (x, y) and x-axis $ α $, then:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseDragged = function() {\n"
"   rotateY3D(mouseX - pmouseX);\n"
"   rotateX3D(mouseY - pmouseY);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"rotateX3D(30);\n"
"rotateY3D(30);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"rotateZ3D(30);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var rotateX3D = function(theta) {\n"
"   var sinTheta = sin(theta);\n"
"   var cosTheta = cos(theta);\n"
"   for (var n = 0; n < nodes.length; n++) {\n"
"      var node = nodes[n];\n"
"      var y = node[1];\n"
"      var z = node[2];\n"
"      node[1] = y * cosTheta - z * sinTheta;\n"
"      node[2] = z * cosTheta + y * sinTheta;\n"
"   }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var rotateY3D = function(theta) {\n"
"   var sinTheta = sin(theta);\n"
"   var cosTheta = cos(theta);\n"
"   for (var n = 0; n < nodes.length; n++) {\n"
"      var node = nodes[n];\n"
"      var x = node[0];\n"
"      var z = node[2];\n"
"      node[0] = x * cosTheta - z * sinTheta;\n"
"      node[2] = z * cosTheta + x * sinTheta;\n"
"   }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var rotateZ3D = function(theta) {\n"
"   var sinTheta = sin(theta);\n"
"   var cosTheta = cos(theta);\n"
"   for (var n = 0; n < nodes.length; n++) {\n"
"      var node = nodes[n];\n"
"      var x = node[0];\n"
"      var y = node[1];\n"
"      node[0] = x * cosTheta - y * sinTheta;\n"
"      node[1] = y * cosTheta + x * sinTheta;\n"
"   }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`mouseX` and `mouseY` are built-in variables that contain the current position of the mouse. `pmouseX` and `pmouseY` are built-in variables that contain the position of the mouse in the previous frame. So if the x-coordinate has increased (we move the mouse right), we send a postive value to `rotateY3D()` and rotate the cube counter-clockwise around the y-axis."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/84b894149d55b8283910d85eca74ba889f047e6d.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes</a>.
# Article is at (xd24c1e01) on the bn stage.
# Article is at (xd24c1e01) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/fe3d387a6294add4e81043e0eaa671ec5eb65171.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Representing shapes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Terms"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What are 3D graphics?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Node**: a point represented by three coordinates, x, y and z (can also be called a vertex).\n"
"*   **Edge**: a line connecting two points.\n"
"*   **Face**: a surface defined by at least three points.\n"
"*   **Wireframe**: a shape consisting of just nodes and edges."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "3D cube"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A 3D graphics engine takes a 3D object and converts into 2D graphics, but how do we represent a 3D object in code?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A 3D graphics engine works by calculating what 2D shapes a 3D object would project on to the screen. So to write our own 3D engine, we need to know how to do these calculations. Our program won't be as quick as most 3D engines but it should help us understand the principles of how they work."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A single point in 3D space is easy to represent using an array of three numbers. For example, we can use [30, 80, 55] to represent a point 30 pixels along the horizontal (x) axis, 80 pixels along the vertical (y) axis, and 55 pixels along the axis that goes into and out of the screen. Play around with the point below, rotating with the mouse and tinkering with the numbers:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Below are some terms that we will use when referring to 3D shapes. Other terms might be used elsewhere, but these ones are pretty popular."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's an example of the sort of program you can make - use your mouse to rotate the donut around:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you've been programming here on Khan Academy, you've probably drawn a whole lot of 2D shapes, like with rectangles and ellipses, and maybe you've wondered to yourself how to make 3D shapes, like cubes and spheres."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Representing a line is also easy: you just connect two points. One way to represent an object in 3D, therefore, is by converting it into a group of lines. This is called a wireframe, as it looks like the object is made from wire. It's obviously not ideal for representing solid objects, but it's a good place to start."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since computer screens are essentially two-dimensional, 3D graphics are just 2D optical illusions that trick your brain into thinking it is seeing a 3D object. Here's a simple example:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Three parallelograms pretending to be a cube"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Well, the ProcessingJS library that we use here isn't really designed for 3D graphics, but as it turns out, with some trigonometry, we can write our own 3D graphics engine  and, in doing so, learn a bit how 3D graphics work (and why there is a reason to learn trigonometry besides making math teachers happy!)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_This tutorial is from [Peter Collingridge](/profile/peterwcollingridge/) and was [originally posted](http://petercollingridge.appspot.com/3D-tutorial) on his website._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# Article is at (x9eb3ee1d) on the bn stage.
# Article is at (x9eb3ee1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/1bf54665b00b4b9ebc15e10687dac516efae8f09.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/what-are-3d-shapes</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "Below are some terms that we will use when refering to 3D shapes. Other terms might be used elsewhere, but these ones are pretty popular."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  A shape on the canvas (typically a rectangle)\n"
"2.  Includes a label or icon that describes what it will do\n"
"3.  Responds to the user clicking on it (but not elsewhere)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  Re-introduce global variables for the position and size (`btnX, btnY, btnWidth, btnHeight`)\n"
"2.  Introduce a global array that stores all the parameters (`var btn1 = [...];`)\n"
"3.  Introduce a global object that stores the parameters (`var btn1 = {..}`)\n"
"4.  Use object-oriented principles to define the button and store the properties (`var btn1 = new Button(...))`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And change the `drawButton` function to accept a single object that it then grabs properties from:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And now we can use that function inside `mouseClicked` to greatly reduce the amount of repetitive code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And there we have it! We've used functions to draw multiple buttons, and made it relatively easy to add new buttons. Try it out below:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But doesn't all that repeated code just make your nose crinkle? Let's make a function `isMouseInside` that knows how to check any button object and return true if the mouse was inside it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But, uh oh, what about our `mouseClicked` code? Do you see what the problem would be with it?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "First, what are the bare minimum features of a button?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we had all this code together, we'd get an error from Oh Noes that \"btnX is not defined\" - and he's right! We turned `btnX` into a function parameter, which means it's no longer a global variable. That's great for re-usability of the `drawButton` function, but now the `mouseClicked` function has no way to know what coordinates to check."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you went through the Intro to JS course, then you made a few simple buttons in the Logic challenges [Your First Button](/computing/cs/programming/logic-if-statements/p/challenge-your-first-button) and [Smarter Button](/computing/cs/programming/logic-if-statements/p/challenge-smarter-button). In case you forgot, let's re-hash how to make a simple button."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It definitely works, but it also worries me. I'm worried that it's not highly reusable code. How much work will I have to do if I want to change the position of the button? (Try it above!) I see a lot of \"hard-coded\" numbers in the code -- like the coordinates in the `mouseClicked` function, and I immediately start to wonder if there isn't a cleaner way."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So we need to figure out a nice way to pass the information into `drawButton` **and** make that information available to `mouseClicked`. I can think of a few options:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That will succeed in drawing 2 buttons on the canvas, but only the first will respond to clicks. We can make the second respond by duplicating the logic and swapping `btn2` for `btn1`, like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `mouseClicked` function will check the properties of the global variable:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The whole point of that was to enable us to easily add more buttons, the ultimate re-usability test. Can we do it? Ba Bum BUM."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then we'd call it like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then we'll draw that button:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To achieve #3, we need to define a `mouseClicked` function that will get called when the user clicks, and inside of that, we need to check whether `mouseX` and `mouseY` are within the bounding box of the button. For the button above, it spans from x=100 to x=250, and from y=100 to y=150, as illustrated below:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To start with, let's make variables of the position and size, so that we can change them in a single place and have the button clicking work still. I've added `btnX`, `btnY`, `btnWidth` and `btnHeight` to the program below. Try changing their values around and clicking the button:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try clicking on it and off it below to verify that it works:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try it out below! Like before, try changing different parameters of the button and seeing if everything still works:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can achieve #1 and #2 pretty easily:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can check those coordinates by `&&`ing together four conditions:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can create our global `btn1` object like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could keep going -- making arrays of all the buttons in a program, making it possible to customize the label and color of a button -- but hopefully this has given you a good basis in how to create simple buttons using functions. Next, we'll walk through how to create buttons using object-oriented principles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'll start with a new global variable, `btn2`, offset in the y direction from the first button:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Well, that's better. But still, how much work will I have to do if I want to add an extra button? Do I have to copy and paste all of that, and make `btn2X`, `btn2Y`? Ugh, that doesn't sound fun at all. This sounds like good motivation to write a function that will take care of doing everything that's the same for buttons, and use parameters to take care of what's different. We could write it like this, turning the variables into parameters:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Which to choose? Well, I don't like the first one because we'll have to add **so many** global variables, and I have an allergy to global variables. I don't love the second technique because its hard to read code that grabs data based on array indices. I like the third technique because it introduces only one global variable, and will produce more readable code. I also like the fourth technique, using object-oriented principles to create generic `Button` object types, but let's save that for later."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"drawButton(100, 100, 150, 50);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"drawButton(btn2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"fill(0, 234, 255);\n"
"rect(100, 100, 150, 50, 5);\n"
"fill(0, 0, 0);\n"
"textSize(19);\n"
"text(\"Useless button\", 110, 133);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (isMouseInside(btn1))     {\n"
"        println(\"Still pretty useless\");    \n"
"    } else if (isMouseInside(btn2))     {\n"
"        println(\"2nd one still quite useless!\");    \n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (mouseX >= 100 && mouseX <= 250 &&\n"
"        mouseY >= 100 && mouseY <= 150) {\n"
"        println(\"Still pretty useless\");    \n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (mouseX >= btn1.x && mouseX <= (btn1.x+btn1.width) &&\n"
"        mouseY >= btn1.y && mouseY <= (btn1.y+btn1.height))     {\n"
"        println(\"Still pretty useless\");    \n"
"    }\n"
"\n"
"    if (mouseX >= btn2.x && mouseX <= (btn2.x+btn2.width) &&\n"
"        mouseY >= btn2.y && mouseY <= (btn2.y+btn2.height))     {\n"
"        println(\"2nd one still quite useless!\");    \n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (mouseX >= btn1.x && mouseX <= (btn1.x+btn1.width) &&\n"
"        mouseY >= btn1.y && mouseY <= (btn1.y+btn1.height))     {\n"
"        println(\"Still pretty useless\");    \n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (mouseX >= btnX && mouseX <= (btnX+btnWidth) &&\n"
"        mouseY >= btnY && mouseY <= (btnY+btnHeight)) {\n"
"        println(\"Still pretty useless\");    \n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = {\n"
"    x: 100,\n"
"    y: 100,\n"
"    width: 150,\n"
"    height: 50\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn2 = {\n"
"    x: 100,\n"
"    y: 200,\n"
"    width: 150,\n"
"    height: 50\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawButton = function(btn) {\n"
"    background(255, 255, 255);\n"
"    fill(0, 234, 255);\n"
"    rect(btn.x, btn.y, btn.width, btn.height, 5);\n"
"    fill(0, 0, 0);\n"
"    textSize(19);\n"
"    textAlign(LEFT, TOP);\n"
"    text(\"Useless button\", btn.x+10, btn.y+btn.height/4);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawButton = function(btnX, btnY, btnWidth, btnHeight) {\n"
"    background(255, 255, 255);\n"
"    fill(0, 234, 255);\n"
"    rect(btnX, btnY, btnWidth, btnHeight, 5);\n"
"    fill(0, 0, 0);\n"
"    textSize(19);\n"
"    textAlign(LEFT, TOP);\n"
"    text(\"Useless button\", btnX+10, btnY+btnHeight/4);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var isMouseInside = function(btn) {\n"
"    return (mouseX >= btn.x &&\n"
"            mouseX <= (btn.x+btn.width) &&\n"
"            mouseY >= btn.y && \n"
"            mouseY <= (btn.y+btn.height));\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-function</a>.
# Article is at (x8dffd9bd) on the bn stage.
# Article is at (x8dffd9bd) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/e19f7bfe6fcbebc57ac77630d06aefcdc5d6454f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "...With a function! In JavaScript (but not all languages), we can pass functions as parameters to functions. That's useful in many situations, but particularly useful when defining behavior for UI controls like buttons. We can tell the button, \"hey, here's this function, it's a bunch of code that I want you to call when the user clicks the button.\" We refer to those functions as **_\"callback\"_** functions because they won't be called immediately, they'll be \"called back\" at an appropriate time later."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "All that work for a constructor, ay? But, it'll be worth it, I swear."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And now we're done - we have a `Button` object that we can easily create new buttons out of, making each button look different and responding differently to click events. Click around on the example below, and see what happens when you change button parameters:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As a first attempt, here's a constructor that takes in x, y, width, and height:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But we can go a step farther than that. What if most buttons will be the same width or height? We shouldn't have to keep specifying the width and height parameters for every button, we should only have to specify them when necessary. We can have the constructor check if the property is actually defined in the config object, and set a default value if not. Like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But, there's something that irks me about the way we've set up that click handling. The whole point of object oriented programming is to bundle up all the behavior related to an object inside the object, and to use properties to customize behavior. But, we've left some of the behavior dangling outside the object, the `println`s inside `mouseClicked`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Finally, we need to actually call back the callback function once the user clicks the button. That's actually pretty simple- we can just call it by writing the property name we saved it into and following that with empty parantheses:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a program that uses that `Button` object to create 2 buttons - notice how easy it is to create and draw multiple buttons:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's very similar, isn't it? But there's a big difference -- all the functions are defined on the `Button` object type, they actually belong to the buttons. There's a tighter coupling of properties and behavior, and that tends to lead to cleaner and more reusable code."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's contrast that to the code we wrote in the last article:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have the constructor squared away (buttoned away?), let's define a bit of behavior: the `draw` method. It'll be the same code as the `drawButton` function, but it will grab all the properties from `this`, since it's defined on the object prototype itself:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that you have that as a template, you could customize your buttons in other ways, like different colors, or have them respond to other events, like mouseover. Try it out in your programs!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we can just call it with a subset of the properties, because the other ones will be set to the default value:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we can use that from inside a `mouseClicked` function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once that's defined, we can call it like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One of the best ways to make code reusable and powerful is to use object-oriented programming, especially for making UI controls like buttons. In object-oriented programming, we think of our program world in terms of abstract object types that have particular behavior, and then we create specific instances of those object types with particular parameters. If you don't remember how to do it in JavaScript, [review it here](/computing/cs/programming/object-oriented/a/review-object-oriented-design)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That certainly works, but I have another approach I'd like to recommend. Instead of taking in individual parameters, the constructor could take in a configuration object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's much nicer, since now everything associated with the each button's particular behavior is wrapped up in the constructor. But it's also overly simple. What if we wanted to do something besides printing a message, like draw a few shapes or change scenes, something that would take a few lines of code? In that case, we'd want to provide the constructor with more than just a string-- we actually want to provide it with a bunch of code. How can we pass around a bunch of code?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The advantage of the config object is that we can keep adding more parameters for the constructor to handle (like `label`), and it's still easy for us to understand what each parameter does when we construct a button:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Those print statements should be better tied to each button somehow, like as something that we pass into the constructor. Just looking at it the way it is now, we could decide to pass a message into the constructor config, and define a `handleMouseClick` function to print it out:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To define the `Button` object type, we need to start with the constructor: the special function that takes in configuration parameters and sets the initial properties of the object instance."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To use OOP to make buttons, we'll need to define a `Button` object type and then define methods on it, like to draw it and handle mouse clicks. We'd like to be able to write code that looks like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try it out below, clicking each of the buttons:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can start by passing an `onClick` parameter that's a function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We skipped the hard part, however: handling clicks. We can start by defining a function on the `Button` prototype that will report true if the user clicked inside a particular button's bounding box. Once again, this is just like our function from before, but it grabs all the properties from `this` instead of a passed in object:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We then have to make sure our constructor sets an `onClick` property according to what's passed in. For the default, in case there's no `onClick` passed in, we'll just create a \"no-op\" function -- a function that does \"no operations\" at all. It's just there so that we can call it and not experience an error:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Button.prototype.draw = function() {\n"
"    fill(0, 234, 255);\n"
"    rect(this.x, this.y, this.width, this.height, 5);\n"
"    fill(0, 0, 0);\n"
"    textSize(19);\n"
"    textAlign(LEFT, TOP);\n"
"    text(this.label, this.x+10, this.y+this.height/4);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Button.prototype.handleMouseClick = function() {\n"
"    if (this.isMouseInside()) {\n"
"        this.onClick();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Button.prototype.isMouseInside = function() {\n"
"    return mouseX > this.x &&\n"
"           mouseX < (this.x + this.width) &&\n"
"           mouseY > this.y &&\n"
"           mouseY < (this.y + this.height);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"btn1.draw();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (btn1.isMouseInside()) {\n"
"        println(\"You made the right choice!\");\n"
"    } else if (btn2.isMouseInside()) {\n"
"        println(\"Yay, you picked me!\");\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Button = function(config) {\n"
"    ...\n"
"    this.message = config.message || \"Clicked!\";\n"
"};\n"
"\n"
"Button.prototype.handleMouseClick = function() {\n"
"    if (this.isMouseInside()) {\n"
"         println(this.message);\n"
"    }\n"
"};\n"
"\n"
"var btn1 = new Button({\n"
"    x: 100,\n"
"    y: 100,\n"
"    label: \"Please click!\",\n"
"    message: \"You made the right choice!\"\n"
"});\n"
"\n"
"mouseClicked = function() {\n"
"   btn1.handleMouseClick();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Button = function(config) {\n"
"    // ...\n"
"    this.onClick = config.onClick || function() {};\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Button = function(config) {\n"
"    this.x = config.x || 0;\n"
"    this.y = config.y || 0;\n"
"    this.width = config.width || 150;\n"
"    this.height = config.height || 50;\n"
"    this.label = config.label || \"Click\";\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Button = function(config) {\n"
"    this.x = config.x;\n"
"    this.y = config.y;\n"
"    this.width = config.width;\n"
"    this.height = config.height;\n"
"    this.label = config.label;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Button = function(x, y, width, height) {\n"
"    this.x = x;\n"
"    this.y = y;\n"
"    this.width = width;\n"
"    this.height = height;\n"
"};\n"
"\n"
"var btn1 = new Button(100, 100, 150, 150);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = new Button(...);\n"
"btn1.draw();\n"
"\n"
"mouseClicked = function() {\n"
"  if (btn1.isMouseInside()) {\n"
"     println(\"Whoah, you clicked me!\");\n"
"  }\n"
"}\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = new Button({\n"
"    x: 100,\n"
"    y: 100,\n"
"    label: \"Please click!\",\n"
"    onClick: function() {\n"
"       text(\"You made the right choice!\", 100, 300);\n"
"    }\n"
"});\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = new Button({\n"
"    x: 100, y: 100,\n"
"    width: 150, height: 50,\n"
"    label: \"Please click!\"});\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = new Button({x: 100, y: 100, label: \"Please click!\"});\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# Article is at (x1f1cd8f4) on the bn stage.
# Article is at (x1f1cd8f4) on the pl stage.
# Article is at (x1f1cd8f4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = {...};\n"
"drawButton(btn1);\n"
"\n"
"mouseClicked = function() {\n"
"  if (isMouseInside(btn1)) {\n"
"     println(\"Whoah, you clicked me!\");\n"
"  }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Button = function(x, y, width, height) {\n"
"    this.x = x;\n"
"    this.y = y;\n"
"    this.width = width;\n"
"    this.height = height;\n"
"};\n"
"\n"
"var btn1 = new Button(100, 100, 150, 150);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = new Button({\n"
"    x: 100, y: 100,\n"
"    width: 150, height: 50,\n"
"    label: \"Please click!\"});\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = new Button({x: 100, y: 100, label: \"Please click!\"});\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/a-button-object-type</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var btn1 = {...};\n"
"drawButton(btn1);\n"
"\n"
"mouseClicked = function() {\n"
"  if (isMouseInside(btn1)) {\n"
"     println(\"Whoah, you clicked me!\");\n"
"  }\n"
"}\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   commands to draw shapes and text\n"
"*   ways to listen to events\n"
"*   ways to detect the mouse location of them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Buttons. Buttons, buttons, buttons! Besides being the shape of my nose, a button is an area that you click to make something happen. Look around this webpage, how many button-y things do you see? Look around wherever you're sitting, how many button-y things surround you?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Onward, to the button-mobile!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of 3D Roller Coaster program"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of 6 Reasons Not to Be a Fly program"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of Mini Putt"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are buttons everywhere, and you'll often want some sort of button in the programs that you make here. Check out these example programs to see how they use buttons:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are some programming environments that provide buttons and other user interface elements out of the box, like HTML provides for webpages, but ProcessingJS is not one of those. Instead, ProcessingJS gives us building blocks:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can put those building blocks together to make buttons, and in doing so, we'll learn more about programming. We'll start with the simplest button possible, then make our code more re-usable with functions, and finally organize it even more with object-oriented principles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[3D Roller Coaster](/cs/adjustable-3d-roller-coaster-track/5851102203346944)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[6 Reasons Not to Be a Fly](/cs/why-not-to-be-a-fly/6017328347611136)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[Mini Putt](/cs/mini-putt/5995007307677696)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/68fdea6977cad3379ac61fe83242fce4b1e165ec.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/6f476b1f6e7c46c7a9f07ad6f9dcc10ac21e5e45.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# Article is at (xaf8fe278) on the bn stage.
# Article is at (xaf8fe278) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c5ea1afbeb5259ba4c0aeef75cdacb36baba873c.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of the Copy Slayers program"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "[The Copy Slayers](/cs/the-copy-slayers/6094673339219968)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-buttons/a/what-are-buttons</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/e0c78f8a43e5283178bec1a861e5be1e8029b820.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Alright, now that we've discussed all that, here's the story in its clickable, animated glory. You can almost hear the beats coming out of scene 4!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's just think through that for a bit: whenever we define a `draw()` function in our code, it will then get called repeatedly (defaulting to 30 FPS), and whenever it's called, when the current scene has already been set to 4, then it'll call the function to draw scene 4\\. When it's any other value, it won't attempt to draw anything at all-- keeping whatever was already on the screen. We still need to do the initial scene drawing in `mouseClicked`, this logic just takes care of animating every frame after."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's talk about animation first. What if we wanted to show Winston in his rock star phase, drumming hard to the beat? We'd normally do that by defining the `draw` function to contain code that draws shapes that move position slightly each frame. Here's an example, where the position of the drumming hands is based on the current `millis()` value, the number of ellapsed milliseconds:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice something? It worked, but only kind of. We could see Winston with his drum set, but his drum sticks weren't moving. How sad! It's hard to make music when you're frozen in time. Perhaps you've already caught onto the issue: we're no longer calling the drumsticks-drawing code from within `draw()`, so it's only getting called once--not repeatedly--and thus only rendering the sticks at the moment in time at which it's first called. Perhaps you've also already guessed the solution: define a `draw()` function, and call `drawScene4()` when appropriate."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Some of you might be thinking: why don't we just have logic that calls _every_ scene drawing function inside `draw()`? Well, you certainly could, and that'd mean that if you added animation to the other scenes, then they would just work immediately. But assuming you don't animate your other scenes, that means you're making the computer re-draw those scenes repeatedly _for no reason_. From a performance perspective, that's not good. If we know we can easily save the computer unnecessary work, we should. It will make our programs faster and users happier."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try it out below - click through a few times:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We've seen how to make multiple simple scenes - but our scenes were what we call \"static\" - they weren't animated, nor did they have any response to user interaction. As we'll see, it requires a bit more finesse to handle fancier scenes. But hey, let's get fancy!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What if we add that as scene 4 to our previous example? We'll move the code into a `drawScene4()` function, and modify our `mouseClicked` logic."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"    if (currentScene === 4) {\n"
"        drawScene4();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# Article is at (x41310aec) on the bn stage.
# Article is at (x41310aec) on the pl stage.
# Article is at (x41310aec) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawScene4 = function() {\n"
"    currentScene = 4;\n"
"    background(194, 255, 222);\n"
"\n"
"    var x = cos(millis()*1); \n"
"    var y = cos(millis()+98);\n"
"\n"
"    ...\n"
" };\n"
"\n"
" mouseClicked = function() {\n"
"    if (currentScene === 1) {\n"
"        drawScene2();\n"
"    } else if (currentScene === 2) {\n"
"        drawScene3();\n"
"    } else if (currentScene === 3) {\n"
"        drawScene4();\n"
"    } else if (currentScene === 4) {\n"
"        drawScene1();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/animated-scenes</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawScene4 = function() {\n"
"    currentScene = 4;\n"
"    background(194, 255, 222);\n"
"\n"
"    var x = cos(millis()*1); \n"
"    var y = cos(millis()+98);\n"
"\n"
"    ...\n"
" };\n"
"\n"
" mouseClicked = function() {\n"
"    if (currentScene === 1) {\n"
"        drawScene2();\n"
"    } else if (currentScene === 2) {\n"
"        drawScene3();\n"
"    } else if (currentScene === 3) {\n"
"        drawScene4();\n"
"    } else if (currentScene === 4) {\n"
"        drawScene1();\n"
"    }\n"
"};\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And hey, just in case some enterprising individual decides to drag babies all over the next button, let's call it at the end of `mouseDragged` as well:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But, haha, you know what's hilarious? The button does nothing! I mean, the user might think it does something, if they decide to click only that area. But in fact, they could click anywhere, and it'd do the same thing. We need to change our `mouseClicked` logic so that we check the button location before we decide it's scene-a-changing time."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Like we did in the button challenges in Intro to JS, we need to come up with an if condition to check `mouseX` and `mouseY`. Usually, that means combining four conditions with the `&&` operator, checking that the `mouseX` is greater than the left side, `mouseX` is less than the right side, `mouseY` is greater than the top edge, and `mouseY` is less than the bottom edge. But, our button is in the upper right corner, and I want to give the user some clicking leeway room anyway, so let's just simplify and only check two conditions - is `mouseX` greater than the left side, and is `mouseY` less than the bottom edge?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that we need to keep the check for current scene, to make sure it only happens for that scene. But now, it's easy for us to add click interaction on any other scene too. What else could you let the user add? Drums? Facial hair? Play around with the program below:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have a way of knowing when a click is meant for changing scenes, we can use clicks for other interactions in our scenes, as long as they're not clicking on the button. That means we can let the user add the Winston babies on click instead of drag, like we originally wanted. We'll just add an else to our if, and move the code from `mouseDragged` into that else:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now where should we call it? We definitely need to call it when we draw the first scene, so they have a way of getting to the next scene:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Okay, I lied, it's not quite that simple. With the above code, we would see the button in every scene except one. Can you figure out which one? I'll give you a few seconds...stop reading this! Are you thinking about it? Okay, okay, it's the animated scene. That's because the code inside `draw()` will draw scene 4 on top of the button immediately, so we need to add it to the end of that function as well:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's it! With that check, we now have a program where the user clicks a particular area of the screen to move to the next scene. Try out clicking the button and non-button parts:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We also need to display it on every subsequent scene. We could call it from inside every scene drawing function, but there's a simpler way: just stick it at the end of our `mouseClicked` function, to make sure it's called after we draw every scene:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We've gotten away so far with just having the user click anywhere at all in order to change scenes. But we've realized there's a drawback to that approach: we can't use clicks within scenes for any sort of additional interaction. The way that many games and apps solve that is by adding specific UI elements, like menus and buttons, and only navigating scenes upon interaction with a specific UI element. Let's add a button in the top right to control the scenes in our program."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What is a \"button\"? It's two things really: 1) the visual indicator that an area is clickable and 2) the logic that makes that area respond to clicks. Let's start with the visual indicator, a `rect()` with some `text()`, and wrap it in a function, in case we want to call it multiple times:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Woo! Now we've got a button in every scene, all the time. Check it out:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ cs-program 2]]"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"    if (currentScene === 4) {\n"
"        drawScene4();\n"
"    }\n"
"    drawButton();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"drawScene1();\n"
"drawButton();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (currentScene === 1) {\n"
"        drawScene2();\n"
"    } else if (currentScene === 2) {\n"
"        drawScene3();\n"
"    } else if (currentScene === 3) {\n"
"        drawScene4();\n"
"    }  else if (currentScene === 4) {\n"
"        drawScene5();\n"
"    } else if (currentScene === 5) {\n"
"        drawScene1();\n"
"    }\n"
"    drawButton();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (mouseX >= 340 && mouseY <= 45) {\n"
"        ...\n"
"    } else {\n"
"        if (currentScene === 5) {\n"
"            image(getImage(\"creatures/BabyWinston\"), mouseX-20, mouseY-20);\n"
"        }\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (mouseX >= 340 && mouseY <= 45) {\n"
"        if (currentScene === 1) {\n"
"            drawScene2();\n"
"        } else if (currentScene === 2) {\n"
"            drawScene3();\n"
"        } else if (currentScene === 3) {\n"
"            drawScene4();\n"
"        }  else if (currentScene === 4) {\n"
"            drawScene5();\n"
"        } else if (currentScene === 5) {\n"
"            drawScene1();\n"
"        }\n"
"        drawButton();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseDragged = function() {\n"
"    if (currentScene === 5) {\n"
"        image(getImage(\"creatures/BabyWinston\"), mouseX-20, mouseY-20);\n"
"    }\n"
"    drawButton();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/button-controlled-scene-changes</a>.
# Article is at (x0ca994bb) on the bn stage.
# Article is at (x0ca994bb) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawButton = function() {\n"
"    fill(81, 166, 31);\n"
"    rect(340, 10, 50, 25);\n"
"    fill(255, 255, 255);\n"
"    textSize(16);\n"
"    text(\"NEXT\", 344, 29);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**1\\. We could put the line at the top of the function:**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**2\\. We could put the line inside the `currentScene === 4` if block:**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**3\\. We could put the line inside the `currentScene === 5` if block:**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**4\\. We could stop re-drawing scene 1 at the end, and tell the user to restart in that case.** Sure, that'd work, but that relies on the fact that our click-controlled screen happens to be in the last one. What if we wanted an earlier click-controlled scene? That solution would fail."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**5\\. We could use a different sort of interaction - like `mouseDragged. `** That will work, because dragging doesn't also cause a click event. We still need to check that `currentScene === 5`, to make sure dragging doesn't draw babies in any other scene:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After all, that's where we call `drawScene5()`, and the babies should be added to scene 5\\. But think about it: that'd mean that we'd **always** draw an extra baby, every time we drew the scene. It'd also mean that we'd never draw **any more** babies, because `currentScene` would get set to 5, and the code in that if block wouldn't get executed any more."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But how do we integrate the `mouseClicked` functionality? We've already defined a `mouseClicked` in our code, and we can't define it twice. In JavaScript, the last function definition \"wins\", it overrides any previous definitions. That means that we need to find a good place to put that baby drawing line inside our existing `mouseClicked`. Let's talk about a few options:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what that looks like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what that scene would look like as a standalone program. The program draws the static part of the scene, and then in `mouseClicked`, it draws Winston baby images at the clicked mouse location, layering them on top of whatever was already drawn."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How would we integrate that into our multi-scene program? Well, we'd start by just wrapping all the static drawing code into a scene drawing function `drawScene5()` and adding scene switching logic to `mouseClicked`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we know how to make sweet animated scenes, let's make sure we can handle the other sort of non-static scene: scenes that respond to user interaction. For example, we want to draw a scene where Winston has babies (after his rock star phase, of course) -- but we also want to let the user click to give Winston MORE babies. Because we can always use more little Winstonitos in the world, right?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So, that kind of works, although I'm a bit worried about how many babies Winston might end up with. Generally, this is not an optimal solution, since it means we have to limit ourselves to designing scenes that don't respond to mouse clicks. We don't want to have to have that constraint, _there must be a better way._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That would mean we wouldn't draw babies until the first click after the initial drawing of the scene. But, as you can see from the line after it, the baby would be instantly replaced with scene 1."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then it will get called EVERY time the user clicks the mouse, even if it's not the baby making scene (and it'd be weird if baby winston had a baby). No good."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is where we realize a fatal flaw in our idea of integrating this baby-clicking scene into our scenes: we're using the exact same interaction--a mouse click anywhere on the screen--to change scenes as well as to do within-scene interaction. Now we really have a conundrum on our hands, and we need to consider more radical options for integrating the scene."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try it out below, making sure you drag on the final scene:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What if we instead differentiated mouse clicks by location, so that a click in one location would mean changing scenes, and clicks elsewhere could be used for in-scene interaction? You know, like a button! In fact, that's how most multi-scene programs approach this problem, and we'll talk through that next."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (currentScene === 1) {\n"
"        drawScene2();\n"
"    } else if (currentScene === 2) {\n"
"        drawScene3();\n"
"    } else if (currentScene === 3) {\n"
"        drawScene4();\n"
"    }  else if (currentScene === 4) {\n"
"        drawScene5();\n"
"        image(getImage(\"creatures/BabyWinston\"), mouseX-20, mouseY-20);\n"
"    } else if (currentScene === 5) {\n"
"        drawScene1();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    if (currentScene === 1) {\n"
"        drawScene2();\n"
"    } else if (currentScene === 2) {\n"
"        drawScene3();\n"
"    } else if (currentScene === 3) {\n"
"        drawScene4();\n"
"    }  else if (currentScene === 4) {\n"
"        drawScene5();\n"
"    } else if (currentScene === 5) {\n"
"        image(getImage(\"creatures/BabyWinston\"), mouseX-20, mouseY-20);\n"
"        drawScene1();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    image(getImage(\"creatures/BabyWinston\"), mouseX-20, mouseY-20);\n"
"    ...\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseDragged = function() {\n"
"    if (currentScene === 5) {\n"
"        image(getImage(\"creatures/BabyWinston\"), mouseX-20, mouseY-20);\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/interactive-scenes</a>.
# Article is at (x3bf16a6f) on the bn stage.
# Article is at (x3bf16a6f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawScene5 = function() {\n"
"    currentScene = 5;\n"
"    background(173, 239, 255);\n"
"    fill(7, 14, 145);\n"
"    textSize(39);\n"
"    text(\"Winston has babies!\", 10, 47);\n"
"    ...\n"
"};\n"
"\n"
"mouseClicked = function() {\n"
"    if (currentScene === 1) {\n"
"        drawScene2();\n"
"    } else if (currentScene === 2) {\n"
"        drawScene3();\n"
"    } else if (currentScene === 3) {\n"
"        drawScene4();\n"
"    }  else if (currentScene === 4) {\n"
"        drawScene5();\n"
"    } else if (currentScene === 5) {\n"
"        drawScene1();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As long as we've made scene 2 into a function, we may as well make scene 1 into a function as well, just wrapping all that code up and calling it. Now, try this one out below, and see how easy it is to comment out the `drawScene2()` call when you want to edit that code and see it immediately."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Great, so we have a main scene and a second scene. What if we want to display a third scene? Or go back to the first scene once we click on the third? We need to change the logic of inside `mouseClicked` so that it _conditionally chooses_ which of the scenes to show, instead of always calling scene 2\\. That means we need an if statement that will check some sort of condition. Let's think about this in terms of pseudo-code first:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It looks like we need to keep track of the \"current scene\", and it'd make the most sense to store it as a number. Let's declare a global variable `currentScene` and check it inside `mouseClicked`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's say we want to tell the story of Winston as an illustrated story book, with the user clicking to read the next part of the story. We'll start off with a main scene that just has a title:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's solve that problem first. Yes, you and I can survive with annoying-ness, but we want to all be more productive programmers, and won't we be more productive if we can edit scene 2 and see the results in real-time? In this case, an easy thing to do is to wrap all of the scene 2 code inside a function, call that function from `mouseClicked`, and then call that function when we're debugging."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we want it so the user can click to see the first part of the story, Winston's epic birth. To do that, we can define a `mouseClicked` function that will be called whenever the user clicks the mouse, and we can put in the code to draw our second scene there. Note that we have to call `background()` before drawing the second scene, otherwise we'll see both scenes on top of each other:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The conditions look like our pseudo-code, but there's one problem: we never actually set `currentScene` to a value, so those conditions will never be true. We _could_ set it inside the if conditions, but it's probably better to set it inside the scene drawing functions themself, so that the variable is set correctly no matter where we call scene drawing functions from."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try it out below- edit the code for the second scene and notice that it's annoying to edit, because you have to click every time you want to see what your second scene looks like."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We've put it all together in the program below. Click through it and see how it cycles around to the beginning of the story. Try adding a scene four (Winston meeting Oh Noes? Winston meeting Winstonia and moving to Winstonsin?), and spin it off:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// When the user clicks the mouse:\n"
"    // if the current scene is the first one, go to the second\n"
"    // if the current scene is the second one, go to the third\n"
"    // if the current scene is the third one, go back to the first\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"background(235, 247, 255);\n"
"fill(0, 85, 255);\n"
"textSize(39);\n"
"text(\"The Story of Winston\", 10, height/2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mouseClicked = function() {\n"
"    // Scene 2\n"
"    background(173, 239, 255);\n"
"    fill(7, 14, 145);\n"
"    text(\"Lil Winston is born!\", 10, 100);\n"
"    image(getImage(\"creatures/BabyWinston\"), width/2, height/2);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var currentScene;\n"
"\n"
"mouseClicked = function() {\n"
"    if (currentScene === 1) {\n"
"        drawScene2();\n"
"    } else if (currentScene === 2) {\n"
"        drawScene3();\n"
"    } else if (currentScene === 3) {\n"
"        drawScene1();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawScene1 = function() {\n"
"    currentScene = 1;\n"
"    ...\n"
"};\n"
"\n"
"var drawScene2 = function() {\n"
"    currentScene = 2;\n"
"    ...\n"
"};\n"
"\n"
"var drawScene3 = function() {\n"
"    currentScene = 3;\n"
"    ...\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# Article is at (x57fda84f) on the bn stage.
# Article is at (x57fda84f) on the pl stage.
# Article is at (x57fda84f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var drawScene2 = function() {\n"
"    background(173, 239, 255);\n"
"    fill(7, 14, 145);\n"
"    text(\"Lil Winston is born!\", 10, 100);\n"
"    image(getImage(\"creatures/BabyWinston\"), width/2, height/2);\n"
"};\n"
"\n"
"mouseClicked = function() {\n"
"    drawScene2();\n"
"};\n"
"\n"
"// Scene 1\n"
"background(235, 247, 255);\n"
"fill(0, 85, 255);\n"
"textSize(39);\n"
"text(\"The Story of Winston\", 10, height/2);\n"
"\n"
"drawScene2();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we want it so the user can click to see the first part of the story, Winston's epic birth. To do that, we can define a `mouseClicked` function that will be called whenever the user clicks the mouse, and we can put in the code to draw our second scene there. Note that we have to call `background()` before drawing the second scene, otherwise we'll see both scenes on top of eachother:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/simple-scene-changes</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// When the user clicks the mouse:\n"
"    // if the current scene is the first one, go to the second\n"
"    // if the current scene is the second one, go to the third\n"
"    // if the current scene is the third one, go back to the first\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Many games and visualizations have what we call \"scenes\", and they need some way of managing those \"scenes.\" What do I mean by scenes?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Most games have those scenes, in fact. Each scene is a distinct state of the program that displays different information, and there is some way for the user to get from one scene to the next. Maybe it's a simple mouse click or key press, or maybe it's selecting a scene from a menu."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you've realized that you need something like scenes for your program, you'll have to decide how to program them. Like many things in programming, there are many ways to do that, but we'll hopefully give you a few ideas."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Take for example, [Balloon Popper 2](/cs/balloon-popper-2/5419249456119808). It has four scenes:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"[[☃ image 1]] |\n"
"| **A how-to-play scene** |   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"[[☃ image 2]] |\n"
"| **A playing scene** |   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"[[☃ image 3]] |\n"
"| **A game over scene** |   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 4]] |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/6564d655699a86ffb4bb2deb4ce61a48a3110795.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/7fd780584ceb8ec56d82f31767757ca82480330c.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/f47696a430369f8a509f6c60133f819887f3363b.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/fa0886d6744d9d4b53ebf2bc1e315c3cfdeb56d3.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-scenes/a/what-are-scenes</a>.
# Article is at (x22470f6b) on the bn stage.
# Article is at (x22470f6b) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "| **A start scene** |   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Order matters"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### The transformation matrix"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/hour-of-code/hour-of-code-blocks/a/hour-of-code-blocks-code-beyond-the-hour">http://translate.khanacademy.org/computing/hour-of-code/hour-of-code-blocks/a/hour-of-code-blocks-code-beyond-the-hour</a>.
# Article is at (x16521ad4) on the bg stage.
# Article is at (x16521ad4) on the fr stage.
# Article is at (x16521ad4) on the ja stage.
# Article is at (x16521ad4) on the pl stage.
# Article is at (x16521ad4) on the sr stage.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "<div class=\"callout\">"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Every time you do a rotation, translation, or scaling, the information required to do the transformation is accumulated into a table of numbers. This table, or matrix has only a few rows and columns, yet, through the miracle of mathematics, it contains all the information needed to do any series of transformations. And that’s why the `pushMatrix()` and `popMatrix()` have that word in their name."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In a similar manner, `pushMatrix()` puts the current status of the coordinate system at the top of a memory area, and `popMatrix()` pulls that status back out. The preceding example used `pushMatrix()` and `popMatrix()` to make sure that the coordinate system was \"clean\" before each part of the drawing. In all of the other examples, the calls to those two functions weren’t really necessary because there were no subsequent transformations, but it doesn’t hurt anything to save and restore the grid status. As a best practice, always use those functions when you're doing any transformations."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that you've seen the basics of translation, rotation, and scaling, let's talk about using all of them together, and some of the complexities we brushed over at the beginning."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There is also a `resetMatrix()` function that resets the matrix back to its very original state (the \"identity matrix\"), but the push and pop functions are nearly always the better approach."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# Article is at (xd87caae5) on the bn stage.
# Article is at (xd87caae5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This article is an adaptation of [2D Transformations](http://www.processing.org/tutorials/transform2d/) by J David Eisenberg, used under a [Creative Commons Attribution-NonCommercial-ShareAlike](http://creativecommons.org/licenses/by-nc-sa/2.0/) License."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to learn or review how matrices work in Algebra? You can go through [Matrices](/math/algebra2/algebra-matrices) on Khan Academy, in particular, the [Geometric transforms with matrices](/math/algebra2/algebra-matrices/transformation-matrix/v/transforming-position-vector) section."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What about the push and pop part of the names? These come from a computer concept known as a stack, which works like a spring-loaded tray dispenser in a cafeteria. When someone returns a tray to the stack, its weight pushes the platform down. When someone needs a tray, he takes it from the top of the stack, and the remaining trays pop up a little bit."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you do multiple transformations, the order makes a difference. A rotation followed by a translate followed by a scale will not give the same results as a translate followed by a rotate by a scale. Here is an example program that demonstrates that:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/multiple-transformations</a>.
# Article is at (x1230d30f) on the bn stage.
# Article is at (x1230d30f) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Which order you use depends on what your desired effect is. Just keep in mind that you're moving the graph paper, not the object itself, and you should find an order that works for you."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Rotating the correct way"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Translate the coordinate system’s origin (0, 0) to where you want the upper left of the square to be.\n"
"*   Rotate the grid 45° (π/4 radians)\n"
"*   Draw the square at the origin."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's the rotated square program, done the correct way. Notice the difference in the code: this program does `translate(40, 40);` and then `rect(**0, 0,** 40, 40);` in place of just `rect(**40, 40,** 40, 40);`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hey, what happened? How come the square got moved and cut off? The answer is: the square did not move. The grid was rotated. Here is what really happened. As you can see, on the rotated coordinate system, the square still has its upper left corner at (40, 40)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In addition to moving the grid, you can also rotate it with the `rotate()` function. This function takes one argument, which is the number of **_degrees_** that you want to rotate."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the version of ProcessingJS that we use on Khan Academy, all of the functions that have to do with rotation default to measuring angles in degrees, but they can also be configured to measure angles in radians, the standard unit of angular measure. If you want to use radians instead, you can set `angleMode = \"radians\";` at the top of your program."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's try something simple: rotating a square 45 degrees:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The correct way to rotate the square is to:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to review or learn angular measurements? You can go through our [\"Angle basics and measurement\"](/math/geometry/parallel-and-perpendicular-lines/Angle_basics/v/measuring-angles-in-degrees) here on Khan Academy."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we talk about angles in degrees, we say that a full circle has 360°. When we talk about angles in radians, we say that a full circle has 2π radians. Here's a diagram to remind you of the degrees and radians in a circle:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/8af2c8a1bd1c24046343650acd85d3099ee0dbf9.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/9c89954c87bce74c163acd1a07238e9fc4125464.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/rotation</a>.
# Article is at (x82ab0265) on the bn stage.
# Article is at (x82ab0265) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d5300f83009aa9c29bda1471f39ddf4bcbec2ae3.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling</a>.
# Article is at (xd87caae5) on the bn stage.
# Article is at (xd87caae5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "First, you can see that the square appears to have moved. It hasn’t, of course. Its upper left corner is still at (20, 20) on the scaled-up grid, but that point is now twice as far away from the origin as it was in the original coordinate system."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling</a>.
# Article is at (xd87caae5) on the bn stage.
# Article is at (xd87caae5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you wanted the large square to start at the same corner as the small square, you could translate first, and then scale:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling</a>.
# Article is at (xd87caae5) on the bn stage.
# Article is at (xd87caae5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `scale()` command optionally accepts two parameters instead of just one, so you can scale the x and y dimensions separately. Try using `scale(3.0, 0.5)` in the above program to make the x dimension three times its normal size and the y dimension only half its normal size."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling</a>.
# Article is at (xd87caae5) on the bn stage.
# Article is at (xd87caae5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The final coordinate system transformation is scaling, which changes the size of the grid. Take a look at this program, which draws a square, then scales the grid to twice its normal size, and draws it again."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/scaling</a>.
# Article is at (xd87caae5) on the bn stage.
# Article is at (xd87caae5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You might also notice from both of those programs that the lines are thicker on the large squares. That’s no optical illusion—the lines really are twice as thick, because the coordinate system has been scaled to double its size. You could explicitly change the `strokeWeight()` to account for that, or avoid using `scale()` all together."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### What's the advantage?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As an example, here is a simple rectangle drawn with the code `rect(20, 20, 40, 40)`. The coordinate system (a fancier word to describe that \"graph paper\") is shown in gray, and to keep our example images smaller, the coordinate system shown is 200 pixels by 200 pixels (instead of the default 400x400 size)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But there is a more interesting way to do it: **move the graph paper instead**. If you move the graph paper 60 units right and 80 units down, you will get exactly the same visual result. Moving the coordinate system is called **_translation_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here is a program that draws a row of houses. It uses a loop that calls function named `drawHouse()`, which takes the `x` and `y` location of the house’s upper-left corner as its parameters. Notice that the `drawHouse` function has to do a lot of parameter manipulation to get the house drawn at the given coordinates:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here is a program that draws the original rectangle, then draws it in red at the new location by changing its coordinates, then draws it in blue at the new location by moving the grid (`translate()`ing). The fill colors are translucent, so that you can see that the red and blue overlap to form a purple square that is at virtually the same place. Only the method used to move them has changed. Fiddle with the numbers below to see for yourself:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you want to move the rectangle 60 units right and 80 units down, you can just change the coordinates by adding to the `x` and `y` starting point: `rect(20 + 60, 20 + 80, 40, 40)` and the rectangle will appear in a different place. (We put the arrow in there for dramatic effect.)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It doesn't mean that you should always favor `translate()` instead of calculating new coordinates. Like much of what we teach, it is another tool in your toolbox, and it will be up to you to figure out when it makes sense to use this new `translate()` tool."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s look at the translation code in more detail. `pushMatrix()` is a built-in function that saves the current position of the coordinate system. The `translate(60, 80)` moves the coordinate system 60 units right and 80 units down. The `rect(20, 20, 40, 40)` draws the rectangle at the same place it was originally. Remember, the things you draw don’t move—the grid moves instead. Finally, `popMatrix()` restores the coordinate system to the way it was before you did the translate."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Moving the graph paper"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Square at new location on grid"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Square on canvas"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The important thing to notice in the preceding diagram is that, as far as the rectangle is concerned, it hasn’t moved at all. Its upper left corner is still at (20,20). When you use transformations, the things you draw never change position; the coordinate system does."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What if we used the `translate()` function instead of calculating new coordinates? In this case, the code draws the house in the same place every time, with its upper left corner at (0, 0), and lets translation do all the work instead."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you create a program here using ProcessingJS, the output is drawn to a canvas that acts like a piece of graph paper. To draw a shape, you specify its coordinates onto that graph."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Why use `pushMatrix()` and `popMatrix()`? You could have done a `translate(-60, -80)` to move the grid back to its original position. However, when you start doing more sophisticated operations with the coordinate system, it’s easier to use `pushMatrix()` and `popMatrix()` to save and restore the status rather than having to undo all your operations. Later on in this section, you will find out why those functions seem to have such strange names."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You may be thinking that picking up the coordinate system and moving it is a lot more trouble than just adding to coordinates. For a simple example like the rectangle, you are correct. But let’s take an example of where `translate()` can make life easier."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/80b51a4337678316d0f463bb4bf39eb4717fa3f6.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/dd6c5599b4650f3764cc3dd7ac9a72ec9c66c387.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-transformations/a/translation</a>.
# Article is at (xa08d1f64) on the bn stage.
# Article is at (xa08d1f64) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/e2b47324d256b64a346fc7f22462f3dc9f2ae408.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what that could look like, as an object:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Let's start by making our character, the hopping beaver. We'll use object-oriented design, discussed in [this tutorial](https://www.khanacademy.org/computing/computer-programming/programming/object-oriented/p/object-types\n"
"), to describe our Beaver character."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, here's our program, with a keyboard-controlled hopping and falling beaver. Play around with it a bit!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That program doesn't do a very good job at checking the different behaviors, though - it's not animated, so we can only see her in one state of being. Let's add a `draw` function, so that we can tell the beaver to do different things depending on user interaction. For this game, we want the beaver to hop whenever the user is pressing the space key. That can be implemented pretty simply:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's pretty effective code, but if we ran it, we'd have to continuously press our space bar to keep the beaver from hopping off the face of the canvas forever, never to return. We should constrain the y values to some reasonable value, to keep the beaver in screen. That's common in games, to keep characters inside the \"game world.\" We could do that by using [`constrain`](/cs/constrainvalue-min-max/5870136103796736) in the draw function, passing it an appropriate min and max:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When creating a game character, we should think about what properties and behaviors it should have. For example, our beaver should keep track of her **x** and **y** position and how many **sticks** she has collected. She also needs two behaviors: **hop**, which makes her jump a little bit up, and **fall**, which makes her fall a bit down."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
" this.y = constrain(this.y, 0, height-50);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# Article is at (xaf3db80f) on the bn stage.
# Article is at (xaf3db80f) on the pl stage.
# Article is at (xaf3db80f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"    background(255, 255, 255);\n"
"    if (keyIsPressed && keyCode === 0) {\n"
"        beaver.hop();\n"
"    } else {\n"
"        beaver.fall();\n"
"    }\n"
"    beaver.draw();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/beaver-character</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's start by making our character, the hopping beaver. We'll use object-oriented design, discussed in [this tutorial](/cs/creature-hoppy-beaver/6495673899810816), to describe our Beaver character."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Each stick has an **x** and **y** position. We probably want the x positions distributed by some amount (possibly constant or random within a range), and we want the y positions randomized within a range, so that the user has to control the beaver's hop and fall.\n"
"*   The sticks should have the same apparent movement as the grass, but they **should not** snake around. Once a stick is off screen, it's gone forever.\n"
"*   There should be some set amount of sticks per level - at some point, there should stop being sticks."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here it is, with the sticks drawn with that code. Try to hop for them! What happens? Nothing! We'll fix that soon...  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's think a bit about our sticks, as we need to decide how to program them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now the grass will be moving, but it'll eventually disappear, as the x values become more and more negative. Remember, we want to \"snake\" the tiles - we want to wrap them to the right side of the canvas once they drop off the left side. To do that, we'll check if we're sufficiently off screen (remember that our images are drawn from the upper left corner), and set the x value to the canvas width if so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we can draw the sticks - similar to how we drew the grass, just without the wrapping around:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, to create the side-scrolling appearance, let's add grass, using the grass image from the [image](/cs/imageimage-x-y/937672662) library. One way we could create this moving environment would be to pretend our canvas was 3000 pixels wide, and that's how wide our level was, and draw as many grass blocks to fit those 3000 pixels, moving them over each time. However, that's not very efficient, and in programming games, we tend to care a lot about efficiency. Instead, we are going to \"tile\" and \"snake\" the grass images. We'll just draw as many as we need to go across the 400 pixel screen, and then when one falls off the left side of the right screen, we'll immediately stick it back on the right side of the screen, and just continue doing that forever."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Okay, we have a beaver hopping through a side-scrolling environment. But there's nothing for the beaver to do there! We need to add the sticks for the beaver to hop up and collect."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Putting it all together, we now have a beaver that looks like it's moving while it's hopping. Magic!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That looks good for a static scene, but we need this to move! So we can just subtract one from each grass position each time, moving them to the left 1 pixel."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then, before our game starts running - like after we initialize our beaver - let's create an array of 40 sticks, with constant offset and random y:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then, inside our draw loop, we'll draw each of them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are many ways that we could program our sticks, but they seem sufficiently complex, so let's model them with an object, like we modeled our beaver character:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This game is a classic 2D \"side-scroller\": that means that we are looking at it side-on, and the character is just moving forwards or backwards through it. We always want our character in the center of the screen however, so actually, we simulate apparent motion of the character by moving the *background* past the character. It's a trick, but it works!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To do that, we'll start by initializing an array of our initial positions for the grass blocks:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To start off with, let's just draw the parts that won't show any motion, the blue sky and brown ground:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"    background(227, 254, 255);\n"
"    fill(130, 79, 43);\n"
"    rect(0, height*0.90, width, height*0.10);\n"
"    // ...\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < grassXs.length; i++) {\n"
"   image(getImage(\"cute/GrassBlock\"), grassXs[i], height*0.85, 20, 20);\n"
"    grassXs[i] -= 1;\n"
"    if (grassXs[i] <= -20) {\n"
"        grassXs[i] = width;\n"
"    }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < grassXs.length; i++) {\n"
"   image(getImage(\"cute/GrassBlock\"), grassXs[i], height*0.85, 20, 20);\n"
"    grassXs[i] -= 1;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < grassXs.length; i++) {\n"
"   image(getImage(\"cute/GrassBlock\"), grassXs[i], height*0.85, 20, 20);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < sticks.length; i++) {\n"
"    sticks[i].draw();\n"
"    sticks[i].x -= 1;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Stick = function(x, y) {\n"
"    this.x = x;\n"
"    this.y = y;\n"
"};\n"
"\n"
"Stick.prototype.draw = function() {\n"
"    fill(89, 71, 0);\n"
"    rect(this.x, this.y, 5, 40);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var grassXs = [];\n"
"for (var i = 0; i < 25; i++) {\n"
"    grassXs.push(i*20);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# Article is at (x7715d6eb) on the bn stage.
# Article is at (x7715d6eb) on the pl stage.
# Article is at (x7715d6eb) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var sticks = [];\n"
"for (var i = 0; i < 40; i++) {  \n"
"    sticks.push(new Stick(i * 40 + 300, random(20, 260)));\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/forest-environment</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"    background(227, 254, 255);\n"
"    fill(130, 79, 43);\n"
"    rect(0, height*0.90, width, height*0.10);\n"
"    // ...\n"
"}\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver</a>.
# Article is at (x49beb8f2) on the bn stage.
# Article is at (x49beb8f2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **The playable character**: We only have one playable character, and that's the beaver. That character has some different behaviors, like hopping and falling, which we'll need to implement.\n"
"*   **Non-playable characters**: Many games have \"NPCs\" which are programmatically controlled, and present an obstacle to the character. The only obstacle in this game is the environment, however, there are no NPCs. That simplifies things!\n"
"*   **Environment**: This is a side-scroller type game, where we see a 2-d world that is scrolling by us, with a clear blue sky, ground, and grass. The sky is filled with sticks that can be collected.\n"
"*   **Overall mission**: The beaver must hop to grab sticks, and she can't hop too high above or below it, or she won't pick it up. The goal is to get to the end of the level with enough sticks to create a nest."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver</a>.
# Article is at (x49beb8f2) on the bn stage.
# Article is at (x49beb8f2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "First, let's think about the different components of the game - what we might find in many games:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver</a>.
# Article is at (x49beb8f2) on the bn stage.
# Article is at (x49beb8f2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's walk through how we might make this game, step by step."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver</a>.
# Article is at (x49beb8f2) on the bn stage.
# Article is at (x49beb8f2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We're going to create a game called Hoppy Beaver. It's a lot like a game you may have heard of, Flappy Bird, but it's got a few differences too. In this game, the user can control a beaver, making it hop up, so that it can grab sticks to make its den. Here's what it looks like to play:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver</a>.
# Article is at (x49beb8f2) on the bn stage.
# Article is at (x49beb8f2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Whenever you design a game, you should think through components like that. In fact, game design documents are often many pages long - we've written a very concise version here, just as an example. Now let's implement each component of the game, in roughly that order."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/intro-to-hoppy-beaver</a>.
# Article is at (x49beb8f2) on the bn stage.
# Article is at (x49beb8f2) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/3b60c165678e4ec51450747223e5c2a1fb6aa061.gif"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Count how many sticks the beaver grabs.\n"
"*   Count how many sticks the beaver misses.\n"
"*   Award more points for higher accuracy - like based on distance of beaver from stick center."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Declare them a winner if they grabbed some percentage of the sticks (up to 100%).\n"
"*   Immediately fail them if they miss some percentage of the sticks.\n"
"*   Fail them if they miss some number of sticks in a row."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For simplicity's sake, let's implement the first options: we'll score based on the number of stick grabs, and we'll declare them a winner if they get 90% of the sticks."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For the win state, we should come up with a condition that we can check each time, and then do something festive if it's true. Here's what we could do if we wanted to make sure you got 95% of the sticks:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Give it a go! Can you win?  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Okay, but what's a game if there's no winning or losing? It's LIFE! Haha, but no, really. Let's add a score and a win state to the game. We have many options for how we could score:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Sometimes games are purely about scores and raising your score, but other times, they have distinct win or lose states. What could we do in this game?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We want to always display the score, so we can just stick a text command in the draw function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if (beaver.sticks/sticks.length >= 0.95) {\n"
"    text(\"YOU WIN!!!!\", width/2, height/2);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/scoring-and-winning</a>.
# Article is at (x833dc4a3) on the bn stage.
# Article is at (x833dc4a3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(\"Score: \" + beaver.sticks, 20, 20);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   The stick's center x position is between the two sides of the beaver.\n"
"*   The stick's center y position is between the top and bottom of the beaver."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "At the same time, we want to remember how many sticks the beaver has \"grabbed\", so we'll increment the internal sticks property:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Finally, we need to call this method at an opportune time- how about right after we've drawn each stick?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here it is all together - check it out, when you hop over the sticks, they disappear!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In that function, we first need to write a condition that will be true if the beaver and stick collided, and false otherwise. We could make it complex or strict, based on the location of the beaver's hand, for example, but let's stay basic for now. They should \"collide\" if:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, what should we actually do, once we've detected a collision between the beaver and the stick? We effectively want to remove the stick from the screen and prevent further collision. One simple way to do that is to just push the stick way off screen, by changing its y coordinate:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The image for the beaver is also drawn by default from the upper left corner, but we'll keep that mode, as it works well for our calculation. To check the first condition, on the x position, we can do a check like this, where we check that the stick x is greater than or equal to the beaver's left side (x) and less than or equal to the beaver's right side (x + 40)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The stick is drawn using the `rect` command, so typically, that would mean that its `x` and `y` properties represented its upper left corner coordinates. However, to simplify our collision calculation, we can switch to a mode where the `rect` is drawn from the center:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To check the y position, we can do a similar check, where we see if the stick y is greater than or equal to the beaver's top (y) and less than or equal to the beaver's bottom (y + 40):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have the beaver hopping, we have the sticks displaying - we just need to bring the two together. We want to know whenever our beaver manages to get right over a stick, so that we can count that as a successful stick grab. That means we need to do a basic collision check of the two objects. There's a lot of places we could program this functionality, since it deals with two objects - as a global function, as a method on the Stick object, as a method on the Beaver object. Let's stick it on the beaver for now:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    for (var i = 0; i < sticks.length; i++) {\n"
"        sticks[i].draw();\n"
"        beaver.checkForStickGrab(sticks[i]);\n"
"        sticks[i].x -= 1;\n"
"    }\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Beaver.prototype.checkForStickGrab = function(stick) {\n"
"  // if beaver is over stick, do something\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"rectMode(CENTER);\n"
"rect(this.x, this.y, 5, 40);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"stick.x >= this.x && stick.x <= (this.x + 40)\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"stick.y = -400;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"stick.y >= this.y && stick.y <= (this.y + 40)\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions">http://translate.khanacademy.org/computing/computer-programming/programming-games-visualizations/side-scroller/a/stick-collisions</a>.
# Article is at (x610fd387) on the bn stage.
# Article is at (x610fd387) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"this.sticks++;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Angles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ radians = 2 * PI * (degrees / 360) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**What is PI?**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But sometimes we may find it better to specify our angles in **_radians_**. A radian is a unit of measurement for angles defined by the ratio of the length of the arc of a circle to the radius of that circle. One radian is the angle at which that ratio equals one (see the first diagram). 180 degrees = PI radians, 360 degrees = 2*PI radians, 90 degrees = PI/2 radians, etc.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you are not familiar with how rotation is implemented in ProcessingJS, you could try this tutorial: [Processing - Transform 2D](http://processing.org/tutorials/transform2d/), but note there are some differences between Processing and ProcessingJS."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In addition, ProcessingJS also provides functions to make it easy to switch between the two units. The `radians()` function will automatically convert values from degrees to radians, and the constants PI and TWO_PI provide convenient access to these commonly used numbers (equivalent to 180 and 360 degrees, respectively). The following code, for example, will rotate shapes by 60 degrees."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the vectors and forces sections, we carefully worked out an object-oriented structure to make something move on the screen, using the concept of a vector to represent location, velocity, and acceleration driven by forces in the environment. We could move straight from here into topics such as particle systems, steering forces, group behaviors, etc. If we did that, however, we’d skip an important area of mathematics that we’re going to need: _**trigonometry**_, or the mathematics of triangles, specifically right triangles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It’s fairly intuitive for us to think of angles in terms of degrees. For example, the square in the diagram below is rotated 45 degrees around its center.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK. Before we can do any of this stuff, we need to make sure we understand what it means to be an angle in ProcessingJS. If you have experience with ProcessingJS, you’ve undoubtedly encountered this issue while using the `rotate()` function to rotate and spin objects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So this section is a bit of a mishmash. We’ll start with the basics of angles in ProcessingJS and cover many trigonometric topics, tying it all into forces at the end. And by taking this break now, we’ll also pave the way for more advanced examples that require trig later in this course."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Thankfully, ProcessingJS makes it easy to decide which unit we want to use, radians or degrees, when using the functions that deal with angles, like `sin()` and `atan()`. In the Khan Academy environment, the default is degrees, but it can be changed to radians like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first order of business is to cover **_radians_** and **_degrees_**. You’re probably most familiar with the concept of an angle in degrees. A full rotation goes from 0 to 360 degrees. 90 degrees (a right angle) is 1/4th of 360, shown below as two perpendicular lines.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The formula to convert from degrees to radians is:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The mathematical constant pi (or π) is a real number defined as the ratio of a circle’s circumference (the distance around the perimeter) to its diameter (a straight line that passes through the circle’s center and has endpoints on its perimeter). It is equal to approximately 3.14159 and can be accessed in ProcessingJS with the built-in variable `PI`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This \"Natural Simulations\" course is a derivative of [\"The Nature of Code\"](http://natureofcode.com/book/) by Daniel Shiffman, used under a [Creative Commons Attribution-NonCommercial 3.0 Unported License](http://creativecommons.org/licenses/by-nc/3.0/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Trigonometry is going to give us a lot of tools. We’ll get to think about angles and angular velocity and acceleration. Trig will teach us about the sine and cosine functions, which when used properly can yield an nice ease-in, ease-out wave pattern. It’s going to allow us to calculate more complex forces in an environment that involves angles, such as a pendulum swinging or a box sliding down an incline."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"angleMode = \"radians\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"angleMode = \"radians\";\n"
"var angle = radians(60);\n"
"rotate(angle);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/9273b3669660ba03ddbad35ed40f3c45e74f0dee.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/96e50425d1823bb3a19406678212d6081a7b5cb9.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# Article is at (x026c6d2e) on the bn stage.
# Article is at (x026c6d2e) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/b1c514fbc7ace3230846b7e3f89ed7642c43c929.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angles-and-units</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "# Angles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"**angle = angle + angular velocity**  \n"
"**angular velocity = angular velocity + angular acceleration**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"**location = location + velocity**  \n"
"**velocity = velocity + acceleration**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After we add in our principles of motion, we have the program below. The baton starts onscreen with no rotation and then spins faster and faster as the angle of rotation accelerates:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And then in `update()`, we update both the position and angle according to the same algorithm!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For now, a quick and dirty solution will do. We can produce reasonable results by simply calculating angular acceleration as a function of the object’s acceleration vector. Here’s one such example:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what a program looks like with the above logic, with a force calculated based on a central attractor:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what the program looks like, with those changes incorporated:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In fact, the above is actually simpler than what we started with because an angle is a scalar quantity—a single number, not a vector!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, if we were to actually go ahead and run the above code, we wouldn’t see anything new. This is because the angular acceleration (this.aAcceleration = 0;) is initialized to zero. For the object to rotate, we need to give it an acceleration! Certainly, we could hard-code in a different number:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Of course, for any of this to matter, we also would need to rotate the object when displaying it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Remember all this stuff?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's a good start, but we can produce a more interesting result by dynamically assigning an angular acceleration according to forces in the environment - since objects don't usually spin of their own accord! Now, we could head pretty far down this road, trying to model the physics of angular acceleration using the concepts of [torque](http://en.wikipedia.org/wiki/Torque) and [moment of inertia](http://en.wikipedia.org/wiki/Moment_of_inertia). That level of simulation is beyond the scope of this course - but we'll still get a bit more complex."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The stuff we dedicated almost all of the last two sections to? Well, we can apply exactly the same logic to a rotating object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This idea can be incorporated into our `Mover` object. For example, we can add the properties related to angular motion to our `Mover` constructor."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Using the answer from the previous challenge, let’s say we wanted to rotate a baton in ProcessingJS by some angle. We would have code something like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Yes, this is completely arbitrary. But it does do something. If the object is accelerating to the right, its angular rotation accelerates in a clockwise direction; acceleration to the left results in a counterclockwise rotation. Of course, it’s important to think about scale in this case. The x component of the acceleration vector might be a quantity that’s too large, causing the object to spin in a way that looks ridiculous or unrealistic. So dividing the x component by some value, or perhaps constraining the angular velocity to a reasonable range, could really help. Here’s the entire `update()` method with these tweaks added."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.display = function () {\n"
"    stroke(0, 0, 0);\n"
"    fill(175, 175, 175, 200);\n"
"    rectMode(CENTER);\n"
"\n"
"    // pushMatrix and popMatrix are needed so that the shape rotation\n"
"    //  doesn't affect the rest of the world\n"
"    pushMatrix();\n"
"    // Set the origin at the shape's location\n"
"    translate(this.location.x, this.location.y);\n"
"    // Rotate by the angle\n"
"    rotate(this.angle);\n"
"    rect(0, 0, this.mass*16, this.mass*16);\n"
"    popMatrix();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.update = function () {\n"
"\n"
"    this.velocity.add(this.acceleration);\n"
"    this.position.add(this.velocity);\n"
"\n"
"    this.aVelocity += this.aAcceleration;\n"
"    this.angle += this.aVelocity;\n"
"\n"
"    this.acceleration.mult(0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.update = function () {\n"
"    this.velocity.add(this.acceleration);\n"
"    this.position.add(this.velocity);\n"
"\n"
"    // Calculate angular acceleration based on horizontal acceleration,\n"
"    //  and divide so it's not as strong\n"
"    this.aAcceleration = this.acceleration.x / 10.0;\n"
"    this.aVelocity += this.aAcceleration;\n"
"\n"
"    // Use constrain to ensure velocity doesn't spin out of control\n"
"    this.aVelocity = constrain(this.aVelocity, -0.1, 0.1);\n"
"    this.angle += this.aVelocity;\n"
"\n"
"    this.acceleration.mult(0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"this.aAcceleration = 0.01;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"this.aAcceleration = this.acceleration.x;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"translate(width/2, height/2);\n"
"rotate(angle);\n"
"line(-50, 0, 50, 0);\n"
"ellipse(50, 0, 8, 8);\n"
"ellipse(-50, 0, 8, 8);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# Article is at (xbbba5b5f) on the bn stage.
# Article is at (xbbba5b5f) on the pl stage.
# Article is at (xbbba5b5f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Mover = function(m, x, y) {\n"
"    this.position = new PVector(x, y);\n"
"    this.mass = m;\n"
"\n"
"    this.angle = 0;\n"
"    this.aVelocity = 0;\n"
"    this.aAcceleration = 0;\n"
"\n"
"    this.velocity = new PVector(random(-1, 1), random(-1, 1));\n"
"    this.acceleration = new PVector(0, 0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"var Mover = function(m, x, y) {\n"
"    this.position = new PVector(x, y);\n"
"    this.mass = m;\n"
"\n"
"    this.angle = 0;\n"
"    this.aVelocity = 0;\n"
"    this.aAcceleration = 0;\n"
"\n"
"    this.velocity = new PVector(random(-1, 1), random(-1, 1));\n"
"    this.acceleration = new PVector(0, 0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ tangent(angle)=\\frac{velocity_y}{velocity_x} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"**V1 ⇒ angle = atan(-4/3) = atan(-1.333...) = -0.9272952 radians = -53 degrees  \n"
"V2 ⇒ angle = atan(4/-3) = atan(-1.333...) = -0.9272952 radians = -53 degrees**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what the program looks like, all together. Move your mouse over it and see how it rotates!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If the tangent of some value a equals some value b, then the inverse tangent of b equals a. For example:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s go all the way back to one of our first examples, the one where a `Mover` object accelerates towards the mouse."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have the formula, let’s see where it should go in our mover’s display() function. Notice that in ProcessingJS, the function for arctangent is called `atan()`. JavaScript also provides `Math.atan()` natively (as well as all the basic trig functions), but we'll stick with the ProcessingJS provided functions."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now the above code is pretty darn close, and almost works. We still have a big problem, though. Let’s consider the two velocity vectors depicted below."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK. We know that the definition of tangent is:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "See how that is the inverse? The above now allows us to solve for the angle:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The problem with the above is that we know velocity, but we don’t know the angle. We have to solve for the angle. This is where a special function known as inverse tangent comes in, sometimes referred to as arctangent or tan-1\\. (There is also an inverse sine and an inverse cosine.)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Though superficially similar, the two vectors point in quite different directions—opposite directions, in fact! However, if we were to apply our formula to solve for the angle to each vector…"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To simplify this even further, the `PVector` object itself provides a function called `heading()`, which takes care of calling `atan2()` for you so you can get the 2D direction angle, in radians, for any `PVector`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You might notice that almost all of the shapes we’ve been drawing so far are circles. This is convenient for a number of reasons, one of which is that we don’t have to consider the question of rotation. Rotate a circle and, well, it looks exactly the same. However, there comes a time in all motion programmers’ lives when they want to draw something on the screen that points in the direction of movement. Perhaps you are drawing an ant, or a car, or a spaceship. And when we say \"point in the direction of movement,\" what we are really saying is “rotate according to the velocity vector.” Velocity is a vector, with an x and a y component, but to rotate in ProcessingJS we need an angle. Let’s draw our trigonometry diagram one more time, with an object’s velocity vector:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.display = function () {\n"
"  var angle = atan(this.velocity.y / this.velocity.x);\n"
"\n"
"  stroke(0, 0, 0);\n"
"  fill(127, 127, 127);\n"
"  pushMatrix();\n"
"  rectMode(CENTER);\n"
"  translate(this.position.x, this.position.y);\n"
"  rotate(angle);\n"
"  rect(0, 0, 30, 10);\n"
"  popMatrix();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.display = function () {\n"
"  var angle = atan2(this.velocity.y, this.velocity.x);\n"
"\n"
"  stroke(0, 0, 0);\n"
"  fill(127, 127, 127);\n"
"  pushMatrix();\n"
"  rectMode(CENTER);\n"
"  translate(this.position.x, this.position.y);\n"
"  rotate(angle);\n"
"  rect(0, 0, 30, 10);\n"
"  popMatrix();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/723769fbc5af223c48716b39d34fb41a220dc1d1.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/bb9ae5e4f7e2df524a01ee227f32b62323a9a55f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| if | tangent(a) = b |\n"
"| then | a = arctangent(b) |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| if | tangent(angle) = velocity_y / velocity_x |\n"
"| then | angle = arctangent(velocity_y / velocity_x) |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement</a>.
# Article is at (x70ac0811) on the bn stage.
# Article is at (x70ac0811) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "…we get the same angle for each vector. This can’t be right for both; the vectors point in opposite directions! The thing is, this is a pretty common problem in computer graphics. Rather than simply using `atan()` along with a bunch of conditional statements to account for positive/negative scenarios, ProcessingJS (along with [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2) and pretty much all programming environments) has a nice function called `atan2()` that does it for you."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Cartesian coordinate—the _x,y_ components of a vector\n"
"*   Polar coordinate—the magnitude (length) and direction (angle) of a vector"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
">sine(theta)   = y/r   →   y = r * sine(theta)\n"
">\n"
">\n"
">cosine(theta) = x/r   →   x = r * cosine(theta)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Another useful coordinate system known as **_polar coordinates_** describes a point in space as an angle of rotation around the origin and a radius from the origin. Thinking about this in terms of a vector:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Any time we display a shape in ProcessingJS, we have to specify a pixel location, a set of `x` and `y` coordinates. These coordinates are known as **_Cartesian coordinates_**, named for René Descartes, the French mathematician who developed the ideas behind Cartesian space."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, if `r` is 75 and `theta` is 45 degrees (or PI/4 radians), we can calculate `x` and `y` as below. The functions for sine and cosine in ProcessingJS are `sin()` and `cos()`, respectively. They each take one argument, an angle measured in degrees."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's how we can make a simple rotating shape using polar coordinate conversion:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, the drawing functions in ProcessingJS don’t understand polar coordinates. Whenever we want to display something in ProcessingJS, we have to specify locations as _(x,y)_ Cartesian coordinates. However, sometimes it is a great deal more convenient for us to think in polar coordinates when designing. Happily for us, with trigonometry we can convert back and forth between polar and Cartesian, which allows us to design with whatever coordinate system we have in mind but always draw with Cartesian coordinates.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The Greek letter θ (theta) is often used to denote an angle, and a polar coordinate is conventionally referred to as _(r, θ)_ instead of _(x, y)_. Thus, when dealing with polar coordinates, we'll now use \"theta\" as the preferred variable name for the angle."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This type of conversion can be useful in certain applications. For example, to move a shape along a circular path using Cartesian coordinates is not so easy. With polar coordinates, on the other hand, it’s simple: increment the angle!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var r = 75;\n"
"var theta = 45;\n"
"\n"
"// Convert polar to cartesian\n"
"var x = r * cos(theta);\n"
"var y = r * sin(theta);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# Article is at (xf02483ce) on the bn stage.
# Article is at (xf02483ce) on the pl stage.
# Article is at (xf02483ce) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/1559d8785a298fdd0bac0443388b3812c4327ec3.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "<pre>**sine(theta)   = y/r   →   y = r * sine(theta)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"var r = 75;\n"
"var theta = 45;\n"
"\n"
"// Convert polar to cartesian\n"
"var x = r * cos(theta);\n"
"var y = r * sin(theta);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/polar-coordinates</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "cosine(theta) = x/r   →   x = r * cosine(theta)** </pre>"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **_soh_**: sine = opposite / hypotenuse\n"
"*   **_cah_**: cosine = adjacent / hypotenuse\n"
"*   **_toa_**: tangent = opposite / adjacent"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Because the trigonometric functions allow us to establish a relationship between the components of a vector and its direction + magnitude, they will prove very useful throughout this course. We’ll begin by looking at an example that requires the tangent function."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of a triangle"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of triangle using vectors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I think it may be time. We’ve looked at angles, we’ve spun an object. It’s time for: _soh cah toa_. Yes, _soh cah toa_. This seemingly nonsensical word is actually the foundation for a lot of computer graphics work. A basic understanding of trigonometry is essential if you want to calculate an angle, figure out the distance between points, work with circles, arcs, or lines. And _soh cah toa_ is a mnemonic device (albeit a somewhat absurd one) for what the trigonometric functions sine, cosine, and tangent mean.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "See how we create a right triangle out of a vector? The vector arrow itself is the hypotenuse and the components of the vector (`x` and `y`) are the sides of the triangle. The angle is an additional means for specifying the vector’s direction (or “heading”)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Take a look at the above diagram again. There’s no need to memorize it, but make sure you feel comfortable with it. Draw it again yourself. Now let’s draw it a slightly different way:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/b239b57f146d2d3dbb74edafaf266be18f18e247.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/trigonometry</a>.
# Article is at (x408a37dc) on the bn stage.
# Article is at (x408a37dc) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c8e97356a33c51102a812e9386b24824d71157dc.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ F_d=−\\dfrac{1}{2} \\rho v^2 A C_d \\hat{v} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   $ F_d $ refers to drag force, the vector we ultimately want to compute and pass into our `applyForce()` function.\n"
"*   -1/2 is a constant: -0.5\\. This is fairly irrelevant in terms of our ProcessingJS world, as we will be making up values for other constants anyway. However, the fact that it is negative is important, as it tells us that the force is in the opposite direction of velocity (just as with friction).\n"
"*   $ \\rho $ is the Greek letter _rho_, and refers to the density of the liquid, something we don’t need to worry about. We can simplify the problem and consider this to have a constant value of 1.\n"
"*   $ v $ refers to the speed of the object moving. OK, we’ve got this one! The object’s speed is the magnitude of the velocity vector: `velocity.mag()`. And $ v^2 $ just means $ v $ squared or $ v * v $.\n"
"*   $ A $ refers to the frontal area of the object that is pushing through the liquid (or gas). An aerodynamic Lamborghini, for example, will experience less air resistance than a boxy Volvo. Nevertheless, for a basic simulation, we can consider our object to be spherical and ignore this element.\n"
"*   $ C_d $ is the coefficient of drag, exactly the same as the coefficient of friction (ρ). This is a constant we’ll determine based on whether we want the drag force to be strong or weak.\n"
"*   $ \\hat{v} $ Look familiar? It should. This refers to the velocity unit vector, i.e. `velocity.normalize()`. Just like with friction, drag is a force that points in the opposite direction of velocity."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And with these two functions added to the `Liquid` object type, we’re ready to put it all together into one program:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of fluid resistance around a plane"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Friction also occurs when a body passes through a liquid or gas. This force has many different names, all really meaning the same thing: viscous force, drag force, fluid resistance. While the result is ultimately the same as our previous friction examples (the object slows down), the way in which we calculate a drag force will be slightly different. Let’s look at the formula:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s implement this force in our `Mover` object type with one addition. When we wrote our friction example, the force of friction was always present. Whenever an object was moving, friction would slow it down. Here, let’s introduce an element to the environment—a “liquid” that the `Mover` objects pass through. The `Liquid` object will be a rectangle and will know about its location, width, height, and “coefficient of drag”—i.e., is it easy for objects to move through it (like air) or difficult (like molasses)? In addition, it should include a function to draw itself on the screen (and two more functions, which we’ll see in a moment)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now comes an interesting question: how do we get the `Mover` object to talk to the `Liquid` object? In other words, we want to execute the following:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now let’s break this down and see what we really need for an effective simulation in ProcessingJS, making ourselves a much simpler formula in the process."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we’ve analyzed each of these components and determined what we need for a simple simulation, we can reduce our formula to:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Running the program, you should notice that we are simulating balls falling into water. The objects only slow down when crossing through the gray area at the bottom of the window (representing the liquid). You’ll also notice that the smaller objects slow down a great deal more than the larger objects. Remember Newton’s second law? `A = F / M`. Acceleration equals force divided by mass. A massive object will accelerate less. A smaller object will accelerate more. In this case, the acceleration we’re talking about is the “slowing down” due to drag. The smaller objects will slow down at a greater rate than the larger ones."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Simplified formula: F_drag = ||v^2|| * c_d * v - 1"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `drag()` function is a bit more complicated; however, we’ve written the code for it already. This is simply an implementation of our formula. The drag force is equal to _the coefficient of drag multiplied by the speed of the `Mover` squared in the opposite direction of velocity!_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The above code tells us that we need to add two functions to the `Liquid` object type: (1) a function that determines if a `Mover` object is inside the `Liquid` object, and (2) a function that computes the drag force exerted on the `Mover` object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first is easy; we can simply use a conditional statement to determine if the location vector rests inside the rectangle defined by the liquid."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The main program will now declare and initialize a new `Liquid` object instance. Note the coefficient is low (0.1), otherwise the object would come to a halt fairly quickly (which may someday be the effect you want)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_When a mover passes through a liquid it experiences a drag force._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// Is the Mover in the liquid?\n"
"if (liquid.contains(movers[i])) {\n"
"    // Calculate drag force\n"
"    var dragForce = liquid.calculateDrag(movers[i]);\n"
"    // Apply drag force to Mover\n"
"    movers[i].applyForce(dragForce);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// Part 1 of our formula (magnitude): v^2 * Cd\n"
"var c = 0.1;\n"
"var speed = v.mag();\n"
"var dragMagnitude = c * speed * speed;\n"
"\n"
"// Part 2 of our formula (direction): v unit vector * -1 \n"
"var drag = velocity.get();\n"
"drag.normalize();\n"
"drag.mult(-1);\n"
"\n"
"// Magnitude and direction together!\n"
"drag.mult(dragMagnitude);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Liquid.prototype.calculateDrag = function(m) {\n"
"  // Magnitude is coefficient * speed squared\n"
"  var speed = m.velocity.mag();\n"
"  var dragMagnitude = this.c * speed * speed;\n"
"\n"
"  // Direction is inverse of velocity\n"
"  var dragForce = m.velocity.get();\n"
"  dragForce.mult(-1);\n"
"\n"
"  // Scale according to magnitude\n"
"  // dragForce.setMag(dragMagnitude);\n"
"  dragForce.normalize();\n"
"  dragForce.mult(dragMagnitude);\n"
"  return dragForce;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Liquid.prototype.contains = function(m) {\n"
"    var p = m.position;\n"
"    return p.x > this.x && p.x < this.x + this.w &&\n"
"         p.y > this.y && p.y < this.y + this.h;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Liquid = function(x, y, w, h, c) {\n"
"  this.x = x;\n"
"  this.y = y;\n"
"  this.w = w;\n"
"  this.h = h;\n"
"  this.c = c;\n"
"};\n"
"\n"
"Liquid.prototype.display = function() {\n"
"  noStroke();\n"
"  fill(50);\n"
"  rect(this.x, this.y, this.w, this.h);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var liquid = new Liquid(0, height/2, width, height/2, 0.1);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/125ab05457fd1186a80190ae138fe9c6a0d3cbc9.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/ddae315c4ae96e169a448328efe6d2eab8ceba75.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "or:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/air-and-fluid-resistance</a>.
# Article is at (xf8f388d5) on the bn stage.
# Article is at (xf8f388d5) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "…or in object-oriented speak (assuming we are looping through an array of `Mover` objects with index `i`):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   A single `Mover` object.\n"
"*   A single `Attractor` object (a new object type that will have a fixed location)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   `F` refers to the gravitational force, the vector we ultimately want to compute and pass into our `applyForce()` function.\n"
"*   `G` is the _universal gravitational constant_, which in our world equals 6.67428 x 10^-11 meters cubed per kilogram per second squared. This is a pretty important number if your name is Isaac Newton or Albert Einstein. It’s not an important number if you are a ProcessingJS programmer. Again, it’s a constant that we can use to make the forces in our world weaker or stronger. Just making it equal to one and ignoring it isn’t such a terrible choice either.\n"
"*   $ m_1 $ and $ m_2 $ are the masses of objects `1` and `2`. As we saw with Newton’s second law ($ \\vec{F} = M\\vec{A} $), mass is also something we could choose to ignore. After all, shapes drawn on the screen don’t actually have a physical mass. However, if we keep these values, we can create more interesting simulations in which “bigger” objects exert a stronger gravitational force than smaller ones.\n"
"*   $ \\hat{r} $ refers to the unit vector pointing from object `1` to object `2`. As we’ll see in a moment, we can compute this direction vector by subtracting the location of one object from the other.\n"
"*   $ r^2 $ refers to the distance between the two objects squared. Let’s take a moment to think about this a bit more. With everything on the top of the formula—`G`, `m_1`, $ m_2 $—the bigger its value, the stronger the force. Big mass, big force. Big `G`, big force. Now, when we divide by something, we have the opposite. The strength of the force is inversely proportional to the distance squared. The _farther away_ an object is, the _weaker_ the force; the _closer_, the _stronger_."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  Each object has a `PVector` location: `location1` and `location2`.\n"
"2.  Each object has a numeric mass: `mass1` and `mass2`.\n"
"3.  There is a numeric variable `G` for the universal gravitational constant."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A vector is the difference between two points. To make a vector that pointed from the circle to the mouse, we simply subtracted one point from another:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After defining that, we can create an instance of the `Attractor` object type."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And so our `draw()` function can now be written as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And we’re done. Sort of. Almost. There’s one small kink we need to work out. Let’s look at the above code again. See that symbol for divide, the slash? Whenever we have one of these, we need to ask ourselves the question: What would happen if the distance happened to be a really, really small number or (even worse!) zero??! Well, we know we can’t divide a number by 0, and if we were to divide a number by something like 0.0001, that is the equivalent of multiplying that number by 10,000! Yes, this is the real-world formula for the strength of gravity, but we don’t live in the real world. We live in the _ProcessingJS world_. And in the ProcessingJS world, the mover could end up being very, very close to the attractor and the force could become so strong the mover would just fly way off the screen. And so with this formula, it’s good for us to be practical and constrain the range of what distance can actually be. Maybe, no matter where the `Mover` actually is, we should never consider it less than 5 pixels or more than 25 pixels away from the attractor."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of gravitational forces between two spheres"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Don’t forget that since we want a unit vector, a vector that tells us about direction only, we’ll need to normalize the vector after subtracting the locations:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For the same reason that we need to constrain the minimum distance, it’s useful for us to do the same with the maximum. After all, if the mover were to be, say, 500 pixels from the attractor (not unreasonable), we’d be dividing the force by 250,000\\. That force might end up being so weak that it’s almost as if we’re not applying it at all."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Given these assumptions, we want to compute a `PVector force`, the force of gravity. We’ll do it in two parts. First, we’ll compute the direction of the force $ \\hat{r} $ in the formula above. Second, we’ll calculate the strength of the force according to the masses and distance."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hopefully by now the formula makes some sense to us. We’ve looked at a diagram and dissected the individual components of the formula. Now it’s time to figure out how we translate the math into ProcessingJS code. Let’s make the following assumptions."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In other words, where we once had:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In our case, the direction of the attraction force that object 1 exerts on object 2 is equal to:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It’s good to look at a range of options for making objects talk to each other, and you could probably make arguments for each of the above possibilities. Let's start by discarding the first one, since an object-oriented approach is really a much better choice over an arbitrary function not tied to either the `Mover` or `Attractor` objects. Whether you pick option 2 or option 3 is the difference between saying “The attractor attracts the mover” or “The mover is attracted to the attractor.” Number 4 seems the most appropriate, at least in terms of where we are in this course. After all, we spent a lot of time working out the `applyForce()` method, and I think our examples will be clearer if we continue with the same methodology."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's put it all together now in one program. The `Mover` object type hasn't changed at all, but now our program includes an `Attractor` object, and code that ties them together. We've also added code to the program to control the attractor with a mouse, so that it's easier to observe the effects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s examine this formula a bit more closely."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that I also renamed the `PVector` “dir” as “force.” After all, when we’re finished with the calculations, the `PVector` we started with ends up being the actual force vector we wanted all along."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we’ve worked out the math and the code for calculating an attractive force (emulating gravity), we need to turn our attention to applying this technique in the context of an actual ProcessingJS program. Earlier in this section, we created a simple `Mover` object—an object with `PVector`’s location, velocity, and acceleration as well as an `applyForce()`. Let’s take this exact class and put it in a program with:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, it’s really up to you to decide what behaviors you want. But in the case of, “I want reasonable-looking attraction that is never absurdly weak or strong,” then constraining the distance is a good technique."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK, we’ve got the direction of the force. Now we just need to compute the magnitude and scale the vector accordingly."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Probably the most famous force of all is gravity. We humans on earth think of gravity as an apple hitting Isaac Newton on the head. Gravity means that stuff falls down. But this is only our experience of gravity. In truth, just as the earth pulls the apple towards it due to a gravitational force, the apple pulls the earth as well. The thing is, the earth is just so massive that it overwhelms all the gravity interactions of every other object on the planet. Every object with mass exerts a gravitational force on every other object. And there is a formula for calculating the strengths of these forces, as depicted in the diagram below:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Remember when we figured out how to have an object accelerate towards the mouse? We're going to use the same logic here."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `Mover` object will experience a gravitational pull towards the `Attractor` object, as illustrated in the diagram."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The only problem is that we don’t know the distance. `G`, `mass1`, and mass2 were all givens, but we’ll need to actually compute distance before the above code will work. Didn’t we just make a vector that points all the way from one location to another? Wouldn’t the length of that vector be the distance between two objects?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are a number of ways we could do this, architecturally. Here are just a few possibilities."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is a good structure: a main program with a `Mover` and an `Attractor` object. The last piece of the puzzle is how to get one object to attract the other. How do we get these two objects to talk to each other?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can start by making the new `Attractor` object very simple—giving it a location and a mass, along with a method to display itself (tying mass to size)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have two objects, and:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We will now have:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Well, if we add just one line of code and grab the magnitude of that vector before normalizing it, then we’ll have the distance."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We’re almost there. Since we decided to put the `calculateAttraction()` method inside of the `Attractor` object type, we’ll need to actually write that function. The function needs to receive a `Mover` object and return a PVector. And what goes inside that function? All of that nice math we worked out for gravitational attraction!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ cs-program 1]]And we could, of course, expand this example using an array to include many Mover objects, just as we did with friction and drag. The main change that we've made to the program is to adjust our `Mover` object to accept mass, x, and y (as we've done in the past), initialize an array of randomly placed `Mover`s, and loop over that array to calculate the attraction force on each of them, each time:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// The vector that points from one object to another\n"
"var force = PVector.sub(location1, location2);\n"
"\n"
"// The length (magnitude) of that vector is the distance between the two objects.\n"
"var distance = force.mag();\n"
"\n"
"// Use the formula for gravity to compute the strength of the force.\n"
"var strength = (G * mass1 * mass2) / (distance * distance);\n"
"\n"
"// Normalize and scale the force vector to the appropriate magnitude.\n"
"force.normalize();\n"
"force.mult(strength);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Attractor.prototype.calculateAttraction = function(mover) {\n"
"\n"
"    // What's the force's direction?\n"
"    var force = PVector.sub(this.position, mover.position);    \n"
"    var distance = force.mag();\n"
"    force.normalize();\n"
"\n"
"    // What's the force's magnitude?\n"
"    var strength = (this.G * this.mass * mover.mass) / (distance * distance);\n"
"    force.mult(strength);\n"
"\n"
"    // Return the force so it can be applied!\n"
"    return force;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"dir.normalize();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"distance = constrain(distance, 5, 25);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"    background(50, 50, 50);\n"
"\n"
"    // Calculate attraction force and apply it\n"
"    var f = a.calculateAttraction(m);\n"
"    mover.applyForce(f);\n"
"\n"
"    attractor.display();\n"
"    mover.update();\n"
"    mover.display();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Attractor = function() {\n"
"    this.position = new PVector(width/2, height/2);\n"
"    this.mass = 20;\n"
"    this.G = 1;\n"
"    this.dragOffset = new PVector(0, 0);\n"
"    this.dragging = false;\n"
"    this.rollover = false;\n"
"};\n"
"\n"
"// Method to display\n"
"Attractor.prototype.display = function() {\n"
"    ellipseMode(CENTER);\n"
"    strokeWeight(4);\n"
"    stroke(0);\n"
"    fill(175, 175, 175, 200);\n"
"    ellipse(this.position.x, this.position.y, this.mass*2, this.mass*2);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var dir = PVector.sub(location1, location2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var dir = PVector.sub(mouse, location);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var f = a.calculateAttraction(m); // Attraction force between two objects\n"
"mover.applyForce(f);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var f = new PVector(0.1, 0); // Made up force\n"
"mover.applyForce(f);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var m = (G * mass1 * mass2) / (distance * distance);\n"
"dir.mult(m);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var mover = new Mover();\n"
"var attractor = new Attractor();\n"
"\n"
"draw = function() {\n"
"    background(50, 50, 50);\n"
"\n"
"    attractor.display();\n"
"    mover.update();\n"
"    mover.display();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var movers = [];\n"
"var attractor = new Attractor();\n"
"\n"
"for (var i = 0; i < 10; i++) {\n"
"    movers[i] = new Mover(random(0.1, 2), random(width), random(height));\n"
"}\n"
"\n"
"draw = function() {\n"
"    background(50, 50, 50);\n"
"\n"
"    attractor.display();\n"
"    for (var i = 0; i < movers.length; i++) {\n"
"        var force = attractor.calculateAttraction(movers[i]);\n"
"        movers[i].applyForce(force);\n"
"\n"
"        movers[i].update();\n"
"        movers[i].display();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/24318d64aad1cbd0d8c2cced79b64699c9ed1a2c.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/98914f8c3eca51cc5ecb66fa8cd5f0ba1c4183a3.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/9c4737c7eeb9e0f4a9a4dfd6b71d8ea478846758.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/cc31efbd4078643b7be094ac836e51b65cd0eadd.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# Article is at (x8fccccf5) on the bn stage.
# Article is at (x8fccccf5) on the pl stage.
# Article is at (x8fccccf5) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Task | Function |\n"
"| --- | --- |\n"
"| 1\\. A function that receives both an `Attractor` and a `Mover`: | `attraction(a, m);` |\n"
"| 2\\. A method in the `Attractor` object that receives a `Mover`: | `a.attract(m);` |\n"
"| 3\\. A method in the `Mover` object that receives an `Attractor`: | `mover.attractedTo(a);` |\n"
"| 4\\. A method in the `Attractor` object that receives a `Mover` and returns a `PVector`, which is the attraction force. That attraction force is then passed into the `Mover`'s `applyForce()` method. | `var f = a.calculateAttraction(m);  \n"
"mover.applyForce(f);` |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/gravitational-attraction</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var dir = PVector.sub(location1, location2);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "    *   How do we compute the force’s direction?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "    *   How do we compute the force’s magnitude?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Friction"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Gravity on Earth"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\displaystyle f(x,\\mu,\\sigma)={\\frac{1}{\\sigma\\sqrt {2\\pi}}}e^{\\left({-{\\dfrac {(x-\\mu)^{2}}{2\\sigma^{2}}}}\\right)} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{Friction} = - µN\\hat{v} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Evaluate the right side, assign to the left side.** This is just like in code! What we’re doing here is evaluating the right side of the equation and assigning it to the left. In the case above, we want to calculate the force of friction—the left side tells us what we want to calculate and the right side tells us how to do it.\n"
"*   **Are we talking about a vector or a scalar?** It’s important for us to realize that in some cases, we’ll be looking at a vector; in others, a scalar. For example, in this case the force of friction is a vector. We can see that by the arrow above the word “friction.” It has a magnitude and direction. The right side of the equation also has a vector, as indicated by the symbol $ \\hat{v} $, which in this case stands for the velocity unit vector.\n"
"*   **When symbols are placed next to each other, we mean for them to be multiplied.** The formula above actually has four elements: `-1`, $ µ $, $ N $, and $ \\hat{v} $. We want to multiply them together and read the formula as: $ \\vec{Friction} = - µN\\hat{v} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   Deconstructing the force’s formula into two parts:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   Translating that formula into ProcessingJS code that calculates a `PVector` to be sent through our `Mover`'s `applyForce()` function."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   Understanding the concept behind a force"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Dealing with formulae**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "According to the formula, the magnitude is $ \\mu * N $. μ, the Greek letter mu (pronounced “mew”), is used here to describe the **_coefficient of friction_**. The coefficient of friction establishes the strength of a friction force for a particular surface. The higher it is, the stronger the friction; the lower, the weaker. A block of ice, for example, will have a much lower coefficient of friction than, say, sandpaper. Since we’re in a pretend ProcessingJS world, we can arbitrarily set the coefficient based on how much friction we want to simulate."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "All of these specifics are important; however, in ProcessingJS, a “good enough” simulation can be achieved without them. We can, for example, make friction work with the assumption that the normal force will always have a magnitude of 1\\. When we get into trigonometry in the next section, we’ll remember to return to this question and make our friction example a bit more sophisticated. Therefore:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An illustration of someone sledding, alongside the formula for friction, Friction =−1*µ*N*v"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Friction is a **_dissipative force_**. A dissipative force is one in which the total energy of a system decreases when an object is in motion. Let’s say you are driving a car. When you press your foot down on the brake pedal, the car’s brakes use friction to slow down the motion of the tires. Kinetic energy (motion) is converted into thermal energy (heat). Whenever two surfaces come into contact, they experience friction. A complete model of friction would include separate cases for static friction (a body at rest against a surface) and kinetic friction (a body in motion against a surface), but for our purposes, we are only going to look at the kinetic case."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here’s the formula for friction, along with an illustration:   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If it’s been a while since you’ve looked at a formula from math or physics, there are three key points that are important to cover before we move on."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we can follow the above steps with two forces, then hopefully if you ever find yourself Googling “atomic nuclei weak nuclear force” at 3 a.m., you will have the skills to take what you find and adapt it for ProcessingJS programs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you watch that program run for a while, you’ll notice that the circles move less and less, and tend to hang around one area. Since friction continuously pushes against the object in the opposite direction of its movement, the object continuously slows down. This can be either a useful technique or a problem, depending on the goals of your visualization."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s begin with friction and follow our steps."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Making up forces will actually get us quite far. The world of ProcessingJS is a pretend world of pixels and you are its master. So whatever you deem appropriate to be a force, well by golly, that’s the force it should be. Nevertheless, there may come a time where you find yourself wondering: “But how does it really all work?”"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice two additional steps here. First, it’s important to make a copy of the velocity vector, as we don’t want to reverse the object’s direction by accident. Second, we normalize the vector. This is because the magnitude of friction is not associated with how fast it is moving, and we want to start with a friction vector of magnitude 1 so that it can easily be scaled."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now for the second part: `N`. `N` refers to the **_normal force_**, the force perpendicular to the object’s motion along a surface. Think of a vehicle driving along a road. The vehicle pushes down against the road with gravity, and Newton’s third law tells us that the road in turn pushes back against the vehicle. That’s the normal force. The greater the gravitational force, the greater the normal force. As we’ll see in the next section, gravity is associated with mass, and so a lightweight sports car would experience less friction than a massive tractor trailer truck. With the diagram above, however, where the object is moving along a surface at an angle, computing the normal force is a bit more complicated because it doesn’t point in the same direction as gravity. We’ll need to know something about angles and trigonometry."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now it’s now up to us to separate this formula into two components that determine the direction of friction as well as the magnitude. Based on the diagram above, we can see that _friction points in the opposite direction of velocity_. In fact, that’s the part of the formula that says $ -1 * \\hat{v} $, or -1 times the velocity unit vector. In ProcessingJS, this would mean taking the velocity vector, normalizing it, and multiplying by -1."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have both the magnitude and direction for friction, we can put it all together…"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, let's try to make our forces a little bit more true to the real world, by improving the gravity of the last example and introducing a friction force."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK, in a moment we’re going to write out the formula for friction. This isn’t the first time we’ve seen a formula in this course; we just finished up our discussion of Newton’s second law, $ \\vec{F} = M \\times \\vec{A} $​ (or force = mass * acceleration). We didn’t spend a lot of time worrying about this formula because it’s a nice and simple one. Nevertheless, it’s a scary world out there. Just take a look at the equation for a “normal” distribution, which we covered (without looking at the formula) in the Introduction."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Open up any high school physics textbook and you will find some diagrams and formulas describing many different forces—gravity, electromagnetism, friction, tension, elasticity, and more. Or, hey, browse the physics lessons on Khan Academy. In this section, we’re going to look at two of those forces—friction and gravity. The point we’re making here is not that friction and gravity are fundamental forces that you always need to have in all your ProcessingJS programs. Rather, we want to evaluate these two forces as case studies for the following process:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What we’re seeing here is that formulas like to use a lot of symbols (quite often letters from the Greek alphabet). Let’s take a look at the formula for friction."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "While the objects now fall at the same rate, because the strength of the wind force is independent of mass, the smaller objects still accelerate to the right more quickly."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You may have noticed something woefully inaccurate about this last example. The smaller the circle, the faster it falls. There is a logic to this; after all, we just stated (according to Newton’s second law) that the smaller the mass, the higher the acceleration. But this is not what happens in the real world. If you were to climb to the top of the Leaning Tower of Pisa and drop two balls of different masses, which one will hit the ground first? According to legend, Galileo performed this exact test in 1589, discovering that they fell with the same acceleration, hitting the ground at the same time. Why is this? As we will see later in this course, the force of gravity is calculated relative to an object’s mass. The bigger the object, the stronger the force. So if the force is scaled according to mass, it is canceled out when acceleration is divided by mass. We can implement this in our sketch rather easily by multiplying our made-up gravity force by mass."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"for (var i = 0; i < movers.length; i++) {\n"
"    var wind = new PVector(0.01, 0);\n"
"    var gravity = new PVector(0, 0.1 * movers[i].mass);\n"
"    movers[i].applyForce(wind);\n"
"    movers[i].applyForce(gravity);\n"
"    movers[i].update();\n"
"    movers[i].display();\n"
"    movers[i].checkEdges();\n"
"}\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var c = 0.01;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var c = 0.01;\n"
"var normal = 1;\n"
"var frictionMag = c * normal;\n"
"var friction = movers[i].velocity.get();\n"
"friction.mult(-1);\n"
"friction.normalize();\n"
"friction.mult(frictionMag);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var friction = velocity.get();\n"
"friction.normalize();\n"
"// Let’s figure out the direction of the friction force \n"
"//  (a unit vector in the opposite direction of velocity).\n"
"friction.mult(-1);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var normal = 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/b151b19504ccee0f7eae8e9ecf8243fc58dbc40f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/modeling-gravity-and-friction</a>.
# Article is at (x7cd77a99) on the bn stage.
# Article is at (x7cd77a99) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "…and add it to our “forces” example, where many objects experience wind, gravity, and now friction:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As a reminder, this is what our current `Mover` looks like. It is identical to the `Mover` object that we created when we first introduced vectors, but with two additions—`mass` and a new `applyForce()` method:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But now we have a small issue. If we refer back to the `Mover` object’s constructor…"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For each mover created, the mass is set to a random value between 0.1 and 5, the starting x-location is set to 0, and the starting y-location is set to 0\\. Certainly, there are all sorts of ways we might choose to initialize the objects; this is just a demonstration of one possibility."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's how the program looks, all together. Note how in the program, the smaller circles reach the right of the window faster than the larger ones. This is because of our formula: _acceleration = force divided by mass_. The larger the mass, the smaller the acceleration."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the real world, the one we're seeking inspiration from here, we have more than one moving object - we're surrounded by many objects of varying mass and location. Let's look at how we can get our `Mover` to better simulate that aspect of the real world."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how the mass and location are no longer set to hardcoded numbers, but rather initialized via arguments passed through the constructor. This means we can create a variety of `Mover` objects: big ones, small ones, ones that start on the left side of the screen, ones that start on the right, etc."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that our object is set, we can choose to create, say, twenty `Mover` instances with an array, initializing them with a loop"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once the array of objects is declared, created, and initialized, the rest of the code is simple. We run through every object, hand them each the forces in the environment, and enjoy the show."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To do this, we’ll need a quick review of object-oriented programming. Again, we’re not covering all the basics of OO programming here. However, since the idea of creating a world filled with objects is pretty fundamental to all the examples in this course, it’s worth taking a moment to walk through the steps of going from one object to many."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "With an array, however, we want to initialize all of the objects with a loop."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// A big Mover on the left side of the window\n"
"var m1 = new Mover(10, 0, height/2);\n"
"// A small Mover on the right side of the window\n"
"var m2 = new Mover(0.1, width, height/2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"  background(50, 50, 50);\n"
"\n"
"  for (var i = 0; i < movers.length; i++) {\n"
"    var wind = new PVector(0.01, 0);\n"
"    var gravity = new PVector(0, 0.1);\n"
"    movers[i].applyForce(wind);\n"
"    movers[i].applyForce(gravity);\n"
"    movers[i].update();\n"
"    movers[i].display();\n"
"    movers[i].checkEdges();\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < movers.length; i++) {\n"
"    movers[i] = new Mover(random(0.1, 5), 0, 0);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Mover = function() {\n"
"    this.mass = 1;\n"
"    this.position = new PVector(30, 30);\n"
"    this.velocity = new PVector(0, 0);\n"
"    this.acceleration = new PVector(0, 0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Mover = function(m, x, y) {\n"
"    this.mass = m;\n"
"    this.position = new PVector(x, y);\n"
"    this.velocity = new PVector(0, 0);\n"
"    this.acceleration = new PVector(0, 0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var movers = [];\n"
"\n"
"for (var i = 0; i < 20; i++) {\n"
"    movers[i] = new Mover();\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/motion-of-many-objects</a>.
# Article is at (xc834d631) on the bn stage.
# Article is at (xc834d631) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "…we discover that every `Mover` object is made exactly the same way. What we want are `Mover` objects with varying mass that start at _varying locations_. Here is where we need to increase the sophistication of our constructor by adding arguments."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And so, we finish this example by modifying our for loop so that the inner loop avoids movers attracting themselves:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hopefully, you found it helpful that we started with a simple scenario—_one object attracts another object_—and moved on to _one object attracts many objects_. However, it’s likely that you are going to find yourself in a slightly more complex situation: _many objects attract each other_. In other words, every object in a given system attracts every other object in that system (except for itself)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the previous example, we had an `Attractor` object with a method named `calculateAttraction()`. Now, since we have movers attracting movers, all we need to do is copy that method into the `Mover` object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's see it all together now:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Of course, there’s one small problem. When we are looking at every mover i and every mover j, are we OK with the times that i equals j? For example, should mover #3 attract mover #3? The answer, of course, is no. If there are five objects, we only want mover #3 to attract 0, 1, 2, and 4, skipping itself. We do, however, want to calculate and apply both the force from mover #3 on mover #1, and mover #1 on mover #3\\. The calculated forces will be the same for the pair, but the resulting acceleration will be different, depending on the mass of each mover. Our attraction table should look like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `draw()` function is where we need to work some magic. Currently, we’re saying: “for every mover i, update and display yourself.” Now what we need to say is: “for every mover i, be attracted to every other mover j, and update and display yourself.”"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We’ve really done almost all of the work for this already. Let’s consider a program with an array of `Mover` objects:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.calculateAttraction = function(m) {\n"
"  var force = PVector.sub(this.position, m.position);\n"
"  var distance = force.mag();\n"
"  distance = constrain(distance, 5.0, 25.0);                        \n"
"  force.normalize();\n"
"\n"
"  var strength = (G * this.mass * m.mass) / (distance * distance);\n"
"  force.mult(strength);\n"
"  return force;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < movers.length; i++) {\n"
"    // For every Mover, check every Mover!\n"
"    for (var j = 0; j < movers.length; j++) {\n"
"        var force = movers[j].calculateAttraction(movers[i]);\n"
"        movers[i].applyForce(force);\n"
"    }\n"
"\n"
"    movers[i].update();\n"
"    movers[i].display();\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < movers.length; i++) {\n"
"    for (var j = 0; j < movers.length; j++) {\n"
"       if (i !== j) {\n"
"         var force = movers[j].calculateAttraction(movers[i]);\n"
"         movers[i].applyForce(force);\n"
"       }\n"
"    }\n"
"\n"
"    movers[i].update();\n"
"    movers[i].display();\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/mutual-attraction</a>.
# Article is at (xe181098a) on the bn stage.
# Article is at (xe181098a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var movers = [];\n"
"\n"
"for (var i = 0; i < movers.length; i++) {\n"
"    movers[i] = new Mover(random(0.1, 2), random(width), random(height));\n"
"}\n"
"\n"
"draw = function() {\n"
"    background(255, 255, 255);\n"
"    for (var i = 0; i < movers.length; i++) {\n"
"        movers[i].update();\n"
"        movers[i].display();\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Creating Forces"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Dealing with Mass"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Force Accumulation"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Newton's Second Law"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Newton’s First Law"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Newton’s Third Law"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{A} = \\vec{F} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{A} = \\vec{F}/M $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{F} = M\\vec{A} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Make up a force!** After all, you are the programmer, the creator of your world. There’s no reason why you can’t just make up a force and apply it.\n"
"*   **Model a force!** Yes, forces exist in the real world. And physics textbooks often contain formulas for these forces. We can take these formulas, translate them into source code, and model real-world forces in ProcessingJS."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**A force is a vector that causes an object with mass to accelerate.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**An object at rest stays at rest and an object in motion stays in motion at a constant speed and direction unless acted upon by an unbalanced force.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**An object at rest stays at rest and an object in motion stays in motion.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**An object’s `PVector` velocity will remain constant if it is in a state of equilibrium.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**For every action there is an equal and opposite reaction.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Force equals mass times acceleration.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Forces always occur in pairs. The two forces are of equal strength, but in opposite directions.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**If we calculate a `PVector` f that is a force of object A on object B, we must also apply the force—`PVector.mult(f,-1);`—that B exerts on object A.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Net Force equals mass times acceleration.**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Units of Measurement**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Weight vs. Mass**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**_Density_** is defined as the amount of mass per unit of volume (grams per cubic centimeter, for example)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**_Weight_**, though often mistaken for mass, is technically the force of gravity on an object. From Newton’s second law, we can calculate it as mass times the acceleration of gravity (`w = m * g`). Weight is measured in newtons."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A better way of stating the law might be:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A man pushing a truck while wearing roller skates"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Acceleration is directly proportional to force and inversely proportional to mass. This means that if you get pushed, the harder you are pushed, the faster you’ll move (accelerate). The bigger you are, the slower you’ll move."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Again, let’s be the computer. Object `m1` receives the wind force—(1,0)—divides it by mass (10), and adds it to acceleration."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Alternatively, we could re-write the method using the static version of `div()`, using what we learnt about static functions from the previous section:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And here we are at the most important law for the ProcessingJS programmer."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we begin examining the practical realities of simulating forces in code, let’s take a conceptual look at what it means to be a force in the real world. Just like the word “vector,” “force” is often used to mean a variety of things. It can indicate a powerful intensity, as in “She pushed the boulder with great force” or “He spoke forcefully.” The definition of _**force**_ that we care about is much more formal and comes from Isaac Newton’s laws of motion:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "By the time Newton came along, the prevailing theory of motion—formulated by Aristotle—was nearly two thousand years old. It stated that if an object is moving, some sort of force is required to keep it moving. Unless that moving thing is being pushed or pulled, it will simply slow down or stop. Right?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of two people blowing on pendulum"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what our program looks like, when we put that all together:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, this is missing an important element related to forces. We could expand it by stating:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In our ProcessingJS world, we could restate Newton’s first law as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the final example of the last section, we saw how we could calculate a dynamic acceleration based on a vector pointing from a circle on the screen to the mouse location. The resulting motion resembled a magnetic attraction between circle and mouse, as if some force were pulling the circle in towards the mouse. In this section, we will formalize our understanding of the concept of a force and its relationship to acceleration. Our goal, by the end of this, is to understand how to make multiple objects move around the screen and respond to a variety of environmental forces."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's modify the `applyForce()` method so that we add each new force to acceleration, accumulating them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's re-state Newton's third law for our ProcessingJS world:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's use what we've learnt to build on our `Mover` object, which currently has location, velocity, and acceleration. Now our goal is to be able to add forces to this object, perhaps saying:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s look at Newton's three laws of motion in relation to the concept of a force."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s say you push against a wall. The wall doesn’t actively decide to push back on you. There is no “origin” force. Your push simply includes both forces, referred to as an “action/reaction pair.”"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Mass is a scalar (float), not a vector, as it’s just one number describing the amount of matter in an object. We could be fancy about things and compute the area of a shape as its mass, but it’s simpler to begin by saying, “Hey, the mass of this object is…um, I dunno…how about 1?”"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Newton’s first law is commonly stated as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that an object that has a mass of one kilogram on earth would have a mass of one kilogram on the moon. However, it would weigh only one-sixth as much."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we are introducing mass, it’s important to make a quick note about units of measurement. In the real world, things are measured in specific units. We say that two objects are 3 meters apart, the baseball is moving at a rate of 90 miles per hour, or this bowling ball has a mass of 6 kilograms. As we’ll see later in this course, sometimes we will want to take real-world units into consideration. However, in this section, we’re going to ignore them for the most part. Our units of measurement are in pixels (“These two circles are 100 pixels apart”) and frames of animation (“This circle is moving at a rate of 2 pixels per frame”). In the case of mass, there isn’t any unit of measurement for us to use. We’re just going to make something up. In this example, we’re arbitrarily picking the number 10\\. There is no unit of measurement, though you might enjoy inventing a unit of your own, like “1 moog” or “1 yurkle.” It should also be noted that, for demonstration purposes, we’ll tie mass to pixels (drawing, say, a circle with a radius of 10). This will allow us to visualize the mass of an object. In the real world, however, size does not definitely indicate mass. A small metal ball could have a much higher mass than a large balloon due to its higher density."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we have two forces, pointing in different directions with different magnitudes, both applied to object `m`. We’re beginning to get somewhere. We’ve now built a world for our objects in ProcessingJS, an environment to which they can actually respond."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, in the world of ProcessingJS, what is mass anyway? Aren’t we dealing with pixels? To start in a simpler place, let’s say that in our pretend pixel world, all of our objects have a mass equal to 1\\. `F/1 = F`. And so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, this still causes confusion because it sounds like these forces would always cancel each other out. This is not the case. Remember, the forces act on different objects. And just because the two forces are equal, it doesn’t mean that the movements are equal (or that the objects will stop moving)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we’re not finished just yet. Force accumulation has one more piece. Since we’re adding all the forces together at any given moment, we have to make sure that we clear acceleration (i.e. set it to zero) before each time `update()` is called. Let’s think about wind for a moment. Sometimes the wind is very strong, sometimes it’s weak, and sometimes there’s no wind at all. At any given moment, there might be a huge gust of wind, say, when the user holds down the mouse"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK. Moving on to object `m2`. It also receives the wind force—(1,0). Wait. Hold on a second. What is the value of the wind force? Taking a closer look, the wind force is actually now (0.1,0)!! Do you remember this little tidbit about working with objects? When you pass an object (in this case a `PVector`) into a function, you are passing a reference to that object. It’s not a copy! So if a function makes a change to that object (which, in this case, it does by dividing by mass) then that object is permanently changed! But we don’t want `m2` to receive a force divided by the mass of object `m1`. We want it to receive that force in its original state—(1,0). And so we must protect ourselves and make a copy of the `PVector f` before dividing it by mass. Fortunately, the `PVector` object has a convenient method for making a copy—`get()`. `get()` returns a new `PVector` object with the same data. And so we can revise `applyForce()` as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK. We’ve got one tiny little addition to make before we are done with integrating forces into our Mover class and are ready to look at examples. After all, Newton’s second law is really $ \\vec{F} = M\\vec{A} $, not $ \\vec{A} = \\vec{F} $. Incorporating mass is as easy as adding a property to our object, but we need to spend a little more time here because a slight complication will emerge."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Ok, let’s be the computer for a moment. First, we call `applyForce()` with wind. And so the `Mover` object’s acceleration is now assigned the `PVector` wind. Second, we call `applyForce()` with gravity. Now the Mover object’s acceleration is set to the gravity `PVector`. Third, we call `update()`. What happens in `update()`? Acceleration is added to velocity."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Or, acceleration is equal to the _sum of all forces_ divided by mass. This makes perfect sense. After all, as we saw in Newton’s first law, if all the forces add up to zero, an object experiences an equilibrium state (i.e. no acceleration). Our implementation of this is through a process known as **_force accumulation_**. It’s actually very simple; all we need to do is add all of the forces together. At any given moment, there might be 1, 2, 6, 12, or 303 forces. As long as our object knows how to accumulate them, it doesn’t matter how many forces act on it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at <a href="http://translate.khanacademy.org/test-prep/sat/new-sat-tips-planning/sat-writing-and-language-test-strategies/a/solving-standard-english-conventions-questions-on-the-sat-writing-and-language-test">http://translate.khanacademy.org/test-prep/sat/new-sat-tips-planning/sat-writing-and-language-test-strategies/a/solving-standard-english-conventions-questions-on-the-sat-writing-and-language-test</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Or:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Skipping Newton’s second law (arguably the most important law for our purposes) for a moment, let’s move on to the third law."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The **_mass_** of an object is a measure of the amount of matter in the object (measured in kilograms)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The acceleration of an object is equal to force. This is great news. After all, we saw in the Vectors section that acceleration was the key to controlling the movement of our objects on screen. Location is adjusted by velocity, and velocity by acceleration. Acceleration was where it all began. Now we learn that _force_ is truly where it all begins."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The easiest way to implement clearing the acceleration for each frame is to multiply the PVector by 0 at the end of update()."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The easiest way to make up a force is to just pick a number. Let’s start with the idea of simulating wind. How about a wind force that points to the right and is fairly weak? Assuming a `Mover` object `m`, our code would look like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The good news here is that we recognize the first part of the definition: _a force is a vector_. Thank goodness we just spent a whole section learning what a vector is and how to program with `PVector`s!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The important thing is to find a way to *not* affect that original force vector, so that it can be applied to multiple `Mover` objects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The pendulum doesn't move because all the forces cancel each other out (add up to a net force of zero)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The result isn’t terribly interesting, but it is a good place to start. We create a `PVector` object, initialize it, and pass it into an object (which in turn will apply it to its own acceleration). If we wanted to have two forces, perhaps wind and gravity (a bit stronger, pointing down), we might write the following:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The truth of the matter here is that we started with a simplified statement of Newton’s second law. Here’s a more accurate way to put it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This isn’t so great since things only become interesting once we have objects with varying mass, but it’ll get us started. Where does mass come in? We use it while applying Newton’s second law to our object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This law frequently causes some confusion in the way that it is stated. For one, it sounds like one force causes another. Yes, if you push someone, that someone may actively decide to push you back. But this is not the action and reaction we are talking about with Newton’s third law."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This law is often stated as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This law is traditionally stated as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This looks pretty good. After all, _acceleration = force_ is a literal translation of Newton’s second law (without mass). Nevertheless, there’s a pretty big problem here. Let’s return to what we are trying to accomplish: creating a moving object on the screen that responds to wind and gravity."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This, of course, is not true. In the absence of any forces, no force is required to keep an object moving. An object (such as a ball) tossed in the earth’s atmosphere slows down because of air resistance (a force). An object’s velocity will only remain constant in the absence of any forces or if the forces that act on it cancel each other out, i.e. the net force adds up to zero. This is often referred to as **_equilibrium_**. The falling ball will reach a terminal velocity (that stays constant) once the force of air resistance equals the force of gravity."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Throughout this section, we'll look at two methods for creating forces in our ProcessingJS world:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try pushing on a stationary truck. Although the truck is far more powerful than you, unlike a moving one, a stationary truck will never overpower you and send you flying backwards. The force you exert on it is equal and opposite to the force exerted on your hands. The outcome depends on a variety of other factors. If the truck is a small truck on an icy downhill, you’ll probably be able to get it to move. On the other hand, if it’s a very large truck on a dirt road and you push hard enough (maybe even take a running start), you could injure your hand."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We know what a force is (a vector), and we know how to apply a force to an object (divide it by mass and add it to the object’s acceleration vector). What are we missing? Well, we have yet to figure out how we get a force in the first place. Where do forces come from?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We’ll see that in the world of ProcessingJS programming, we don’t always have to stay true to the above. Sometimes, such as in the case of gravitational attraction between bodies, we’ll want to model equal and opposite forces. Other times, such as when we’re simply saying, “Hey, there’s some wind in the environment,” we’re not going to bother to model the force that a body exerts back on the air. In fact, we’re not modeling the air at all! Remember, we are simply taking inspiration from the physics of the natural world, _not simulating everything with perfect precision_."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We’re not going to see any error in our program, but zoinks! We’ve got a major problem. What is the value of acceleration when it is added to velocity? It is equal to the gravity force. Wind has been left out! If we call `applyForce()` more than once, it overrides each previous call. How are we going to handle more than one force?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What if you pushed a truck while wearing roller skates?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When the user releases the mouse, the wind will stop, and according to Newton’s first law, the object will continue to move at a constant velocity. However, if we had forgotten to reset acceleration to zero, the gust of wind would still be in effect. Even worse, it would add onto itself from the previous frame, since we are accumulating forces! Acceleration, in our simulation, has no memory; it is simply calculated based on the environmental forces present at a moment in time. This is different than, say, location, which must remember where the object was in the previous frame in order to move properly to the next."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Why is this the most important law for us? Well, let’s write it a different way."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Woo! We've covered a lot, but now we can do so much. Keep going - learn to use the force!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Yet again, even though our code looks quite reasonable, we have a fairly major problem here. Consider the following scenario with two `Mover` objects, both being blown away by a wind force."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.applyForce = function(force) {\n"
"    this.acceleration = force;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.applyForce = function(force) {\n"
"    this.acceleration.add(force);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.applyForce = function(force) {\n"
"    var f = force.get();\n"
"    f.div(this.mass);\n"
"    this.acceleration.add(f);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.applyForce = function(force) {\n"
"  force.div(this.mass);\n"
"  this.acceleration.add(force);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.applyForce = function(force) {\n"
"  var f = PVector.div(force, this.mass);\n"
"  this.acceleration.add(f);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.update = function() {\n"
"    this.velocity.add(this.acceleration);\n"
"    this.location.add(this.velocity);\n"
"    this.acceleration.mult(0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if (mousePressed) {\n"
"  var wind = new PVector(0.5, 0);\n"
"  mover.applyForce(wind);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mover.applyForce(gravity);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mover.applyForce(wind);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mover.applyForce(wind);\n"
"mover.applyForce(gravity);\n"
"mover.update();\n"
"mover.display();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Mover = function() {\n"
"    this.mass = 1;\n"
"    this.position = new PVector(random(width), random(height));\n"
"    this.velocity = new PVector(0, 0);\n"
"    this.acceleration = new PVector(0, 0);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var m1 = new Mover();\n"
"var m2 = new Mover();\n"
"\n"
"var wind = new PVector(1, 0);\n"
"\n"
"m1.applyForce(wind);\n"
"m2.applyForce(wind);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var wind = new PVector(0.01, 0);\n"
"  m.applyForce(wind);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var wind = new PVector(0.01, 0);\n"
"var gravity = new PVector(0, 0.1);\n"
"m.applyForce(wind);\n"
"m.applyForce(gravity);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"velocity.add(acceleration);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d7ee22358157d1c782d8cae4530789cfbb73fd66.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d93dd9a79525621ad77d9c8fce72a488e53f3fd9.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "where wind and gravity are `PVector`s. According to Newton’s second law, we could implement this function as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# Article is at (xb42d69f3) on the bn stage.
# Article is at (xb42d69f3) on the pl stage.
# Article is at (xb42d69f3) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| m1 equals wind force: | (1,0) |\n"
"| Divided by mass of 10: | (0.1,0) |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "<div class=\"callout\">**Net Force equals mass times acceleration.**</div>"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-forces/a/newtons-laws-of-motion</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var m1 = new Mover();\n"
"var m2 = new Mover();\n"
"\n"
"var wind = new PVector(1, 0);\n"
"\n"
"m1.applyForce(wind);\n"
"m2.applyForce(wind);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Mapping Noise"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Noise Detail"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A good random number generator produces numbers that have no relationship and show no discernible pattern. As we are beginning to see, a little bit of randomness can be a good thing when programming organic, lifelike behaviors. However, randomness as the single guiding principle is not necessarily natural. An algorithm known as “Perlin noise,” named for its inventor Ken Perlin, takes this concept into account. Perlin developed the noise function while working on the original Tron movie in the early 1980s; it was designed to create procedural textures for computer-generated effects. In 1997 Perlin won an Academy Award in technical achievement for this work. Perlin noise can be used to generate various effects with natural qualities, such as clouds, landscapes, and patterned textures like marble."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "According to the above table, `noise(3)` will return 0.490 at time equals 0.03\\. We could improve this by using a variable for time and asking for a noise value continuously in `draw()`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An online lecture by Ken Perlin lets you learn more about how noise works from [Perlin himself](http://www.noisemachine.com/talk1/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Consider drawing a circle in our ProcessingJS window at a random x-location."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Contrastingly, the next graph below shows pure random numbers over time."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.7"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.5: Noise"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.6: Random"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.8"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.9"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How quickly we increment t also affects the smoothness of the noise. If we make large jumps in time, then we are skipping ahead and the values will be more random."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the next challenge, you'll try using noise with the `Walker` in a slightly different way. Have fun!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In this case, we know that noise has a range between 0 and 1, but we’d like to draw a rectangle with a width between 0 and the current width."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In truth, there is no actual concept of time at play here. It’s a useful metaphor to help us understand how the noise function works, but really what we have is space, rather than time. The graph above depicts a linear sequence of noise values in a one-dimensional space, and we can ask for a value at a specific x-location whenever we want. In examples, you will often see a variable named `xoff` to indicate the x-offset along the noise graph, rather than `t` for time (as noted in the diagram)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Nature of Code Image"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Noise over time"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how the above example requires an additional pair of variables: `tx` and `ty`. This is because we need to keep track of two time variables, one for the x-location of the `Walker` object and one for the y-location. But there is something a bit odd about these variables. Why does `tx` start at 0 and `ty` at 10,000? While these numbers are arbitrary choices, we have very specifically initialized our two time variables with different values. This is because the noise function is deterministic: it gives you the same result for a specific time `t` each and every time. If we asked for the noise value at the same time `t` for both `x` and `y`, then `x` and `y` would always be equal, meaning that the `Walker` object would only move along a diagonal. Instead, we simply use two different parts of the noise space, starting at 0 for `x` and 10,000 for `y` so that `x` and `y` can appear to act independently of each other."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we’re ready to answer the question of what to do with the noise value. Once we have the value with a range between 0 and 1, it’s up to us to map that range to what we want. We could just multiply by the max number in the range, but this is also a good opportunity to introduce the ProcessingJS’s `map()` function, which will help us in more situations later on. The `map()` function takes five arguments. First up is the value we want to map, in this case `n`. Then we have to give it the value’s current range (minimum and maximum), followed by our desired range."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, in order to access one of those noise values in ProcessingJS, we have to pass a specific moment in time to the `noise()` function. For example:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, instead of a random x-location, we want a Perlin noise x-location that is “smoother.” You might think that all you need to do is replace `random()` with `noise()`, i.e."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Perlin noise has a more organic appearance because it produces a naturally ordered (“smooth”) sequence of pseudo-random numbers. The graph below shows Perlin noise over time, with the x-axis representing time; note the smoothness of the curve."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "ProcessingJS has a built-in implementation of the Perlin noise algorithm: the function `noise()`. The `noise()` function takes one, two, or three arguments, as noise is computed in one, two, or three dimensions. Let’s start by looking at one-dimensional noise."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The [noise reference](/cs/noise/5618485581316096) tells us that noise is calculated over several “octaves.” Calling the [`noiseDetail()`](/cs/noisedetailoctaves-falloff/6549875814563840) function will change both the number of octaves and their importance relative to one another. This in turn changes how the noise function behaves."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The above code results in the same value printed over and over. This happens because we are asking for the result of the `noise()` function at the same point in time—3—over and over. If we increment the time variable `t`, however, we’ll get a different result."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try running the code above several times, incrementing t by 0.01, 0.02, 0.05, 0.1, 0.0001, and you will see different results."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can apply the exact same logic to our random walker, and assign both its x- and y-values according to Perlin noise."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "While conceptually this is exactly what we want to do—calculate an x-value that ranges between 0 and the width according to Perlin noise—this is not the correct implementation. While the arguments to the `random()` function specify a range of values between a minimum and a maximum, `noise()` does not work this way. Instead, `noise()` expects us to pass in an argument that signifies a \"moment in time,\" and always returns a value between 0 and 1.  We can think of one-dimensional Perlin noise as a linear sequence of values over time. For example, here are example inputs and return values:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var n = noise(0.03);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = noise(0, width);\n"
"ellipse(x, 180, 16, 16);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = random(0, width);\n"
"ellipse(x, 180, 16, 16);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/0fd97fc7ab7ac5a7670935f1695d2a0c614e5252.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/25e061138e2a7748b3b249ec7cb40b92eccf9196.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/81e9d201147cd09f1b78f9541993d8460355eb3e.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/8c02a4a20ed93d8f4ced27b793af880ae1bd03d3.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a2b4ab456af6fcd80e36fad1254028e5ee03a68a.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise</a>.
# Article is at (xca32c327) on the bn stage.
# Article is at (xca32c327) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Time | Noise Value |\n"
"| --- | --- |\n"
"| 0 | 0.469 |\n"
"| 0.01 | 0.478 |\n"
"| 0.02 | 0.485 |\n"
"| 0.03 | 0.490 |\n"
"| 0.04 | 0.420 |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As we finish off this tutorial, it’s also worth noting that we could just as easily fall into the trap of using Perlin noise as a crutch. How should this object move? Perlin noise! What color should it be? Perlin noise! How fast should it grow? Perlin noise!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.10: 1D Noise"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.11: 2D Noise"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you were to visualize this graph paper with each value mapped to the brightness of a color, you would get something that looks like clouds. White sits next to light gray, which sits next to gray, which sits next to dark gray, which sits next to black, which sits next to dark gray, etc."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s take a quick look at how to implement two-dimensional noise in ProcessingJS. If you wanted to color every pixel of a window randomly, you would need a nested loop, one that accessed each pixel and picked a random brightness."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The point of all of this is not to say that you should or shouldn’t use randomness. Or that you should or shouldn’t use Perlin noise. The point is that the rules of your system are defined by you, and the larger your toolbox, the more choices you’ll have as you implement those rules. The goal of these tutorials is to help you fill your toolbox.  If all you know is one type of randomness, then all of your designs will include only one type of randomness.  Perlin noise is another tool for randomness you can use in your programs.  After a little practice with Perlin noise we will move on to another type of tool- vectors!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This idea of noise values living in a one-dimensional space is important because it leads us right into a discussion of two-dimensional space. Let’s think about this for a moment. With one-dimensional noise, we have a sequence of values in which any given value is similar to its neighbor. Because the value is in one dimension, it only has two neighbors: a value that comes before it (to the left on the graph) and one that comes after it (to the right)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is a nice start conceptually—it gives you a noise value for every (`x`,`y`) location in our two-dimensional space. The problem is that this won’t have the cloudy quality we want. Jumping from pixel 200 to pixel 201 is too large of a jump through noise. Remember, when we worked with one-dimensional noise, we incremented our time variable by 0.01 each frame, not by 1! A pretty good solution to this problem is to just use different variables for the noise arguments. For example, we could increment a variable called `xoff` each time we move horizontally, and a `yoff` variable each time we move vertically through the nested loops."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is why noise was originally invented. You tweak the parameters a bit or play with color to make the resulting image look more like marble or wood or any other organic texture."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To color each pixel according to the `noise()` function, we’ll do exactly the same thing, only instead of calling `random()` we’ll call `noise()`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Two-dimensional noise works exactly the same way conceptually. The difference of course is that we aren’t looking at values along a linear path, but values that are sitting on a grid. Think of a piece of graph paper with numbers written into each cell. A given value will be similar to all of its neighbors: above, below, to the right, to the left, and along any diagonal."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We began the last tutorial by talking about how randomness can be a crutch. In many ways, it’s the most obvious answer to the kinds of questions we ask continuously—how should this object move? What color should it be? This obvious answer, however, can also be a lazy one."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We’ve examined several traditional uses of Perlin noise in this tutorial. With one-dimensional noise, we used smooth values to assign the location of an object to give the appearance of wandering. With two-dimensional noise, we created a cloudy pattern with smoothed values on a plane of pixels. It’s important to remember, however, that Perlin noise values are just that—values. They aren’t inherently tied to pixel locations or color. Any example in these tutorials that has a variable could be controlled via Perlin noise. When we model a wind force, its strength could be controlled by Perlin noise. Same goes for the angles between the branches in a fractal tree pattern, or the speed and direction of objects moving along a grid in a flow field simulation, like in the program below."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var bright = map(noise(x,y), 0, 1, 0, 255);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/0b8cb1e79b61f89bcbe09f15203d075f25632b29.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/2c5d412f69eb61f58377bec156958d7e6f90b94a.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/two-dimensional-noise</a>.
# Article is at (xfe2b1a96) on the bn stage.
# Article is at (xfe2b1a96) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c20b4d68bf15d118de9bd71cda2e48e59238c6e5.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **_Amplitude_**: The distance from the center of motion to either extreme\n"
"*   **_Period_**: The amount of time it takes for one complete cycle of motion"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**TWO_PI * frameCount / period**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And so we happily discover that we can simulate oscillation in a ProcessingJS program by assigning the output of the sine function to an object’s location. Note that this will follow the same methodology we applied to Perlin noise in the noise section."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Are you amazed yet? In the angular motion section, we saw some pretty great uses of tangent (for finding the angle of a vector) and sine and cosine (for converting from polar to Cartesian coordinates). We could stop right here and be satisfied. But we’re not going to. This is only the beginning. What sine and cosine can do for you goes beyond mathematical formulas and right triangles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It’s also worth mentioning the term **_frequency_**: the number of cycles per time unit. Frequency is equal to 1 divided by period. If the period is 120 frames, then only 1/120th of a cycle is completed in one frame, and so frequency = 1/120 cycles/frame. In the above example, we simply chose to define the rate of oscillation in terms of period and therefore did not need a variable for frequency."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s begin with a really basic scenario. We want a circle to oscillate from the left side to the right side of our canvas."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s dissect the formula a bit more and try to understand each component. The first is probably the easiest. Whatever comes out of the sine function we multiply by amplitude. We know that sine will oscillate between -1 and 1\\. If we take that value and multiply it by amplitude then we’ll get the desired result: a value oscillating between -amplitude and amplitude. (Note: this is also a place where we could use ProcessingJS’s `map()` function to map the output of sine to a custom range.)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s take a look at a graph of the sine function, where _y = sine(x)_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Looking at the graph of sine embedded above, we can see that the amplitude is 1 and the period is `TWO_PI`; the output of sine never rises above 1 or below -1; and every `TWO_PI` radians (or 360 degrees) the wave pattern repeats."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that we worked through all of that using the sine function (`sin()` in ProcessingJS), but the same ideas apply to using the cosine function. The period is the same for both, and the main difference is just whether the beginning amplitude starts at 1 or at 0."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, in the ProcessingJS world we live in, what is amplitude and what is period? Amplitude can be measured rather easily in pixels. In the case of a window 200 pixels wide, we would oscillate from the center 100 pixels to the right and 100 pixels to the left. Therefore:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, let’s look at what is inside the sine function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once we have the amplitude and period, it’s time to write a formula to calculate x as a function of time, which we will substitute the current frame count for."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Period is the amount of time it takes for one cycle, but what is time in our ProcessingJS world? I mean, certainly we could say we want the circle to oscillate every three seconds. And we could track the milliseconds elapsed in our program (using `millis()`) and come up with an elaborate algorithm for oscillating an object according to real-world time."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Simple harmonic motion can be expressed as any location (in our case, the `x` location) as a function of time, with the following two elements:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is what is known as **_simple harmonic motion_** (or, to be fancier, “the periodic sinusoidal oscillation of an object”). It’s going to be a simple program to write, but before we get into the code, let’s familiarize ourselves with some of the terminology of oscillation (and waves)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can thus decide to base our period on number of frames elapsed, as we've seen its closely related to real world time- we can say that the oscillating motion should repeat every 30 frames, or 50 frames, or 1000 frames, etc."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have another option, however: we can use the fact that ProcessingJS programs have a notion of \"frames\", and that by default, a program attempts to run 30 \"frames per second.\" ProcessingJS gives us the `frameCount` variable to find out what frame we're currently on, and the [`frameRate()`](/cs/frameratefps/6427359154536448) function to change the preferred frames per second. 30 FPS is the default frame rate, as that's a good rate to produce a smooth animation to trick the human brain, but it can sometimes be helpful to slow down that frame rate, like when debugging."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What’s going on here? Let’s start with what we know. We know that sine will repeat every 2*PI radians—i.e. it will start at 0 and repeat at 2*PI, 4*PI, 6*PI, etc. If the period is 120 frames, then we want the oscillating motion to repeat when the `frameCount` is at 120 frames, 240 frames, 360 frames, etc. `frameCount` is really the only variable; it starts at 0 and counts upward. Let’s take a look at what the formula yields with those values."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Wrapping this all up, here’s the program that oscillates the x location of a circle with an amplitude of 100 pixels and a period of 120 frames."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You’ll notice that the output of the sine function is a smooth curve alternating between –1 and 1\\. This type of a behavior is known as **_oscillation_**, a periodic movement between two points. Plucking a guitar string, swinging a pendulum, bouncing on a pogo stick—these are all examples of oscillating motion."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// Our amplitude measured in pixels\n"
"var amplitude = 100;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// Our period is measured in frames (our unit of time for animation)\n"
"var period = 120;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = amplitude * sin(TWO_PI * frameCount / period);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`frameCount` divided by period tells us how many cycles we’ve completed—are we halfway through the first cycle? Have we completed two cycles? By multiplying that number by `TWO_PI`, we get the result we want, since `TWO_PI` is the number of radians required for one sine to complete one cycle."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/ae148bcfc7631eafcf48e3ee556b16561014ef13.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-amplitude-and-period</a>.
# Article is at (x69c14b57) on the bn stage.
# Article is at (x69c14b57) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| frameCount | frameCount / period | TWO_PI * frameCount / period |\n"
"| --- | --- | --- |\n"
"| 0 | 0 | 0 |\n"
"| 60 | 0.5 | PI |\n"
"| 120 | 1 | TWO_PI |\n"
"| 240 | 2 | 2 * TWO_PI (or 4* PI) |\n"
"| etc. |   |   |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**period = TWO_PI / angular velocity**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "...in `draw()`, we can simply say:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "...where `angle` is our “some value that increments slowly.”"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An understanding of the concepts of oscillation, amplitude, and frequency/period is often required in the course of simulating real-world behaviors. However, there is a slightly easier way to rewrite the above example with the same result. Let’s take one more look at our oscillation formula:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And let’s rewrite it a slightly different way:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's our modified program:   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we care about precisely defining the period of oscillation in terms of frames of animation, we might need the formula the way we first wrote it, but we can just as easily rewrite our example using the concept of angular velocity (and acceleration) from the [Angular Motion lesson](/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity). Assuming:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Just because we’re not referencing it directly doesn’t mean that we’ve eliminated the concept of period. After all, the greater the angular velocity, the faster the circle will oscillate (therefore lowering the period). In fact, the number of times it takes to add up the angular velocity to get to TWO_PI is the period or:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s expand this example a bit more and create an `Oscillator` object. And let’s assume we want the oscillation to happen along both the x-axis (as above) and the y-axis. To do this, we’ll need two angles, two angular velocities, and two amplitudes (one for each axis). Another perfect opportunity for `PVector`!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Read through the code in the program below:   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"angle += aVelocity;\n"
"var x = amplitude * sin(angle);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var angle = 0;\n"
"var aVelocity = 0.03;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# Article is at (x27be0012) on the bn stage.
# Article is at (x27be0012) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = amplitude * sin(some value that increments slowly);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/oscillation-with-angular-velocity</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we care about precisely defining the period of oscillation in terms of frames of animation, we might need the formula the way we first wrote it, but we can just as easily rewrite our example using the concept of angular velocity (and acceleration) from the [Angular Motion lesson](https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/angular-velocity). Assuming:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ F_spring = -k \\times x $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   `k` is constant and its value will ultimately scale the force. Is the spring highly elastic or quite rigid?\n"
"*   `x` refers to the displacement of the spring, i.e. the difference between the current length and the rest length. The rest length is defined as the length of the spring in a state of equilibrium."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "First, let’s use Hooke’s law to calculate the magnitude of the force. We need to know `k` and `x`. `k` is easy; it’s just a constant, so let’s make something up."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In other words, if you pull on the bob a lot, the force will be strong; if you pull on the bob a little, the force will be weak. Mathematically, the law is stated as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the beginning of this section, we looked at modeling simple harmonic motion by mapping the sine wave to a pixel range, and had you model a bob on a spring using that sine wave. While using the `sin()` function is a quick-and-dirty, one-line-of-code way of getting something up and running, it won’t do if what we really want is to have a bob hanging from a spring in a two-dimensional space that responds to other forces in the environment (wind, gravity, etc.) To accomplish a simulation like this (one that is identical to the pendulum example, only now the arm is a springy connection), we need to model the forces of a spring using `PVector`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the diagram above, we can see that if we stretch the spring beyond its rest length, there should be a force pulling it back towards the anchor. And if it shrinks below its rest length, the force should push it away from the anchor. This reversal of direction is accounted for in the formula with the -1\\. And so all we need to do is normalize the `PVector` we used for the distance calculation! Let’s take a look at the code and rename that `PVector` variable as “force.”"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's put it all together, in the program embedded below. We've added a few things: (1) the `Bob` object includes functions for mouse interactivity so that the bob can be dragged around the window, and (2) the `Spring` object includes a function to constrain the connection’s length between a minimum and a maximum."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s establish the following three starting variables as shown in the diagram above, with some reasonable values."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Nevertheless, in this example, all we did was:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now remember, force is a vector, so we need to calculate both magnitude and direction. Let’s look at one more diagram of the spring and label all the givens we might have in a program."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have the algorithm worked out for computing the spring force vector, the question remains: what object-oriented programming structure should we use? This, again, is one of those situations in which there is no “correct” answer. There are several possibilities; which one we choose depends on the program’s goals and one’s own personal coding style. Still, since we’ve been working all along with a `Mover` object, let’s keep going with this same framework. Let’s think of our `Mover` object as the spring’s “bob.” The bob needs location, velocity, and acceleration vectors to move about the screen. Perfect—we’ve got that already! And perhaps the bob experiences a gravity force via the `applyForce()` method. Just one more step—we need to apply the spring force:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we’ve sorted out the elements necessary for the magnitude of the force `(-1 * k * x)`, we need to figure out the direction, a unit vector pointing in the direction of the force. The good news is that we already have this vector. Right? Just a moment ago we thought to ourselves: “How we can calculate that distance? How about the magnitude of a vector that points from the anchor to the bob?” Well, that same vector is the direction of the force!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The analogous situation here with a spring would be:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The force of a spring is calculated according to Hooke’s law, named for Robert Hooke, a British physicist who developed the formula in 1660\\. Hooke originally stated the law in Latin: \"Ut tensio, sic vis,\" or “As the extension, so the force.” Let’s think of it this way:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The force of the spring is directly proportional to the extension of the spring."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This allows us to write this lovely code to tie them together:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What gives? Why don’t we need to call `applyForce()` on the bob? The answer is, of course, that we do need to call `applyForce()` on the bob. Only instead of doing it in `draw()`, we’re just demonstrating that a perfectly reasonable (and sometimes preferable) alternative is to ask the `connect()` method to internally handle calling `applyForce()` on the bob."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Why do it one way with the `Attractor` object and another way with the `Spring` object? When we were first learning about forces, it was a bit clearer to show all the forces being applied in the main `draw()` loop, and hopefully this helped you learn about force accumulation. Now that we’re more comfortable with that, perhaps it’s simpler to embed some of the details inside the objects themselves."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You may notice here that this is quite similar to what we did in the Gravity section with an attractor. There, we said something like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]One option would be to write out all of the spring force code in the main `draw()` loop. But thinking ahead to when you might have multiple bobs and multiple spring connections, it makes a good deal of sense to write an additional object, a `Spring` object. As shown in the diagram above, the `Bob` object keeps track of the movements of the bob; the `Spring` object keeps track of the spring’s anchor and its rest length and calculates the spring force on the bob."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Spring.prototype.connect(bob) {\n"
"  var force = /* some fancy calculations */;\n"
"  bob.applyForce(force);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"spring.connect(bob);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var anchor = new PVector(100, 10);\n"
"var bob = new PVector(110, 100);\n"
"var restLength = 20;\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var bob = new Bob();\n"
"\n"
"draw = function()  {\n"
"  // Our “make-up-a-gravity force”\n"
"  var gravity = new PVector(0, 1);\n"
"  bob.applyForce(gravity);\n"
"  // We need to also calculate and apply a spring force!\n"
"  var springForce = \\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_????\n"
"  bob.applyForce(spring);\n"
"\n"
"  // Our standard update() and display() methods\n"
"  bob.update();\n"
"  bob.display();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var bob = new Bob();\n"
"var spring = new Spring();\n"
"\n"
"draw = function()  {\n"
"  // Our “make-up-a-gravity force”\n"
"  var gravity = new PVector(0, 1);\n"
"  bob.applyForce(gravity);\n"
"  // Spring.connect will take care of computing and applying the spring force\n"
"  spring.connect(bob);\n"
"\n"
"  // Our standard update() and display() methods\n"
"  bob.update();\n"
"  bob.display();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var dir = PVector.sub(bob, anchor);\n"
"var currentLength = dir.mag();\n"
"var x = restLength - currentLength;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var force = attractor.calculateAttraction(mover);\n"
"mover.applyForce(force);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var force = spring.calculateForce(bob);\n"
"bob.applyForce(force);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var k = 0.01;\n"
"var force = PVector.sub(bob, anchor);\n"
"var currentLength = force.mag();\n"
"var x = restLength - currentLength;\n"
"// Direction of spring force, a unit vector\n"
"force.normalize();\n"
"// Putting it together: direction and magnitude!\n"
"force.mult(-1 * k * x);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var k = 0.1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`x` is perhaps a bit more difficult. We need to know the “difference between the current length and the rest length.” The rest length is defined as the variable `restLength`. What’s the current length? The distance between the anchor and the bob. And how can we calculate that distance? How about the magnitude of a vector that points from the anchor to the bob? (Note that this is exactly the same process we employed when calculating distance in the Gravitational Attraction section.)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/31083b34db2d85996cdb23ddb1c1b0981bc7db46.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/52e1c56f06fef7ecad1841e0ab882d7703c4a7ab.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/7148866624b58257d6280f2754119faac401939e.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c49138fcf8af3eca30aa75bec1471eece826f00b.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/spring-forces</a>.
# Article is at (xd855d270) on the bn stage.
# Article is at (xd855d270) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/f7da87016b8b588eef83b891dae860c3e7257a8f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ F_p = F_g \\times sine(\\theta) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ sine(\\theta) = \\frac{F_p}{F_g} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   arm length\n"
"*   angle\n"
"*   angular velocity\n"
"*   angular acceleration"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**angular acceleration = gravity * sine(θ)**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"**angular velocity = angular velocity + angular acceleration  \n"
"angle = angle + angular velocity**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A pendulum is a bob suspended from a pivot. Obviously a real-world pendulum would live in a 3D space, but we’re going to look at a simpler scenario, a pendulum in a 2D space—the program canvas."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Amazing. After all that, the formula is so simple. You might be wondering, why bother going through the derivation at all? I mean, learning is great and all, but we could have easily just said, \"Hey, the angular acceleration of a pendulum is some constant times the sine of the angle.\" This is just another moment in which we remind ourselves that the purpose of the course is not to learn how pendulums swing or gravity works. The point is to think creatively about how things can move about the screen in a computationally based graphics system. The pendulum is just a case study. If you can understand the approach to programming a pendulum, then however you choose to design your onscreen world, you can apply the same techniques."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we put everything together, there’s one last little detail I neglected to mention. Let’s think about the pendulum arm for a moment. Is it a metal rod? A string? A rubber band? How is it attached to the pivot point? How long is it? What is its mass? Is it a windy day? There are a lot of questions that we could continue to ask that would affect the simulation. We’re living, of course, in a fantasy world, one where the pendulum’s arm is some idealized rod that never bends and the mass of the bob is concentrated in a single, infinitesimally small point."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of pendulum with angles"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Do you remember reading about Newton’s laws of motion from a couple sections back?  We are just about ready to convert those laws into running code. After all, it’s been nice learning about triangles and tangents and waves, but really, the core of this course is about simulating the physics of moving bodies. Let’s take a look at how trigonometry can help us with this pursuit."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Finally, a real-world pendulum is going to experience some amount of friction (at the pivot point) and air resistance. With our code as is, the pendulum would swing forever, so to make it more realistic we can use a “damping” trick. I say _trick_ because rather than model the resistance forces with some degree of accuracy (as we did in the Forces section), we can achieve a similar result by simply reducing the angular velocity during each cycle. The following code reduces the velocity by 1% (or multiplies it by 99%) during each frame of animation:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the Forces section, we learned how a force (such as the force of gravity shown in the diagram above) causes an object to accelerate. `**F = M * A**` or `**A = F / M**`. In this case, however, the pendulum bob doesn’t simply fall to the ground because it is attached by an arm to the pivot point. And so, in order to determine its angular acceleration, we not only need to look at the force of gravity, but also the force at the angle of the pendulum’s arm (relative to a pendulum at rest with an angle of 0)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the above case, since the pendulum’s arm is of fixed length, the only variable in the scenario is the angle. We are going to simulate the pendulum’s motion through the use of angular velocity and acceleration. The angular acceleration will be calculated using Newton’s second law with a little trigonometry twist."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Lest we forget, we’ve been doing all of this with a single question in mind: What is the angular acceleration of the pendulum? Once we have the angular acceleration, we’ll be able to apply our rules of motion to find the new angle for the pendulum."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s zoom in on the right triangle from the pendulum diagram."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Nevertheless, even though we don’t want to worry ourselves with all of the questions, we should add one more variable to our calculation of angular acceleration. To keep things simple, in our derivation of the pendulum’s acceleration, we assumed that the length of the pendulum’s arm is 1\\. In fact, the length of the pendulum’s arm affects the acceleration greatly: the longer the arm, the slower the acceleration. To simulate a pendulum more accurately, we divide by that length, in this case `armLength`. For a more involved explanation, visit [The Simple Pendulum website](http://calculuslab.deltacollege.edu/ODE/7-A-2/7-A-2-h.html)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Of course, we’re not finished yet. We may be happy with our simple, elegant formula, but we still have to apply it in code. This is most definitely a good time to practice our object-oriented programming skills and create a `Pendulum` object. Let’s think about all the properties we’ve encountered in our pendulum discussion that the object will need to keep track of:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Plus we'll also want to specify where the pendulum is hanging from, so we could start with a constructor like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Putting everything together, we have the following example. We've added a bit of functionality to make it easy to drag the bob and drop it from different heights, too. Try it out!   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Starting with:  \n"
"**pendulum force = force due to gravity * sine(θ)**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Ta-da! We now have a way to calculate the angular acceleration."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The good news is that with Newton’s second law, we know that there is a relationship between force and acceleration, namely $ F = M \\times A $, or $ A = F / M $, and we can use that relationship with the formula above to figure out the angular acceleration. See if you can follow this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The origin is just something we make up, as is the arm length. Let’s say we construct our pendulum like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Then we divide the right side by mass, to come up with the acceleration, based on Newton's second law:  \n"
"**pendulum angular acceleration = (force due to gravity * sine(θ)) / mass**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"Then we realize we can just divide the force due to gravity by mass, and that's the same thing as acceleration due to gravity, so we'll just substitute that:  \n"
"**pendulum angular acceleration = acceleration due to gravity * sine (θ)**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is a good time to remind ourselves that we’re ProcessingJS programmers and not physicists. Yes, we know that the acceleration due to gravity on earth is 9.8 meters per second squared. But this number isn’t relevant to us. What we have here is just an arbitrary constant (we’ll call it gravity), one that we can use to scale the acceleration to something that feels right."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can see that the force of the pendulum ($ F_p $) should point perpendicular to the arm of the pendulum in the direction that the pendulum is swinging. After all, if there were no arm, the bob would just fall straight down. It’s the tension force of the arm that keeps the bob accelerating towards the pendulum’s rest state. Since the force of gravity ($ F_g $) points downward, by making a right triangle out of these two vectors, we’ve accomplished something quite magnificent. We’ve made the force of gravity the hypotenuse of a right triangle and separated the vector into two components, one of which represents the force of the pendulum. Since sine equals opposite over hypotenuse, we have:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We're storing the current angle on the `angle` property. So relative to the origin, the pendulum’s position is a polar coordinate: _(r,angle)_. And we need it to be Cartesian. Luckily for us, we spent some time in the Angles section deriving the formula for converting from polar to Cartesian. In that section, our angle was relative to the horizontal axis, but here, it's relative to the vertical axis, so we end up using `sin()` for the x position and `cos()` for the y position, instead of `cos()` and `sin()`, respectively. And so, we can calculate the position relative to the origin using that conversion formula, and then add the origin position to it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We’ll also need to write an `update()` method to update the pendulum’s angle according to our formula…"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]…as well as a `display()` method to draw the pendulum in the window. This begs the question: “Um, where do we draw the pendulum?” We know the angle and the arm length, but how do we know the _x,y_ (Cartesian!) coordinates for both the pendulum’s pivot point (let’s call it origin) and bob location (let’s call it position)? This may be getting a little tiring, but the answer, yet again, is trigonometry. Let's reference the diagram to the left."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Pendulum.prototype.update = function() {\n"
"    // Arbitrary constant\n"
"    var gravity = 0.4;\n"
"    // Calculate acceleration\n"
"    this.aAcceleration = -1 * gravity * sin(this.angle);\n"
"    // Increment velocity\n"
"    this.aVelocity += this.aAcceleration;\n"
"    // Increment angle\n"
"    this.angle += this.aVelocity;    \n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"stroke(0, 0, 0);\n"
"fill(175, 175, 175);\n"
"line(this.origin.x, this.origin.y, this.position.x, this.position.y);\n"
"ellipse(this.position.x, this.position.y, 16, 16);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"this.aAcceleration = (-1 * gravity / this.armLength) * sin(this.angle);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"this.aVelocity *= this.damping;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"this.position = new PVector(\n"
"   this.armLength * sin(this.angle),\n"
"   this.armLength * cos(this.angle));\n"
"this.position.add(this.origin);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Pendulum  = function(origin, armLength) {\n"
"    this.origin = origin;\n"
"    this.armLength = armLength;\n"
"\n"
"    this.angle = PI/4;\n"
"    this.aVelocity = 0.0;\n"
"    this.aAcceleration = 0.0;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var p = new Pendulum(new PVector(100, 10), 125);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/430764d776507520b2c42b6ff17c865523dedf90.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/81c37643f972abfd44fae0a22622e0ac8081066b.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# Article is at (x138b0da9) on the bn stage.
# Article is at (x138b0da9) on the pl stage.
# Article is at (x138b0da9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/afe074c26904c047a4ae4fc3fdec16be43a9a9ff.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/trig-and-forces-the-pendulum</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"this.position = new PVector(\n"
"   this.armLength * sin(this.angle),\n"
"   this.armLength * cos(this.angle));\n"
"this.position.add(this.origin);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  Calculate y location according to amplitude and sine of the angle.\n"
"2.  Draw a circle at the _(x,y)_ location.\n"
"3.  Increment the angle according to angular velocity."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here it is, with the start angle incorporated. Try changing the different numbers to see what happens to the oscillating wave."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here, we’re going to encounter the same questions of amplitude (height of pattern) and period. Instead of period referring to time, however, since we’re looking at the full wave, we can talk about period as the width (in pixels) of a full wave cycle. And just as with simple oscillation, we have the option of computing the wave pattern according to a precise period or simply following the model of angular velocity."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you’re saying to yourself, “Um, this is all great and everything, but what I really want is to draw a wave onscreen,” well, then, the time has come. The thing is, we’re about 90% there. When we oscillate a single circle up and down according to the sine function, what we are doing is looking at a single point along the x-axis of a wave pattern. With a little panache and a for loop, we can place a whole bunch of these oscillating circles next to each other."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s go with the simpler case, angular velocity. We know we need to start with an angle, an angular velocity, and an amplitude:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s look at the results with different values for `angleVel`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how, although we’re not precisely computing the period of the wave, the higher the angular velocity, the shorter the period. It’s also worth noting that as the period becomes shorter, it becomes more and more difficult to make out the wave itself as the distance between the individual points increases. One option we have is to use `beginShape()` and `endShape()` to connect the points with a line."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The above example is static. The wave never changes, never undulates, and that's what we've been building up to. This additional step of animating the wave is a bit tricky. Your first instinct might be to say: “Hey, no problem, we’ll just let angle be a global variable and let it increment from one cycle through `draw()` to another.”"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then we’re going to loop through all of the x values where we want to draw a point of the wave. Let’s say every 24 pixels for now. In that loop, we’re going to want to do three things:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This wavy pattern could be used in the design of the body or appendages of a creature, as well as to simulate a soft surface (such as water)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "While it’s a nice thought, it won't work. If you look at the statically drawn wave, the righthand edge doesn’t match the lefthand; where it ends in one cycle of `draw()` can’t be where it starts in the next. Instead, what we need to do is have a variable dedicated entirely to tracking what value of angle the wave should start with. This angle (which we’ll call `startAngle`) increments with its own angular velocity."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ cs-program 1]]  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ cs-program 2]]  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ cs-program 3]]"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var x = 0; x <= width; x += 24) {\n"
"    // Calculate y location according to amplitude and sine of angle\n"
"    var y = amplitude * sin(angle);\n"
"    // Draw a circle at the x, y location\n"
"    ellipse(x, y+height/2, 48, 48);\n"
"    // Increment the angle according to angular velocity\n"
"    angle += angleVel;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-oscillations/a/waves</a>.
# Article is at (x7bf0ae1a) on the bn stage.
# Article is at (x7bf0ae1a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var angle = 0;\n"
"var angleVel = 0.2;\n"
"var amplitude = 100;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   when i = 0 → Check particle A → Do not delete\n"
"*   when i = 1 → Check particle B → Do not delete\n"
"*   when i = 2 → Check particle C → Delete!\n"
"*   (Slide particles D and E back from slots 3 and 4 to 2 and 3)\n"
"*   when i = 3 → Check particle E → Do not delete"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Although the above code will run just fine (and the program will never grind to a halt), we have opened up a medium-sized can of worms. Whenever we manipulate the contents of an array while iterating through that very array, we can get ourselves into trouble. Take, for example, the following code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here it is, all together now:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's how we can rewrite that into an object - we'll make the `particles` array a property of the object, make a wrapper method `addParticle` for adding new particles, and put all the particle running logic in `run`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what we had before - note the bolded lines:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you recall the goal we set at the beginning of this chapter, we wanted our program to look like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you try that out and run that code for a few minutes, you'll probably start to see the frame rate slow down further and further until the program grinds to a halt. That's because we're creating more and more particles that we have to process and display, without ever removing any. Once the particles are dead, they're useless, so we may as well save our program from unnecessary work and remove those particles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's take the program we wrote above and see how to fit it into the `ParticleSystem` object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s pretend we are `i` looping through the array."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice the problem? We never checked particle D! When C was deleted from slot #2, D moved into slot #2, but `i` has already moved on to slot #3\\. This is not a disaster, since particle D will get checked the next time around. Still, the expectation is that we are writing code to iterate through every single item of the array. Skipping an item is unacceptable."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK. Now we’ve done two things. We’ve written an object to describe an individual `Particle`. We’ve figured out how to use arrays to manage many `Particle` objects (with the ability to add and delete at will)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Putting it all together, we have this:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So far, we've managed to create a single particle that we re-spawn whenever it dies. Now, we want to create a continuous stream of particles, adding a new one with each cycle through `draw()`. We could just create an array and push a new particle onto it each time:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There's a simple solution to this problem: just iterate through the array backwards. If you are sliding items from right to left as items are removed, it’s impossible to skip an item by accident. All we have to do is modify the three bits in the for loop:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is a somewhat extreme example (with flawed logic), but it proves the point. In the above case, for each particle in the array, we add a new particle to the array (thus changing the `length` of the array). This will result in an infinite loop, as `i` can never increment past `particles.length`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To remove items from an array in JavaScript, we can use the [`splice()`](https://www.w3schools.com/jsref/jsref_splice.asp) method, specifying the desired index to delete and number to delete (just one). We'd do that after querying whether the particle is in fact dead:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could also add some new features to the particle system itself. For example, it might be useful for the `ParticleSystem` object to keep track of an origin point where particles are made. This fits in with the idea of a particle system being an “emitter,” a place where particles are born and sent out into the world. The origin point should be initialized in the constructor."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could stop here. However, one additional step we can and should take is to create an object to describe the collection of Particle objects itself—the `ParticleSystem` object. This will allow us to remove the bulky logic of looping through all particles from the main tab, as well as open up the possibility of having more than one particle system."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "While removing items from the particles array during a loop doesn’t cause the program to crash (as it does with adding), the problem is almost more insidious in that it leaves no evidence. To discover the problem we must first establish an important fact. When an item is removed from an array, all items are shifted one spot to the left. Note the diagram below where particle C (index 2) is removed. Particles A and B keep the same index, while particles D and E shift from 3 and 4 to 2 and 3, respectively.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"  for (var i = particles.length-1; i >= 0; i--) {\n"
"    var p = particles[i];\n"
"    p.run();\n"
"    if (p.isDead()) {\n"
"      particles.splice(i, 1);\n"
"    }\n"
"  }\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < particles.length; i++) {\n"
"  var p = particles[i];\n"
"  p.run();\n"
"  particles.push(new Particle(new PVector(width/2, 50)));\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var ParticleSystem = function() {\n"
"  this.particles = [];\n"
"};\n"
"\n"
"ParticleSystem.prototype.addParticle = function() {\n"
"  this.particles.push(new Particle());\n"
"};\n"
"\n"
"ParticleSystem.prototype.run = function() {\n"
"  for (var i = this.particles.length-1; i >= 0; i--) {\n"
"      var p = this.particles[i];\n"
"      p.run();\n"
"      if (p.isDead()) {\n"
"        this.particles.splice(i, 1);\n"
"      }\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var ParticleSystem = function(position) {\n"
"  this.origin = position.get();\n"
"  this.particles = [];\n"
"};\n"
"\n"
"ParticleSystem.prototype.addParticle = function() {\n"
"  this.particles.push(new Particle(this.origin));\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var particles = [];\n"
"\n"
"draw = function() {\n"
"  background(133, 173, 242);\n"
"  particles.push(new Particle(new PVector(width/2, 50)));\n"
"\n"
"  for (var i = particles.length-1; i >= 0; i--) {\n"
"    var p = particles[i];\n"
"    p.run();\n"
"    if (p.isDead()) {\n"
"      particles.splice(i, 1);\n"
"    }\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var particles = [];\n"
"draw = function() {\n"
"  background(133, 173, 242);\n"
"  particles.push(new Particle(new PVector(width/2, 50)));\n"
"\n"
"  for (var i = 0; i < particles.length; i++) {\n"
"    var p = particles[i];\n"
"    p.run();\n"
"    if (p.isDead()) {\n"
"      particles.splice(i, 1);\n"
"    }\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var particles = [];\n"
"draw = function() {\n"
"  background(133, 173, 242);\n"
"  particles.push(new Particle(new PVector(width/2, 50)));\n"
"\n"
"  for (var i = 0; i < particles.length; i++) {\n"
"    var p = particles[i];\n"
"    p.run();\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var ps = new ParticleSystem(new PVector(width/2, 50));\n"
"\n"
"draw = function() {\n"
"  background(0, 0, 0);\n"
"  ps.run();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# Article is at (x30910cd4) on the bn stage.
# Article is at (x30910cd4) on the pl stage.
# Article is at (x30910cd4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/85335587be87fbf915220bf1fe5128268ae49daf.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "To remove items from an array in JavaScript, we can use the [`splice()`](http://docs.webplatform.org/wiki/javascript/Array/splice) method, specifying the desired index to delete and number to delete (just one). We'd do that after querying whether the particle is in fact dead:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-particle-system</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"  for (var i = particles.length-1; i >= 0; i--) {\n"
"    var p = particles[i];\n"
"    p.run();\n"
"    if (p.isDead()) {\n"
"      particles.splice(i, 1);\n"
"    }\n"
"  }\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we can create an entire `ParticleSystem`, we have to create an object that will describe a single particle. The good news: we've done this already. Our `Mover` object from the Forces section serves as the perfect template. For us, a particle is an independent body that moves about the screen. It has `location`, `velocity`, and `acceleration`, a constructor to initialize those variables, and functions to `display()` itself and `update()` its location."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we get to the next step of making many particles, it’s worth taking a moment to make sure our particle works correctly and create a sketch with one single `Particle` object. Here is the full code below, with two small additions. We add a convenience method called `run()` that simply calls both `update()` and `display()` for us. In addition, we give the particle a random initial velocity as well as a downward acceleration (to simulate gravity)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have an object to describe a single particle, we’re ready for the next big step. How do we keep track of many particles, when we can’t ensure exactly how many particles we might have at any given time?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The reason we chose to start the `timeToLive` at 255 and count down to 0 is for convenience. With those values, we can use `timeToLive` as the alpha transparency for the ellipse as well. When the particle is “dead” it will also have faded away onscreen."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are many different ways to decide when a particle dies. For example, it could come into contact with another object, or it could simply leave the screen. For our first `Particle` object, however, we’re simply going to add a `timeToLive` property. It will act as a timer, counting down from 255 to 0, at which point we'll consider the particle to be \"dead.\" And so we expand the `Particle` object as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is about as simple as a particle can get. From here, we could take our particle in several directions. We could add an `applyForce()` method to affect the particle’s behavior (we’ll do precisely this in a future example). We could add variables to describe color and shape, or use `image()` to draw the particle. For now, however, let’s focus on adding just one additional detail: **_lifespan_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Typical particle systems involve something called an **_emitter_**. The emitter is the source of the particles and controls the initial settings for the particles, location, velocity, etc. An emitter might emit a single burst of particles, or a continuous stream of particles, or both. The point is that for a typical implementation such as this, a particle is born at the emitter but does not live forever. If it were to live forever, our program would eventually grind to a halt as the number of particles increased to an unwieldy number over time. As new particles are born, we need old particles to die. This creates the illusion of an infinite stream of particles, and the performance of our program does not suffer."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "With the addition of the `timeToLive` property, we’ll also need one additional method—a function that can be queried (for a true or false answer) as to whether the particle is alive or dead. This will come in handy when we are writing the `ParticleSystem` object, whose task will be to manage the list of particles themselves. Writing this function is pretty easy; we just need to check and see if the value of `timeToLive` is less than 0\\. If it is we return true, if not we return false."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// A simple Particle object\n"
"var Particle = function(position) {\n"
"  this.acceleration = new PVector();\n"
"  this.velocity = new PVector();\n"
"  this.position = position.get();\n"
"  this.timeToLive = 255;\n"
"};\n"
"\n"
"Particle.prototype.update = function(){\n"
"  this.velocity.add(this.acceleration);\n"
"  this.position.add(this.velocity);\n"
"  this.timeToLive -= 2;\n"
"};\n"
"\n"
"Particle.prototype.display = function() {\n"
"  stroke(255, 255, 255, this.timeToLive);\n"
"  fill(127, 127, 127, this.timeToLive);\n"
"  ellipse(this.position.x, this.position.y, 8, 8);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// A simple Particle object\n"
"var Particle = function(position) {\n"
"  this.acceleration = new PVector();\n"
"  this.velocity = new PVector();\n"
"  this.position = position.get();\n"
"};\n"
"\n"
"Particle.prototype.update = function(){\n"
"  this.velocity.add(this.acceleration);\n"
"  this.position.add(this.velocity);\n"
"};\n"
"\n"
"Particle.prototype.display = function() {\n"
"  stroke(0, 0, 0);\n"
"  fill(175, 175, 175);\n"
"  ellipse(this.position.x, this.position.y, 8, 8);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/a-single-particle</a>.
# Article is at (xd52f898d) on the bn stage.
# Article is at (xd52f898d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Particle.prototype.isDead = function() {\n"
"  if (this.timeToLive < 0) {\n"
"      return true;\n"
"  } else {\n"
"    return false;\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "> “A particle system is a collection of many many minute particles that together represent a fuzzy object. Over a period of time, particles are generated into a system, move and change from within the system, and die from the system.” —William Reeves, \"Particle Systems—A Technique for Modeling a Class of Fuzzy Objects,\" ACM Transactions on Graphics 2:2 (April 1983), 92\\."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As the quote described above, a particle system is a collection of simple objects. We've already dealt with programming collections of objects before - like arrays of Movers that simulate bouncing balls. But for particle systems, our collections are more complex. The collections will range in size: sometimes there will be zero particles, sometimes ten, sometimes ten thousand.  The collections themselves will have behavior and properties, not just the particles they're made up of. Our goal is to be able to write a program that looks like this:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In 1982, William T. Reeves, a researcher at Lucasfilm Ltd., was working on the film _Star Trek II: The Wrath of Khan_. Much of the movie revolves around the Genesis Device, a torpedo that when shot at a barren, lifeless planet has the ability to reorganize matter and create a habitable world for colonization. During the sequence, a wall of fire ripples over the planet while it is being “terraformed\":"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In figuring out how to program particle systems, we'll use two advanced object-oriented programming techniques: **_inheritance_** and **_polymorphism_**. With the examples we’ve seen up until now, we’ve always had an array of a single type of object, like \"movers\" or “oscillators.” With inheritance (and polymorphism), we’ll learn a convenient way to store a single array that contains objects of different types. This way, a particle system need not only be a system of a single type of particle."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "No single particle is referenced in that code, yet the result will be full of particles flying all over the screen. We'll create programs with multiple object types, and objects that keep track of other collections of objects, which will help us create powerful particle systems but also prepare us to write more powerful programs generally."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since the early 1980s, particle systems have been used in countless video games, animations, digital art pieces, and installations to model various irregular types of natural phenomena, such as fire, smoke, waterfalls, fog, grass, bubbles, and so on."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The term **_particle system_**, an incredibly common and useful technique in computer graphics, was coined in the creation of this particular effect."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This section will be dedicated to looking at implementation strategies for programming a particle system. How do we organize our code? Where do we store information related to individual particles versus information related to the system as a whole? The examples we’ll look at will focus on managing the data associated with a particle system. They’ll use simple shapes for the particles and apply only the most basic behaviors (such as gravity). However, by using this framework and building in more interesting ways to render the particles and compute behaviors, you can achieve a variety of effects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'll look at the most typical uses of particle systems in this section, but the fact that the particles in this chapter look or behave a certain way should not limit your imagination. Just because these particle systems tend to look sparkly, fly forward, and fall with gravity doesn’t mean that those are the characteristics yours should have. The focus here is really just how to keep track of a system of many elements. What those elements do and how those elements look is up to you."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/intro-to-particle-systems</a>.
# Article is at (x71d882c8) on the bn stage.
# Article is at (x71d882c8) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var ps = new ParticleSystem();\n"
"\n"
"draw = function() {\n"
"    background(255, 255, 255);\n"
"    ps.run();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Adding gravity"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Adding repellers"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Adding wind"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{F_g} = g m_2 \\hat{r} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ g = \\frac{Gm_1}{||r||^2} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  A `Repeller` object (declared, initialized, and displayed).\n"
"2.  A function that passes the `Repeller` object into the `ParticleSystem` so that it can apply a force to each particle object."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And now let’s look at the `update()` method:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And thus, we have a `Particle` object that can have force applied to it. Now, where should we call the `applyForce()` function? Where in the code is it appropriate to apply a force to a particle? The truth of the matter is that there’s no right or wrong answer; it really depends on the exact functionality and goals of a particular program. Still, we can create a generic situation that would likely apply to most cases and craft a model for applying forces to individual particles in a system."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Because the calculation of a repeller force is a little more complex than the calculation of gravity (and we might ultimately want multiple repellers!), we will solve this problem by incorporating a new Repeller object into our simple particle system plus gravity example. We’re going to need two major additions to our code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Gravity force: all the vectors have the same direction"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here it is, all together. Play around with the wind force and see how it affects the particle movement, and notice how particles of different mass respond differently. Think about why that is."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In code, that means that we will need to apply a different gravity force to each particle based on its mass. How can we do that? We can't re-use the existing `applyForce` function, because it expects the same force for each particle. We might consider passing a parameter to it that instructs `applyForce` to multiply by the mass, but let's leave that function alone and create a new function, `applyGravity`, which calculates force based on a global constant vector:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It almost seems silly to write this function. What we’re saying is “apply a force to a particle system so that the system can apply that force to all of the individual particles.” Nevertheless, it’s really quite reasonable. After all, the `ParticleSystem` object is in charge of managing the particles, so if we want to talk to the particles, we’ve got to talk to them through their manager."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's recall the equation for calculating the force of gravity between two masses:  $ \\vec{F_g} = \\frac{Gm_1m_2}{||r||^2} \\hat{r} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s consider the following goal: Apply a force globally every time through draw() to all particles. We’ll start with applying a simple wind-like force that pushes the particles to the right:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Making a displayable `Repeller` object is easy; it’s a duplicate of the `Attractor` object that we created earlier:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how throughout this entire process of adding a repeller to the environment, we’ve never once considered editing the `Particle` object itself. A particle doesn’t actually have to know anything about the details of its environment; it simply needs to manage its location, velocity, and acceleration, as well as have the ability to receive an external force and act on it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice that our acceleration is constant, it's never set beyond the constructor. A much better framework would be to follow Newton’s second law ($ \\vec{F} = M\\vec{A} $) and incorporate the force accumulation algorithm we worked so hard on in the Forces section."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now in code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now let's apply a more complex force, gravity, which is different from wind because it varies based on the mass of the objects its applied to."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, if we've done this correctly, all of our particles should fall at the same rate in the simulation below. That's because the force of gravity is based on multiplying the mass, but the acceleration is based on dividing by the mass, so in the end, the mass doesn't have an effect. It might seem silly to go through that much effort to not have an effect, but its important once we start combining multiple different forces."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, the force of gravity is just some constant g, times the mass of the particles, multiplied by a unit vector in the direction of the force (which will always be down):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Of course, if we call a new function on the `ParticleSystem` object in `draw()`, well, we have to write that function in the `ParticleSystem` object. Let’s describe the job that function needs to perform: receive a force as a `PVector` and apply that force to all the particles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once we have this, we can add in one more line of code to clear the acceleration at the end of `update()`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Remember that when we're modeling the force of gravity on earth, the force exerted by the earth overwhelms all other gravitational forces, so the only equation we're dealing with is to compute the force of gravity between the earth and the object.$ G $ and $ m_1 $ are the same for every particle, and $ r $(the radius from the earth) is basically the same (since earth's radius is so large compared to how little the particles move away from it), so we typically simplify those as simply g, the constant for gravity on earth:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Repeller force: all the direction vectors are different"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since we want all particles to receive the force, however, we can decide to apply the force to the particle system and let it manage applying the force to all the individual particles."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So far in this section, we’ve been focusing on structuring our code in an object-oriented way to manage a collection of particles. Maybe you noticed, or maybe you didn’t, but during this process we unwittingly took a couple steps backward from where we were in previous sections. Let’s examine the constructor of our simple Particle object:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So we can now look at this example in its entirety. Try changing the power of the forces acting on the particles - the gravity and the repeller - and see how that changes them:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The big difference here is that a new force is calculated for each particle, because, as we saw before, the force is different depending on properties of each particle in relation to the repeller. We calculate that force using the `calculateRepelForce` function, which is the inverse of the `calculateAttractionForce` function from our `Attractor`s."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first step is to add in an `applyForce()` method. (Remember, we need to make a copy of the `PVector` before we divide it by mass.)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The more difficult question is, how do we write the `applyRepeller()` method? Instead of passing a `PVector` into a function like we do with `applyForce()`, we’re going to instead pass a `Repeller` object into `applyRepeller()` and ask that function to do the work of calculating the force between the repeller and all particles:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We said it should always be applied, i.e. in `draw()`, so let’s take a look at our `draw()` function as it stands."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Well, it seems that we have a small problem. `applyForce()` is a method written inside the `Particle` object, but we don’t have any reference to the individual particles themselves, only the `ParticleSystem` object: the variable `particleSystem`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What if we wanted to take this example one step farther and add a repeller object that pushes particles away as they get close? It would be similar to the attractor object we created earlier, only pushing in the opposite direction. Once again, like gravity, we must calculate a different force for each particle, but in the case of the repeller, the difference is that the the calculation isn't based on mass, it's based on distance. For gravity, all of our force vectors had the same direction, but for the repeller, all the force vectors will have different directions:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"// A constant down vector, declared at the top\n"
"var gravity = new PVector(0, 0.2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Particle.prototype.applyForce = function(force) {\n"
"  var f = force.get();\n"
"  f.div(this.mass);\n"
"  this.acceleration.add(f);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Particle.prototype.update = function() {\n"
"  this.velocity.add(this.acceleration);\n"
"  this.position.add(this.velocity);\n"
"  this.acceleration.mult(0);\n"
"  this.timeToLive -= 2.0;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Particle.prototype.update = function(){\n"
"  this.velocity.add(this.acceleration);\n"
"  this.position.add(this.velocity);\n"
"  this.timeToLive -= 2;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"ParticleSystem.prototype.applyForce = function(f){\n"
"  for(var i = 0; i < this.particles.length; i++){\n"
"    this.particles[i].applyForce(f);\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"ParticleSystem.prototype.applyGravity = function() {\n"
"    for(var i = 0; i < this.particles.length; i++) {\n"
"        var particleG = gravity.get();\n"
"        particleG.mult(this.particles[i].mass);\n"
"        this.particles[i].applyForce(particleG);\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"ParticleSystem.prototype.applyRepeller = function(r) {\n"
"  for(var i = 0; i < this.particles.length; i++){\n"
"    var p = this.particles[i];\n"
"    var force = r.calculateRepelForce(p);\n"
"    p.applyForce(force);\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Repeller.prototype.calculateRepelForce = function(p) {\n"
"  // Calculate direction of force\n"
"  var dir = PVector.sub(this.position, p.position); \n"
"  // Distance between objects\n"
"  var d = dir.mag();\n"
"  // Normalize direction vector (distance doesn't matter here, we just want this vector for direction)\n"
"  dir.normalize();\n"
"  // Keep distance within a reasonable range\n"
"  d = constrain(d, 1, 100);    \n"
"  // Repelling force is inversely proportional to distance\n"
"  var force = -1 * this.power/ (d * d);     \n"
"  // Get force vector --> magnitude * direction\n"
"  dir.mult(force);                                  \n"
"  return dir;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"  background(168, 255, 156);\n"
"  particleSystem.addParticle();\n"
"  particleSystem.run();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"  background(168, 255, 156);\n"
"  particleSystem.applyForce(wind);\n"
"  particleSystem.addParticle();\n"
"  particleSystem.run();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Particle = function(position) {\n"
"  this.acceleration = new PVector(0, 0.05);\n"
"  this.velocity = new PVector(random(-1, 1), random(-1, 0));\n"
"  this.position = new PVector(position.x, position.y);\n"
"  this.timeToLive = 255.0;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Repeller = function(x, y) {\n"
"  this.position = new PVector(x, y);\n"
"};\n"
"\n"
"Repeller.prototype.display = function() {\n"
"  stroke(255);\n"
"  strokeWeight(2);\n"
"  fill(127);\n"
"  ellipse(this.position.x, this.position.y, 32, 32);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var particleSystem = new ParticleSystem(new PVector(width/2, 50));\n"
"var repeller = new Repeller(width/2-20, height/2);\n"
"var gravity = new PVector(0, 0.1);\n"
"\n"
"draw = function() {\n"
"  background(214, 255, 171);\n"
"\n"
"  // Apply gravity force to all Particles\n"
"  particleSystem.applyForce(gravity);\n"
"  particleSystem.applyRepeller(repeller);\n"
"  repeller.display();\n"
"  particleSystem.addParticle();\n"
"  particleSystem.run();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/019fb337a013ef602dd4c2780ab39dc35fd0e89d.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a9955c748dbffcaabc4f7fe0b9b7f3d4bc8ade6d.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# Article is at (x1fcfa7f9) on the bn stage.
# Article is at (x1fcfa7f9) on the pl stage.
# Article is at (x1fcfa7f9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "var wind = new PVector(0.4, 0);"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"// A constant down vector, declared at the top\n"
"var gravity = new PVector(0, 0.2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-systems-with-forces</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"ParticleSystem.prototype.applyRepeller = function(r) {\n"
"  for(var i = 0; i < this.particles.length; i++){\n"
"    var p = this.particles[i];\n"
"    var force = r.calculateRepelForce(p);\n"
"    p.applyForce(force);\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### A diverse ParticleSystem"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Adding rotation"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "All together now!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And just to give it a bit more spin, we can actually map the angle’s range from 0 to `TWO_PI*2`. Let’s look at how this code fits into the `display()` method."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "At this point, we have `Confetti` objects that act exactly the same way as `Particle` objects. The point of inheritance isn't to make duplicates, it's to make new objects that share a lot of functionality but also differ in some way. So, how is a `Confetti` object different? Well, just based on the name, it seems like it should look different. Our `Particle` objects are ellipses, but confetti is usually little bits of square paper, so at the very least, we should change the `display` method to show them as rectangles instead:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Feeling good about how inheritance works? Good, because we're going to use inheritance to make different types of `Particle` sub-objects, which share much of the same functionality but also differ in key ways."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a program with one `Particle` object instance and one `Confetti` object instance. Notice they behave similarly but differ in their appearance:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's how that looks - restart it a few time to see the effect of the rotation:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If the particles were in a vacuum,"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's review a simplified `Particle` implementation:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s make this a bit more sophisticated. Let’s say we want to have the `Confetti` particle rotate as it flies through the air. We could, of course, model angular velocity and acceleration as we did in the Oscillations section. Instead, we’ll try a quick and dirty solution."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Next, we create a new object type based on `Particle`, which we'll call `Confetti`. We'll start off with a constructor function that accepts the same number as arguments, and simply calls the `Particle` constructor, passing them along:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice that we have two separate arrays, one for particles and one for confetti. Every time we do something to the particles array, we have to do it to the confetti array! That's annoying, because it means we have to write twice as much code, and if we change something, we have to change it in two places. We could actually avoid this duplication, because we're allowed to store objects of different types in arrays in JavaScript, and because our objects have the same interface - we're calling the `run()` method, and both types of objects define that interface. So, we'll go back to just storing a single array, we'll randomly decide what type of particle object to add, and we'll go back to iterating through the single array. This is a much simpler change - all we end up modifying is the `addParticle` method:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now we're going to use more advanced object-oriented programming techniques like inheritance, so you may want to [review \"Inheritance\" in the Intro to JS course](/computing/cs/programming/object-oriented/p/object-inheritance) and come back. Don't worry, we'll wait!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, in order to make sure that our `Confetti` objects share the same methods as `Particle` objects, we need to specify that their prototype should be based on the `Particle` prototype:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, what we really want is to be able to create many `Particle` objects and many `Confetti` objects. That's what we made the `ParticleSystem` object for, so perhaps we can just extend it to also keep track of `Confetti` objects? Here's one way we could do that, copying what we did for the `Particle` objects:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That means that if we base the confetti rotation on the y position, the rotation will also be parabolic. This won't be too physically accurate since the actual rotation of confetti falling through the air is pretty complicated, but try it yourself and see how realistic it looks! Can you think of other functions which might look even more realistic?\""
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could also base the theta on the y position, which has a bit of a different effect. Why is that? Well, the particle has a non-zero constant acceleration in the y direction, which means that the y velocity is a linear function of time, and that the y position is actually a parabolic function of time. You can see what that means in the graphs below (which were generated based on the above program):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We know a particle has an x location somewhere between 0 and the width of the window. What if we said: when the particle’s x location is 0, its rotation should be 0; when its x location is equal to the width, its rotation should be equal to `TWO_PI`? Sound familiar? Whenever we have a value with one range that we want to map to another range, we can use the ProcessingJS `map()` function to easily compute the new value."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Confetti.prototype = Object.create(Particle.prototype);\n"
"Confetti.prototype.constructor = Confetti;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Confetti.prototype.display = function(){\n"
"  rectMode(CENTER);\n"
"  fill(0, 0, 255);\n"
"  stroke(0, 0, 0);\n"
"  strokeWeight(2);\n"
"  pushMatrix();\n"
"  translate(this.position.x, this.position.y);\n"
"  var theta = map(this.position.x, 0, width, 0, TWO_PI * 2);\n"
"  rotate(theta);\n"
"  rect(0, 0, 12, 12);\n"
"  popMatrix();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Confetti.prototype.display = function(){\n"
"  rectMode(CENTER);\n"
"  fill(0, 0, 255, this.timeToLive);\n"
"  stroke(0, 0, 0, this.timeToLive);\n"
"  strokeWeight(2);\n"
"  rect(0, 0, 12, 12);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Confetti = function(position) {\n"
"  Particle.call(this, position);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Particle = function(position) {\n"
"  this.acceleration = new PVector(0, 0.05);\n"
"  this.velocity = new PVector(random(-1, 1), random(-1, 0));\n"
"  this.position = position.get();\n"
"};\n"
"\n"
"Particle.prototype.run = function() {\n"
"  this.update();\n"
"  this.display();\n"
"};\n"
"\n"
"Particle.prototype.update = function(){\n"
"  this.velocity.add(this.acceleration);\n"
"  this.position.add(this.velocity);\n"
"};\n"
"\n"
"Particle.prototype.display = function() {\n"
"  fill(127, 127, 127);\n"
"  ellipse(this.position.x, this.position.y, 12, 12);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var ParticleSystem = function(position) {\n"
"  this.origin = position;\n"
"  this.particles = [];\n"
"  this.confettis = []; // SAD FACE!\n"
"};\n"
"\n"
"ParticleSystem.prototype.addParticle = function() {\n"
"    this.particles.push(new Particle(this.origin));\n"
"    this.particles.push(new Confetti(this.origin));\n"
"};\n"
"\n"
"ParticleSystem.prototype.run = function(){\n"
"  for (var i = this.particles.length-1; i >= 0; i--) {\n"
"    var p = this.particles[i];\n"
"    p.run();\n"
"  }\n"
"for (var i = this.confettis.length-1; i >= 0; i--) {\n"
"    var p = this.confettis[i]; p.run();\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var ParticleSystem = function(position) {\n"
"  this.origin = position;\n"
"  this.particles = [];\n"
"};\n"
"\n"
"ParticleSystem.prototype.addParticle = function() {\n"
"  var r = random(1);\n"
"  if (r < 0.5) {\n"
"    this.particles.push(new Particle(this.origin));\n"
"  } else {\n"
"    this.particles.push(new Confetti(this.origin));\n"
"  }\n"
"};\n"
"\n"
"ParticleSystem.prototype.run = function(){\n"
"  for (var i = this.particles.length-1; i >= 0; i--) {\n"
"    var p = this.particles[i];\n"
"    p.run();\n"
"    if (p.isDead()) {\n"
"      this.particles.splice(i, 1);\n"
"    }\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var theta = map(this.position.x, 0, width, 0, TWO_PI);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# Article is at (x207aa648) on the bn stage.
# Article is at (x207aa648) on the pl stage.
# Article is at (x207aa648) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a7e5f7015967fe506bab14816b9758be8e9ff83b.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/particle-types</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Particle = function(position) {\n"
"  this.acceleration = new PVector(0, 0.05);\n"
"  this.velocity = new PVector(random(-1, 1), random(-1, 0));\n"
"  this.position = position.get();\n"
"};\n"
"\n"
"Particle.prototype.run = function() {\n"
"  this.update();\n"
"  this.display();\n"
"};\n"
"\n"
"Particle.prototype.update = function(){\n"
"  this.velocity.add(this.acceleration);\n"
"  this.position.add(this.velocity);\n"
"};\n"
"\n"
"Particle.prototype.display = function() {\n"
"  fill(127, 127, 127);\n"
"  ellipse(this.position.x, this.position.y, 12, 12);\n"
"};\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   You start with a blank screen.\n"
"*   You click the mouse and generate a particle system at the mouse’s location.\n"
"*   Each time you click the mouse, a new particle system is created at the mouse’s location."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And in `draw()`, instead of referencing a single `ParticleSystem` object, we now look through all the systems in the array and call `run()` on each of them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How would we accomplish this in code? In the previous article, we stored a single reference to a `ParticleSystem` object in the variable `ps`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s review for a moment where we are. We know how to talk about an individual Particle object. We also know how to talk about a system of `Particle` objects, and this we call a “particle system.” And we’ve defined a particle system as a collection of independent objects. But isn’t a particle system itself an object? If that’s the case (which it is), there’s no reason why we couldn’t also have a collection of many particle systems, i.e. a system of systems."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have multiple systems, a potentially ever increasing number, we don't want to store them in individually named variables. Instead, we'll use an array to keep track of all the systems. We'll start it as empty when the program begins:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, try it yourself again, with the code we've written:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This line of thinking could of course take us even further, and you might lock yourself in a basement for days sketching out a diagram of a system of systems of systems of systems of systems of systems. Of systems. After all, this is how the world works. An organ is a system of cells, a human body is a system of organs, a neighborhood is a system of human bodies, a city is a system of neighborhoods, and so on and so forth. While this is an interesting road to travel down, it’s a bit beyond where we need to be right now. It is, however, quite useful to know how to write a program that keeps track of many particle systems, each of which keep track of many particles. Let’s take the following scenario:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Try it out yourself:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Whenever the mouse is pressed, a new `ParticleSystem` object is created and pushed onto the array:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"  background(50, 50, 50);\n"
"  for(var i = 0; i < systems.length; i++){\n"
"    systems[i].addParticle();\n"
"    systems[i].run();\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"mousePressed = function() {\n"
"  systems.push(new ParticleSystem(new PVector(mouseX, mouseY)));\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var ps = new ParticleSystem(new PVector(width/2, 50));\n"
"\n"
"draw = function() {\n"
"  background(50, 50, 50);\n"
"  ps.addParticle();\n"
"  ps.run();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# Article is at (x99106fe8) on the bn stage.
# Article is at (x99106fe8) on the pl stage.
# Article is at (x99106fe8) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var systems = [];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-particle-systems/a/systems-of-particle-systems</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"var ps = new ParticleSystem(new PVector(width/2, 50));\n"
"\n"
"draw = function() {\n"
"  background(50, 50, 50);\n"
"  ps.addParticle();\n"
"  ps.run();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "1.  Pick a random number: R1"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "2.  Compute a probability P that R1 should qualify. Let’s try: P = R1."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "3.  Pick another random number: R2"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "4.  If R2 is less than P, then we have found our number—R1!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "5.  If R2 is not less than P, go back to step 1 and start over."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Earlier in this section, we saw that we could generate custom probability distributions by filling an array with values (some duplicated so that they would be picked more frequently) or by testing the result of `random()`. We could implement a Lévy flight by saying that there is a 1% chance of the walker taking a large step."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.4"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here is a function (named after the [Monte Carlo method](http://en.wikipedia.org/wiki/Monte_Carlo_method), which itself was named after the [Monte Carlo casino](http://en.wikipedia.org/wiki/Monte_Carlo_Casino)) that implements the above algorithm, returning a random value between 0 and 1\\. This program uses the values to size ellipses , but we could use those values for many things."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here we are saying that the likelihood that a random value will qualify is equal to the random number itself. Let’s say we pick 0.1 for R1\\. This means that R1 will have a 10% chance of qualifying. If we pick 0.83 for R1 then it will have a 83% chance of qualifying. The higher the number, the greater the likelihood that we will actually use it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, this reduces the probabilities to a fixed number of options. What if we wanted to make a more general rule—the higher a number, the more likely it is to be picked? 3.145 would be more likely to be picked than 3.144, even if that likelihood is just a tiny bit greater. In other words, if `x` is the random number, we could map the likelihood on the y-axis with `y` = `x`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we can figure out how to generate a distribution of random numbers according to the above graph, then we will be able to apply the same methodology to any curve for which we have a formula."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One solution is to pick two random numbers instead of one. The first random number is just that, a random number. The second one, however, is what we’ll call a “qualifying random value.” It will tell us whether to use the first one or throw it away and pick another one. Numbers that have an easier time qualifying will be picked more often, and numbers that rarely qualify will be picked infrequently. Here are the steps (for now, let’s consider only random values between 0 and 1):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There will come a time in your life when you do not want a uniform distribution of random values, or a Gaussian one. Let’s imagine for a moment that you are a random walker in search of food. Moving randomly around a space seems like a reasonable strategy for finding something to eat. After all, you don’t know where the food is, so you might as well search randomly until you find it. The problem, as you may have noticed, is that random walkers return to previously visited locations many times (this is known as “oversampling”). One strategy to avoid such a problem is to, every so often, take a very large step. This allows the walker to forage randomly around a specific location while periodically jumping very far away to reduce the amount of oversampling. This variation on the random walk (known as a Lévy flight) requires a custom set of probabilities. Though not an exact implementation of a Lévy flight, we could state the probability distribution as follows: the longer the step, the less likely it is to be picked; the shorter the step, the more likely."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var r = random(1);\n"
"// A 1% chance of taking a large step\n"
"if (r < 0.01) {\n"
"  xstep = random(-100, 100);\n"
"  ystep = random(-100, 100);\n"
"} else {\n"
"  xstep = random(-1, 1);\n"
"  ystep = random(-1, 1);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# Article is at (x9f747b9d) on the bn stage.
# Article is at (x9f747b9d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c371829dc70c12501232531f2ad782319bc36ffa.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/custom-distribution-of-random-numbers</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var r = random(1);\n"
"// A 1% chance of taking a large step\n"
"if (r < 0.01) {\n"
"  xstep = random(-100, 100);\n"
"  ystep = random(-100, 100);\n"
"} else {\n"
"  xstep = random(-1, 1);\n"
"  ystep = random(-1, 1);\n"
"}\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Calculating Mean and Standard Deviation**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**_The mean is the average: 81.3_**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**_The standard deviation is the square root of the average variance: 15.13_**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A bell curve with a higher standard deviation"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A distribution of values that cluster around an average (referred to as the “mean”) is known as a “normal” distribution. It is also called the Gaussian distribution (named for mathematician Carl Friedrich Gauss) or, if you are French, the Laplacian distribution (named for Pierre-Simon Laplace). Both mathematicians were working concurrently in the early nineteenth century on defining such a distribution."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A standard bell curve"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Consider a class of ten students who receive the following scores (out of 100) on a test:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Does this accurately depict the heights of real-world beings? Think of a crowded sidewalk in New York City. Pick any person off the street and it may appear that their height is random. Nevertheless, it’s not the kind of random that `random()` produces. People’s heights are not uniformly distributed; there are a great deal more people of average height than there are very tall or very short ones. To simulate nature, we may want it to be more likely that our monkeys are of average height (250 pixels), yet still allow them to be, on occasion, very short or very tall."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Graph of a bell curve with a higher standard deviation"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Graph of a standard bell curve"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we want to produce a random number with a normal (or Gaussian) distribution each time we run through `draw()`, it’s as easy as calling the function `nextGaussian()`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's say we want to make that program that generates a world of monkeys. Your program could generate a thousand Monkey objects, each with a height value between 200 and 300 (as this is a world of monkeys that have heights between 200 and 300 pixels)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Luckily for us, to use a normal distribution of random numbers in a program here, we don't have to do any of these calculations ourselves. Instead, we can make use of the `Random` object provided by ProcessingJS."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Not familiar with the concept of \"standard deviation\"? Don't worry! You can study [Variance and standard deviation](/math/probability/descriptive-statistics/variance_std_deviation/v/range--variance-and-standard-deviation-as-measures-of-dispersion) separately on Khan Academy before continuing."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we can create our program that draws semi-transparent circles according to a normal distribution. The darkest spot will be near the center, where most of the values cluster, but every so often circles are drawn farther to the right or left of the center."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So, now, what are we supposed to do with this value? What if we wanted to use it, for example, to assign the x-position of a shape we draw on screen?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `nextGaussian()` function returns a normal distribution of random numbers with the following parameters: _a mean of zero_ and _a standard deviation of one_. Let’s say we want a mean of 200 (the center horizontal pixel in a window of width 400) and a standard deviation of 60 pixels. We can adjust the value to our parameters by multiplying it by the standard deviation and adding the mean."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The curve is generated by a mathematical function that defines the probability of any given value occurring as a function of the mean (often written as μ, the Greek letter _mu_) and standard deviation (σ, the Greek letter _sigma_)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The mean is pretty easy to understand. In the case of our height values between 200 and 300, you probably have an intuitive sense of the mean (i.e. average) as 250\\. However, what if I were to say that the standard deviation is 3 or 15? What does this mean for the numbers? Looking at graphs can give us a hint. The graph above shows us the distribution with a very low standard deviation, where the majority of the values cluster closely around the mean. The graph below shows us a higher standard deviation, where the values are more evenly spread out from the average:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The numbers work out as follows: Given a population, 68% of the members of that population will have values in the range of one standard deviation from the mean, 98% within two standard deviations, and 99.7% within three standard deviations. Given a standard deviation of 5 pixels, only 0.3% of the monkey heights will be less than 235 pixels (three standard deviations below the mean of 250) or greater than 265 pixels (three standard deviations above the mean of 250)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The standard deviation is calculated as the square root of the average of the squares of deviations around the mean. In other words, take the difference from the mean for each person and square it (variance). Calculate the average of all these values and take the square root as the standard deviation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This \"Natural Simulations\" course is a derivative of [\"The Nature of Code\"](http://natureofcode.com/book/) by Daniel Shiffman, used under a [Creative Commons Attribution-NonCommercial 3.0 Unported License](http://creativecommons.org/licenses/by-nc/3.0/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To use `Random`, we must first instantiate a new `Random` object, passing in 1 as the parameter. We call that variable \"generator\" because what we've created can be basically thought of as a random number generator."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to understand standard deviation better? You can study [Variance and standard deviation](/math/probability/descriptive-statistics/variance_std_deviation/v/range--variance-and-standard-deviation-as-measures-of-dispersion) in more depth here on Khan Academy."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you graph the distribution, you get something that looks like the following, informally known as a bell curve:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_85, 82, 88, 86, 85, 93, 98, 40, 73, 83_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var generator = new Random(1);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var num = generator.nextGaussian();\n"
"println(num);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var randomHeight = random(200, 300);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var standardDeviation = 60;\n"
"var mean = 200;\n"
"var x = standardDeviation * num + mean;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/cc06304e38d77bb2707aa071ecd919e962c72ec5.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d79236df8c65f5c26b29960ccd4630128c165bdf.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# Article is at (x43d90868) on the bn stage.
# Article is at (x43d90868) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Score | Difference from Mean | Variance |\n"
"| --- | --- | --- |\n"
"| 85 | $ 85 - 81.3 $ = 3.7 | $ (3.7)^2 $ = 13.69 |\n"
"| 82 | $ 82 - 81.3 $ = 0.7 | $ (0.7)^2 $ = 0.49 |\n"
"| 88 | $ 88 - 81.3 $ = 6.7 | $ (6.7)^2 $ = 44.89 |\n"
"| etc. | ...  | ...  |\n"
"|   | **Average Variance:** | 228.81 |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var generator = new Random(1);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var num = generator.nextGaussian();\n"
"println(num);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var randomHeight = random(200, 300);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/normal-distribution-of-random-numbers</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var standardDeviation = 60;\n"
"var mean = 200;\n"
"var x = standardDeviation * num + mean;\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   _between 0.00 and 0.60 (60%) –> Outcome A_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   _between 0.60 and 0.70 (10%) –> Outcome B_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   _between 0.70 and 1.00 (30%) –> Outcome C_​__"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   _chance of moving down: 20%_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   _chance of moving left: 20%_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   _chance of moving right: 40%_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   _chance of moving up: 20%_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**(1/2) * (1/2) * (1/2) = 1/8 (or 0.125)**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**number of aces / number of cards = 4 / 52 = 0.077 = ~ 8%**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**number of diamonds / number of cards = 13 / 52 = 0.25 = 25%**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you have a system with a certain number of possible outcomes, the probability of the occurrence of a given event equals the number of outcomes that qualify as that event divided by the total number of all possible outcomes. A coin toss is a simple example—it has only two possible outcomes, heads or tails. There is only one way to flip heads. The probability that the coin will turn up heads, therefore, is one divided by two: 1/2 or 50%."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s pause here and take a look at probability’s basic principles. First we’ll examine single event probability, i.e. the likelihood that a given event will occur."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Remember when you first started programming here? Perhaps you wanted to draw a lot of circles on the screen. So you said to yourself: “Oh, I know. I’ll draw all these circles at random locations, with random sizes and random colors.” In a computer graphics system, it’s often easiest to seed a system with randomness. In these lessons, however, we’re looking to build systems modeled on what we see in nature. Defaulting to randomness is not a particularly thoughtful solution to a design problem—particularly the kind of problem that involves creating an organic or natural-looking simulation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Running this code will produce a 40% chance of printing the value 1, a 20% chance of printing 2, and a 40% chance of printing 3."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Take a deck of fifty-two cards. The probability of drawing an ace from that deck is:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The probability of a coin turning up heads three times in a row is:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The probability of drawing a diamond is:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are a couple of ways in which we can use the `random()` function with probability in code. One technique is to fill an array with a selection of numbers—some of which are repeated—then choose random numbers from that array and generate events based on those choices."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This method can also be applied to multiple outcomes. Let’s say that Outcome A has a 60% chance of happening, Outcome B, a 10% chance, and Outcome C, a 30% chance. We implement this in code by picking a random number and seeing into what range it falls."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to review probability before continuing? Study [compound events](/math/cc-seventh-grade-math/cc-7th-probability-statistics/cc-7th-compound-events/e/compound-events) and [dependent probability](/math/cc-seventh-grade-math/cc-7th-probability-statistics/cc-7th-dependent-probability/e/dependent_probability)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can also ask for a random number (let’s make it simple and just consider random decimal values between 0 and 1) and allow an event to occur only if our random number is within a certain range. Check out the example below, and keep clicking restart until the randomly picked number is finally less than the threshold:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can also calculate the probability of multiple events occurring in sequence. To do this, we simply multiply the individual probabilities of each event."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could use the above methodology to create a random walker that tends to move to the right. Here is an example of a `Walker` with the following probabilities:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "With a few tricks, we can change the way we use `random()` to produce “non-uniform” distributions of random numbers. This will come in handy throughout this course as we look at a number of different scenarios. When we examine genetic algorithms, for example, we’ll need a methodology for performing “selection”—which members of our population should be selected to pass their DNA to the next generation? Remember the concept of survival of the fittest? Let’s say we have a population of monkeys evolving. Not every monkey will have an equal chance of reproducing. To simulate Darwinian evolution, we can’t simply pick two random monkeys to be parents. We need the more “fit” ones to be more likely to be chosen. We need to define the “probability of the fittest.” For example, a particularly fast and strong monkey might have a 90% chance of procreating, while a weaker one has only a 10% chance."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_​_ Click the restart button to see how often you get different outcomes:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/probability-non-uniform-distributions</a>.
# Article is at (xe975d857) on the bn stage.
# Article is at (xe975d857) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "…meaning that a coin will turn up heads three times in a row one out of eight times (each “time” being three tosses)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Improving the Random Walker"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### The Random Walker Object"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "All of these variations on the “traditional” random walk have one thing in common: at any moment in time, the probability that the `Walker` will take a step in a given direction is equal to the probability that the `Walker` will take a step in any direction. In other words, if there are four possible steps, there is a 1 in 4 (or 25%) chance the Walker will take any given step. With nine possible steps, it’s a 1 in 9 (or 11.1%) chance."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An **_object_** in JavaScript is a data type that has both properties and functionality attached to it, via its prototype. We are looking to design a `Walker` object that both keeps track of its data (where it exists on the screen) and has the capability to perform certain actions (such as draw itself or take a step)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Are the bars all the same height, after a few minutes of running? Probably not. Our sample size (i.e. the number of random numbers we’ve picked) is rather small and there are some occasional discrepancies, where certain numbers are picked more often. Over time, with a good random number generator, this would even out."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we go into the complexities of vectors and physics-based motion, let's think what it means for something to simply move around the screen. Let’s begin with one of the best-known and simplest simulations of motion—the random walk."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Conveniently, this is how the `random()` function works. Its random number generator produces what is known as a “uniform” distribution of numbers. We can test this distribution with a program that counts each time a random number is picked and graphs it as the height of a rectangle:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure I.1"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Imagine you are standing in the middle of a balance beam. Every ten seconds, you flip a coin. Heads, take a step forward. Tails, take a step backward. This is a random walk—a path defined as a series of random steps. Stepping off that balance beam and onto the floor, you could perform a random walk in two dimensions by flipping that same coin twice with the following results:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In addition to keeping track of its x and y, our `Walker` object will also have methods that we can call on it. The first will be a method that allows the object to display itself as a black dot. Remember that we add methods to an object in JavaScript by attaching them to the object's `prototype`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In order to create instances of `Walker`s, we need to define a `Walker` object. We'll use that object as the cookie cutter, and each new `Walker` instance are the cookies."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the next section, we'll talk about different ways that we can create walkers with \"tendencies\" to walk in certain directions. Before you dive into that, there's a challenge that awaits you!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's begin by defining the `Walker` object type. The `Walker` only needs two pieces of data—a number for its x-location and one for its y-location. We'll set those in its constructor function, setting them to the center of the canvas."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's review a bit of object-oriented programming (OOP) first by building a `Walker` object. This will be only a cursory review. If you have never worked with OOP before, you should go through the section on [Object-Oriented JavaScript](/cs/programming/object-oriented)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we've written the class, it's time to make an actual `Walker` object in our program. Assuming we are looking to model a single random walk, we declare and initialize one global variable of type `Walker`, by calling the constructor function with the new operator."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, to make the walker actually do something, we define the `draw()` function, and tell the walker to take a step and draw itself each time that's called:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since we don't call `background()` in the draw function, we can see the trail of the random walk on our canvas:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Taking this further, we could use a decimal for `x` and `y` instead and move according to an arbitrary random value between -1 and 1 - if our environment could actually display the difference between \"2.2\" and \"2.4\":"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The above line of code picks a random floating point number between 0 and 4 and converts it to a whole number by using `floor()`, with a result of 0, 1, 2, or 3\\. Technically speaking, the highest number will never be 4.0, but rather 3.999999999 (with as many 9s as there are decimal places); since `floor()` returns the closest whole number that is lesser or equal, the highest result we can get is 3\\. Next, we take the appropriate step (left, right, up, or down) depending on which random number was picked."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The random numbers we get from the `random()` function are not truly random; therefore they are known as **“pseudo-random.”** They are the result of a mathematical function that simulates randomness. This function would yield a pattern over time, but that time period is so long that for us, it’s just as good as pure randomness!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The second method directs the `Walker` object to take a step. Now, this is where things get a bit more interesting. Remember that floor on which we were taking random steps? Well, now we can use our canvas in that same capacity. There are four possible steps. A step to the right can be simulated by incrementing `x` (`x++`); to the left by decrementing `x` (`x--`); forward by going down a pixel (`y++`); and backward by going up a pixel (`y--`). How do we pick from these four choices? Earlier we stated that we could flip two coins. In ProcessingJS, however, when we want to randomly choose from a list of options, we can pick a random number using `random()`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are a couple improvements we could make to the random walker. For one, this walker’s step choices are limited to four options—up, down, left, and right. But any given pixel in the window has eight possible neighbors, and a ninth possibility is to stay in the same place."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To implement a `Walker` object that can step to any neighboring pixel (or stay put), we could pick a number between 0 and 8 (nine possible choices). However, a more efficient way to write the code would be to simply pick from three possible steps along the x-axis (-1, 0, or 1) and three possible steps along the y-axis."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Yes, this may seem like a particularly unsophisticated algorithm. Nevertheless, random walks can be used to model phenomena that occur in the real world, from the movements of molecules in a gas to the behavior of a gambler spending a day at the casino. As for us, we begin this topic by studying a random walk with three goals in mind."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Walker.prototype.display = function() {\n"
"    stroke(0, 0, 0);\n"
"    point(this.x, this.y);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Walker.prototype.walk = function() {\n"
"    var choice = floor(random(4));\n"
"    if (choice === 0) {\n"
"        this.x++;\n"
"    } else if (choice === 1) {\n"
"        this.x--;\n"
"    } else if (choice === 2) {\n"
"        this.y++;\n"
"    } else {\n"
"        this.y--;\n"
"    } \n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Walker.prototype.walk = function() {\n"
"    var choice = floor(random(4));\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Walker.prototype.walk = function() {\n"
"  var stepx = floor(random(3))-1;\n"
"  var stepy = floor(random(3))-1;\n"
"  this.x += stepx;\n"
"  this.y += stepy;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Walker.prototype.walk = function() {\n"
"  var stepx = random(-1, 1);\n"
"  var stepy = random(-1, 1);\n"
"  this.x += stepx;\n"
"  this.y += stepy;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"    w.walk();\n"
"    w.display();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Walker = function() {\n"
"    this.x = width/2;\n"
"    this.y = height/2;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var w = new Walker();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/f581ccefe05a2755b00a76e6d9cb9e134912637f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# Article is at (xd9727fb3) on the bn stage.
# Article is at (xd9727fb3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Flip 1 | Flip 2 | Result |\n"
"| --- | --- | --- |\n"
"| Heads | Heads | Step forward. |\n"
"| Heads | Tails | Step right. |\n"
"| Tails | Heads | Step left. |\n"
"| Tails | Tails | Step backward. |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"draw = function() {\n"
"    w.walk();\n"
"    w.display();\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Walker.prototype.walk = function() {\n"
"    var choice = floor(random(4));\n"
"    if (choice === 0) {\n"
"        this.x++;\n"
"    } else if (choice === 1) {\n"
"        this.x--;\n"
"    } else if (choice === 2) {\n"
"        this.y++;\n"
"    } else {\n"
"        this.y--;\n"
"    } \n"
"};\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Walker.prototype.walk = function() {\n"
"    var choice = floor(random(4));\n"
"};\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Walker = function() {\n"
"    this.x = width/2;\n"
"    this.y = height/2;\n"
"};\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-randomness/a/random-walks</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var w = new Walker();\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   `dx = mouseX - x`\n"
"*   `dy = mouseY - y`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  Calculate a vector that points from the object to the target location (mouse)\n"
"2.  Normalize that vector (reducing its length to 1)\n"
"3.  Scale that vector to an appropriate value (by multiplying it by some value)\n"
"4.  Assign that vector to acceleration"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Anytime we want to calculate a vector based on a rule or a formula, we need to compute two things: **_magnitude_** and **_direction_**. Let’s start with direction. We know the acceleration vector should point from the object’s location towards the mouse location. Let’s say the object is located at the point `(x,y)` and the mouse at `(mouseX,mouseY)`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of dx, dy"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of mouse acceleration vector"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what the program looks like, with those steps fully implemented:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In order to set the magnitude (whatever it may be) of our acceleration PVector, we must first \\_\\_\\_ that direction vector. That’s right, you said it. _Normalize_. If we can shrink the vector down to its unit vector (of length one) then we have a vector that tells us the direction and can easily be scaled to any value. One multiplied by anything equals anything."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In that diagram, we see that we can get a vector `(dx,dy)` by subtracting the object’s location from the mouse’s location.:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s rewrite the above using `PVector` syntax. Assuming we are in the `Mover` object definition and thus have access to the object’s `PVector` location, we then have:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s see what this example would look like with an array of movers (rather than just one)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This example is remarkably close to the concept of gravitational attraction (in which the object is attracted to the mouse location). Gravitational attraction will be covered in more detail in the next section. However, one thing missing here is that the strength of gravity (magnitude of acceleration) is inversely proportional to distance. This means that the closer the object is to the mouse, the faster it accelerates."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To finish out this section, let’s try something a bit more complex and a great deal more useful. We’ll dynamically calculate an object’s acceleration according to a rule stated in Algorithm #3 — _the object accelerates towards the mouse._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To summarize, we take the following steps:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We now have a `PVector` that points from the mover’s location all the way to the mouse. If the object were to actually accelerate using that vector, it would appear instantaneously at the mouse location. This does not make for good animation, of course, and what we want to do now is decide how quickly that object should accelerate toward the mouse."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You may be wondering why the circle doesn’t stop when it reaches the target. It’s important to note that the object moving has no knowledge about trying to stop at a destination; it only knows where the destination is and tries to go there as quickly as possible. Going as quickly as possible means it will inevitably overshoot the location and have to turn around, again going as quickly as possible towards the destination, overshooting it again, and so on and so forth. Stay tuned; in later sections we’ll learn how to program an object to **_arrive_** at a location (slow down on approach)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var anything = ??;\n"
"dir.normalize();\n"
"dir.mult(anything);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var mouse = new PVector(mouseX, mouseY);\n"
"// Look! We’re using the static sub() because we want a completely new PVector\n"
"var dir = PVector.sub(mouse, location);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/31202eadc0da5225ffbdb389eea4260c7e7f2177.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# Article is at (xecd398be) on the bn stage.
# Article is at (xecd398be) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/4491bd8c5be81253cb8b4b71b92b7fe73a5e9b22.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]In that diagram, we see that we can get a vector `(dx,dy)` by subtracting the object’s location from the mouse’s location.:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/interactive-vector-motion</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var mouse = new PVector(mouseX, mouseY);\n"
"// Look! We’re using the static sub() because we want a completely new PVector\n"
"var dir = PVector.sub(mouse, location);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Programming with `PVector`"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Vector Addition"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Why use vectors?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"$ \\text{w}_x = 5 + 3\\\\  \n"
"\\text{w}_y = 2 + 4 $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"$ \\text{w}_x = 8\\\\  \n"
"\\text{w}_y = 6 $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"$ \\text{w}_x = \\text{u}_x + \\text{v}_x\\\\  \n"
"\\text{w}_y = \\text{u}_y + \\text{v}_y $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{w} = (8, 6) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{w} = \\vec{u} + \\vec{v} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   Scalar: $ x$ ​ $ $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   Vector: $ \\vec{u} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**_new location = velocity applied to current location_**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A diagram of a vector with magnitude and direction"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A vector is typically drawn as an arrow; the direction is indicated by where the arrow is pointing, and the magnitude by the length of the arrow itself."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And now we're ready to rewrite the bouncing ball example using the `PVector` object! Take a look through the code and note the differences from before."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And so this …"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As an introduction to vectors, we’re going to live in two dimensions. All of these examples can be fairly easily extended to three dimensions (and the object we will use—`PVector`—allows for three dimensions.) However, it’s easier to start with just two."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "At its core, a `PVector` is just a convenient way to store two values (or three, as we’ll see in 3D examples)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we continue looking at the `PVector` object and its `add()` method, let’s examine vector addition using the notation found in math and physics textbooks."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we dive into more of the details about vectors, let’s look at a basic program that demonstrates why we should care about vectors in the first place. If you went through the introductory JS course here on Khan Academy, you probably, at one point or another, learned how to write a simple bouncing ball program."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of 2 vectors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of location as a vector"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagram of using a vector to predict new location"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Diagrams of vectors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Each vector has two components, an `x` and a `y`. To add two vectors together, we simply add both `x`’s and both `y`’s.   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.1: A vector (drawn as an arrow) has magnitude (length of arrow) and direction (which way it is pointing)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.2"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.3"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.4"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.5"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.6"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Finally, we write that as a vector:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For every frame:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here are some vectors and possible translations:   "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, in JavaScript, the addition operator + is reserved for primitive values (numbers, strings) only. In some programming languages, operators can be \"overloaded\", but not in JavaScript. Fortunately for us, the `PVector` object includes methods for common mathematical operations, like `add()`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If velocity is a vector (the difference between two points), what is location? Is it a vector too? Technically, one might argue that location is not a vector, since it’s not describing how to move from one point to another—it’s simply describing a singular point in space."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In a more advanced program, we could imagine having many more variables:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In an ideal world, we would be able to rewrite the above as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In other words:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the above example, we have a very simple world—a blank canvas with a circular shape (a “ball”) traveling around. This ball has some properties, which are represented in the code as variables."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the above illustration, the vector is drawn as an arrow from point A to point B and serves as an instruction for how to travel from A to B."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Instead of:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It’s becoming clearer that for every concept in this world (wind, location, acceleration, etc.), we’ll need two variables. And this is only a two-dimensional world. In a 3D world, we’ll need `x`, `y`, `z`, `xspeed`, `yspeed`, `zspeed`, and so on."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s examine the underlying data for both location and velocity. In the bouncing ball example, we had the following:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s say I have the following two vectors:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Nevertheless, another way to describe a location is the path taken from the origin to reach that location. Hence, a location can be the vector representing the difference between location and origin.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how we are storing the same data for both—two floating point numbers, an `x` and a `y`. If we were to write a vector class ourselves, we’d start with something rather basic:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we have two vector objects (location and velocity), we’re ready to implement the algorithm for motion—**_location = location + velocity_**. In Example 1.1, without vectors, we had:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we see how `add()` is written inside of `PVector`, we can return to our bouncing ball example with its **_location + velocity_** algorithm and implement vector addition:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that we understand how to add two vectors together, we can look at how addition is implemented in the `PVector` object itself. Let’s write a method called `add()` that takes another `PVector` object as its argument, and simply adds the x and y components together."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, the word vector can mean a lot of different things. Vector is the name of a New Wave rock band formed in Sacramento, CA in the early 1980s. It’s the name of a breakfast cereal manufactured by Kellogg’s Canada. In the field of epidemiology, a vector is used to describe an organism that transmits infection from one host to another. In the C++ programming language, a vector (std::vector) is an implementation of a dynamically resizable array data structure. While all these definitions are interesting, they’re not what we’re looking for. What we want is called a **_Euclidean vector_** (named for the Greek mathematician Euclid and also known as a geometric vector). When you see the term “vector” in this course, you can assume it refers to a Euclidean vector, defined as _an entity that has both magnitude and direction_."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, you might feel somewhat disappointed. After all, this change to using vectors may initially appear to have made the code more complicated than the original version. While this is a perfectly reasonable and valid critique, it’s important to understand that we haven’t fully realized the power of programming with vectors just yet. Looking at a simple bouncing ball and only implementing vector addition is just the first step. As we move forward into a more complex world of multiple objects and multiple **_forces_** (which we’ll introduce soon), the benefits of `PVector` will become more apparent. Keep going!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One way to think of a vector is the difference between two points. Consider how you might go about providing instructions to walk from one point to another."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Taking this first step in using vectors won’t allow us to do anything new. Just using vector-like objects for your variables won’t magically make your program simulate physics. However, they will simplify your code and provide a set of functions for common mathematical operations that happen over and over and over again while programming motion."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `ellipse()` function does not allow for a `PVector` as an argument. An ellipse can only be drawn with two scalar values, an x-coordinate and a y-coordinate. And so we must dig into the `PVector` object and pull out the x and y components using object-oriented dot notation instead:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The same issue arises when testing if the circle has reached the edge of the window, and we need to access the individual components of both vectors: `location` and `velocity`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then, replacing `u` and `v` with their values from Figure 1.6, we get:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This course is all about looking at the world around us and coming up with clever ways to simulate that world with code. We will start by looking at basic physics—how an apple falls from a tree, how a pendulum swings in the air, how the earth revolves around the sun, etc. Everything that we'll discuss here requires the use of the most basic building block for programming motion—the **_vector_**. And so this is where we begin our story."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Vectors are typically written either in boldface type or with an arrow on top. For the purposes of these lessons, to distinguish a **_vector_** from a **_scalar_** (_scalar_ refers to a single value, such as an integer or a floating point number), we’ll use the arrow notation:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could simply have two variables, where each variable is a vector-like object with two dimensions of information:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We should note an important aspect of the above transition to programming with vectors. Even though we are using `PVector` objects to describe two values—the x and y of location and the x and y of velocity—we still often need to refer to the x and y components of each PVector individually. When we go to draw an object in ProcessingJS, there’s no means for us to say:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Wouldn’t it be nice if we could simplify our code and use fewer variables?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You’ve probably done this before when programming motion. For every frame of animation (i.e. a single cycle through ProcessingJS’s draw() loop), you instruct each object on the screen to move a certain number of pixels horizontally and a certain number of pixels vertically.  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"ellipse(location, 16, 16);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"ellipse(location.x, location.y, 16, 16);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"if ((location.x > width) || (location.x < 0)) {\n"
"  velocity.x = velocity.x * -1;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"location = location + velocity;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"location.add(velocity);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Vector = function(x, y) {\n"
"    this.x = x;\n"
"    this.y = y;\n"
"};\n"
"\n"
"Vector.prototype.add = function(v) {\n"
"  this.y = this.y + v.y;\n"
"  this.x = this.x + v.x;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Vector = function(x, y) {\n"
"    this.x = x;\n"
"    this.y = y;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var location = new PVector(100,100);\n"
"var velocity = new PVector(1,3.3);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var location;\n"
"var speed;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 100;\n"
"var y = 100;\n"
"var xspeed = 1;\n"
"var yspeed = 3.3;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 5;\n"
"var y = 10;\n"
"var xspeed;\n"
"var yspeed;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"x = x + xspeed;\n"
"y = y + yspeed;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "becomes …"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "can be written as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/2276479f68e971c0eee3f6e7c350104ff0ab036f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/3f3ef0e270aa3d7e9d1769580527de5de1c69882.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/60b0a7768992ead88f8fe12d834a1310d6dbcb27.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a106d0482f2e2a9850946b5c709676d443ff11de.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a540b898af1848f5bb69838877b9665ed26cca8d.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/cea7e8e3d45aea8046f5f6dfffd7a46575bb70b2.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "which means that:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| (-15, 3) | _Walk fifteen steps west; turn and walk three steps north._ |\n"
"| (3, 4) | _Walk three steps east; turn and walk four steps north._ |\n"
"| (2, -1) | _Walk two steps east; turn and walk one step south._ |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Acceleration | Target location | Wind | Friction |\n"
"|-|-|-|-|\n"
"|_xacceleration and yacceleration_ |  _xtarget and ytarget_ |  _xwind and ywind_ | _xfriction and yfriction_ |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Location | Velocity |\n"
"|-|-|\n"
"|  _x and y_ | _xspeed and yspeed_ |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# Article is at (xfaed5db4) on the bn stage.
# Article is at (xfaed5db4) on the pl stage.
# Article is at (xfaed5db4) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Location | Velocity |\n"
"|-|-|\n"
"| _x and y_ |  _xspeed and yspeed_ |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "A vector is typically drawn as a arrow; the direction is indicated by where the arrow is pointing, and the magnitude by the length of the arrow itself."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Vector = function(x, y) {\n"
"    this.x = x;\n"
"    this.y = y;\n"
"};\n"
"\n"
"Vector.prototype.add = function(v) {\n"
"  this.y = this.y + v.y;\n"
"  this.x = this.x + v.x;\n"
"};\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| (-15, 3) | _Walk fifteen steps west; turn and walk three steps north._ |\n"
"| (3, 5) | _Walk three steps east; turn and walk five steps north._ |\n"
"| (2, -1) | _Walk two steps east; turn and walk one step south._ |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Acceleration | _xacceleration and yacceleration_ |\n"
"| Target location | _xtarget and ytarget_ |\n"
"| Wind | _xwind and ywind_ |\n"
"| Friction | _xfriction and yfriction_ |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Location | _x and y_ |\n"
"| Velocity | _xspeed and yspeed_ |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Vector Multiplication"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Vector Subtraction"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"$ \\text{w}_x = \\text{u}_x - \\text{v}_x $  \n"
"$ \\text{w}_y = \\text{u}_y - \\text{v}_y $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{u} = (-3, 7) \\\\ n = 3 \\\\ \\vec{w} = \\vec{u} * n \\\\ w_x = -3 * 3 \\\\ w_y = 7 * 3 \\\\ \\vec{w} = (-9, 21) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\vec{w} = \\vec{u} - \\vec{v} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`add()`](/cs/pvectoraddx-y/4680458877009920) — add vectors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`angleBetween()`](/cs/pvectoranglebetweenvector1-vector2/4710652671164416) — find the angle between two vectors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`cross()`](/cs/pvectorcrossvector2/5878216673722368) — the cross product of two vectors (only relevant in three dimensions)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`dist()`](/cs/pvectordistvector2/6714040302698496) — the Euclidean distance between two vectors (considered as points)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`div()`](/cs/pvectordivscalar/5699034798882816) — scale the vector with division"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`dot()`](/cs/pvectordotvector2/6710687904563200) — the dot product of two vectors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`heading2D()`](/cs/pvectorheading2d/6258447752364032) — the 2D heading of a vector expressed as an angle"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`limit()`](/cs/pvectorlimitmax/5261465007161344) — limit the magnitude of a vector"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`mag()`](/cs/pvectormag/6169252021141504) — calculate the magnitude of a vector"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`mult()`](/cs/pvectormultscalar/5129600115933184) — scale the vector with multiplication"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`normalize()`](/cs/pvectornormalize/6036855854202880) — normalize the vector to a unit length of 1"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   [`sub()`](/cs/pvectorsubx-y/5417370977828864) — subtract vectors"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Basic Number Properties with Vectors**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**More Number Properties with Vectors**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Addition was really just the first step. There are many mathematical operations that are commonly used with vectors. Below is a comprehensive list of the operations available as functions in the `PVector` object from ProcessingJS. We’ll go through a few of the key ones now. As our examples get more sophisticated in later sections, we’ll continue to reveal the details of more functions."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And this is how we can use it in code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And using `mult` in code is as simple as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As with addition, basic algebraic rules of multiplication apply to vectors."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Having already covered addition, let’s start with subtraction. This one’s not so bad; just take the plus sign and replace it with a minus!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's the example from earlier, but we multiple the vector by .5 each time, so that it's scaled by half:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Instead of multiplying by 0.5 above, we could have also divided by 2. Division works just like multiplication—we simply replace the multiplication sign (asterisk) with the division sign (forward slash)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s look at an example with vector notation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Moving on to multiplication, we have to think a little bit differently. When we talk about multiplying a vector, what we typically mean is **_scaling_** a vector. If we wanted to scale a vector to twice its size or one-third of its size (leaving its direction the same), we would say: “Multiply the vector by 2” or “Multiply the vector by 1/3.” Note that we are multiplying a vector by a scalar, a single number, not another vector."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Scaling a vector"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The associative rule: $ (3+2)+1=3+(2+1) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The associative rule: $ (n * m) * \\vec{v} = n * (m * \\vec{v}) $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The associative rule: $ \\vec{u} + (\\vec{v} + \\vec{w})= (\\vec{u} + \\vec{v}) + \\vec{w} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The commutative rule: $ 3+2=2+3 $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The commutative rule: $ \\vec{u} + \\vec{v}= \\vec{v} + \\vec{u} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The distributive rule with 2 scalars, 1 vector: $ (n * m) * \\vec{v} = n * \\vec{v} + m * \\vec{v} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The distributive rule with 2 vectors, 1 scalar: $ (\\vec{u} + \\vec{v}) * n = \\vec{u} * n + \\vec{v} * n $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The following example demonstrates vector subtraction by taking the difference between two points—the mouse location and the center of the window."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Therefore, the function inside the PVector object is written as:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is how the div method is implemented internally:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Those same rules are true of math with vectors:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"To scale a vector, we multiply each component (x and y) by a scalar.  \n"
"$ \\vec{w} = \\vec{u} * n $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Vector Subtraction"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to practice your vector math? You can learn more here on Khan Academy, in our [Linear Algebra: Vectors](/math/linear-algebra/vectors_and_spaces/vectors/v/vector-introduction-linear-algebra) unit."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we're doing math with real numbers, they obey these basic rules:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector u = new PVector(8,-4);\n"
"u.div(2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.div = function(n) {\n"
"   this.x = this.x / n;\n"
"   this.y = this.y / n;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.mult = function(n) {\n"
"   this.x = this.x * n;\n"
"   this.y = this.y * n;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.sub = function(vector2) {\n"
"    this.x = this.x - vector2.x;\n"
"    this.y = this.y - vector2.y;\n"
"  };\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var u = new PVector(-3,7);\n"
"// This PVector is now three times the size and is equal to (-9,21).\n"
"u.mult(3);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "and so the function inside PVector looks like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"can be written as:  \n"
"$ w_x = u_x * n \\\\ w_y = u_y * n $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/47db86a049c63709b2c63106054cb8b3c44f8ca6.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# Article is at (x387c2fb0) on the bn stage.
# Article is at (x387c2fb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/75406852074accadc8ad7c85b50987a06997f558.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "<div class=\"callout\">Want to practice your vector math? You can learn more here on Khan Academy, in our [Linear Algebra: Vectors](/math/linear-algebra/vectors_and_spaces/vectors/v/vector-introduction-linear-algebra) unit.</div>"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "Instead of multiplying by 0.5 above, we could have also divided by 2\\. Division works just like multiplication—we simply replace the multiplication sign (asterisk) with the division sign (forward slash)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Let’s look at an example with vector notation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector u = new PVector(8,-4);\n"
"u.div(2);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.sub = function(vector2) {\n"
"    this.x = this.x - vector2.x;\n"
"    this.y = this.y - vector2.y;\n"
"  };\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   We define the function directly on the object, _not on its prototype_\n"
"*   We never access the `this` keyword inside the function\n"
"*   We return a value from the function"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "...we see that this code does not accomplish our goal. First, it does not return a new `PVector` (there is no `return` statement) and second, it changes the value of the `PVector` upon which it is called. In order to add two `PVector` objects together and return the result as a new `PVector`, we must use the \"static\" `add()` function."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A \"static\" function is a function that is defined on an object, but it doesn't change properties of the object. So why even define it on the object? Typically, it has something to do with the object, so it is logical to attach it to it. It treats the object more like a namespace. For example, all the static functions on `PVector` perform some sort of manipulation on passed in `PVector` objects and always return back some value. We could define those functions globally as well, but this way, we avoid global functions and have better ways of grouping related functionality."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before we get to Algorithm #3 (accelerate towards the mouse), we need to cover one more rather important aspect of working with vectors and the `PVector` object: the difference between using static functions and instance methods."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Forgetting about vectors for a moment, take a look at the following code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's how we would write the static version of `add()`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we didn't save the result of that function into a variable, that line of code would be useless, because the static version doesn't change the objects themselves. `PVector`'s static functions allow us to perform generic mathematical operations on `PVector` objects without having to adjust the value of one of the input `PVectors`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's contrast. Here's how we use the `add()` instance method:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s take a look at another example of some simple math:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Pretty simple, right? `x` has the value of 0, we add `y` to it, and now `x` is equal to 5\\. We could write the corresponding code pretty easily based on what we’ve learned about `PVector`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That line of code would modify `v`, so we wouldn't need to save a return value. Conversely, here's how we use the `add()` static function:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The PVector object has static versions of `add()`, `sub()`, `mult()`, and `div()`. It also has additional static functions that don't exist as instance methods, like `angleBetween()`, `dot()`, and `cross()`. We'll find ourselves using these functions as we continue making programs with `PVector`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The above might seem like a good guess, but it’s just not the way the `PVector` object works. If we look at the definition of `add()`..."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The vector v has the value of (0,0), we add u to it, and now v is equal to (4,5). Easy, right?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are several differences here:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.add = function(v1, v2) {\n"
"  var v3 = new PVector(v1.x + v2.x, v1.y + v2.y);\n"
"  return v3;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.add = function(v) {\n"
"    this.x = this.x + v.x;\n"
"    this.y = this.y + v.y;\n"
" };\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"v.add(u);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var v = new PVector(0,0);\n"
"var u = new PVector(4,5);\n"
"v.add(u);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var v = new PVector(0,0);\n"
"var u = new PVector(4,5);\n"
"var w = v.add(u); // Don’t be fooled; this is incorrect!!!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var w = PVector.add(v, u);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 0;\n"
"var y = 5;\n"
"var z = x + y;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 0;\n"
"var y = 5;\n"
"x = x + y;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# Article is at (xb8015853) on the bn stage.
# Article is at (xb8015853) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "`x` has the value of 0, we add `y` to it, and store the result in a new variable `z`. The value of `x` does not change in this example, and neither does y! This may seem like a trivial point, and one that is quite intuitive when it comes to mathematical operations with numbers. However, it’s not so obvious with mathematical operations in `PVector`. Let’s try to write the code based on what we know so far."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/static-functions-vs-instance-methods</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 0;\n"
"var y = 5;\n"
"x = x + y;\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ \\hat{u} = \\dfrac{\\vec{u}}{||\\vec{u}||} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "$ ||\\vec{v}|| = \\sqrt{v_x * v_x + v_y * v_y} $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Armed with this formula, we can now compute the magnitude of $ \\vec{v} $ as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Calculating the magnitude of a vector is only the beginning. The magnitude function opens the door to many possibilities, the first of which is **_normalization_**. Normalizing refers to the process of making something “standard” or, well, “normal.” In the case of vectors, let’s assume for the moment that a standard vector has a length of 1\\. To normalize a vector, therefore, is to take a vector of any length and, keeping it pointing in the same direction, change its length to 1, turning it into what is called a **_unit vector_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figure 1.10: The length or “magnitude” of a vector $ \\vec{v} $  is often written as: $ ||\\vec{v}|| $"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For any given vector $ \\vec{u} $, its unit vector (written as $ \\hat{u} $) is calculated as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a program where we always normalize the vector that represents the mouse position from the center (and then multiply it so we can see it, since 1 pixel is tiny!):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In other words, to normalize a vector, simply divide each component by its magnitude. This is pretty intuitive. Say a vector is of length 5\\. Well, 5 divided by 5 is 1\\. So, looking at our right triangle, we then need to scale the hypotenuse down by dividing by 5\\. In that process the sides shrink, divided by 5 as well."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the PVector object, we therefore write our normalization function as follows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Multiplication and division, as we just saw, are means by which the length of the vector can be changed without affecting direction. Perhaps you’re wondering: “OK, so how do I know what the length of a vector is? I know the components (`x` and `y`), but how long (in pixels) is the actual arrow?” Understanding how to calculate the length (also known as **_magnitude_**) of a vector is incredibly useful and important."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice in the above diagram how the vector, drawn as an arrow and two components (`x` and `y`), creates a right triangle. The sides are the components and the hypotenuse is the arrow itself. We’re very lucky to have this right triangle, because once upon a time, a Greek mathematician named Pythagoras developed a lovely formula to describe the relationship between the sides and hypotenuse of a right triangle."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Of course, there’s one small issue. What if the magnitude of the vector is 0? We can’t divide by 0! Some quick error checking will fix that right up:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since it describes a vector’s direction without regard to its length, it’s useful to have the unit vector readily accessible. We’ll see this come in handy once we start to work with forces in the next section."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The Pythagorean theorem is $ a $ squared plus $ b $ squared equals $ c $ squared."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The code for implementing in the `PVector` object would thus be:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The following example visualizes the magnitude of a vector with a bar at the top:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.mag = function() {\n"
"    return sqrt(this.x*this.x + this.y*this.y);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.normalize = function() {\n"
"  var m = this.mag();\n"
"  if (m > 0) {\n"
"    this.div(m);\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PVector.prototype.normalize = function() {\n"
"  var m = this.mag();\n"
"  this.div(m);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/653fdc7d4773c0b2844af3ed51e42debd6b4cb5f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/6ade290db694921cc465883fb070d8a1dbb3447e.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/9150ff25c140f6abd6da845d59533880324158a9.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-magnitude-normalization</a>.
# Article is at (xe27aefb0) on the bn stage.
# Article is at (xe27aefb0) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/f400c601f9a8be82ce642b4d0fc6f4962802bbd9.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Acceleration"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Velocity"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Add velocity to location\n"
"*   Draw object at location"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   What data does a mover have?\n"
"*   What functionality does a mover have?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  _A constant acceleration_\n"
"2.  _A totally random acceleration_\n"
"3.  _Acceleration towards the mouse_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "1.  scaling the acceleration to a constant value:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "2.  scaling the acceleration to a random value:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Algorithm #1, _a constant acceleration_, is not particularly interesting, but it is the simplest and will help us begin incorporating acceleration into our code."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "All this vector math stuff sounds like something we should know about, but why? How will it actually help us write code? The truth of the matter is that we need to have some patience. It will take some time before the awesomeness of using the `PVector` class fully comes to light. This is actually a common occurrence when first learning a new data structure. For example, when you first learn about an array, it might seem like much more work to use an array than to just have several variables stand for multiple things. But that plan quickly breaks down when you need a hundred, or a thousand, or ten thousand things. The same can be true for `PVector`. What might seem like more work now will pay off later, and pay off quite nicely. And you don’t have to wait too long, as your reward will come in the next chapter."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And then we draw the object at that location:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As an exercise, from this point forward, let’s make a rule for ourselves. Let’s write every example in the rest of these tutorials without ever touching the value of velocity and location (except to initialize them). In other words, our goal now for programming motion is: Come up with an algorithm for how we calculate acceleration and let the trickle-down effect work its magic. (In truth, you’ll find reasons to break this rule, but it’s important to illustrate the principles behind our motion algorithm.) And so we need to come up with some ways to calculate acceleration:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Because the random vector is a normalized one, we can try scaling it with two different techniques:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For now, however, we want to focus on simplicity. What does it mean to program motion using vectors? We’ve seen the beginning of this in [the bouncing ball example](/computer-programming/bouncing-ball-with-pvector/6734144616792064). An object on screen has a location (where it is at any given moment) as well as a velocity (instructions for how it should move from one moment to the next). Velocity is added to location:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's the full running example. Try playing around with the numbers, commenting out code, and seeing what happens:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If object-oriented programming is at all new to you, one aspect here may seem a bit confusing. After all, we spent the beginning of this chapter discussing `PVector`. The `PVector` object is the template for making the location object and the velocity object. So what are they doing inside of yet another object, the `Mover` object? In fact, this is just about the most normal thing ever. An object is simply something that holds data (and functionality). That data can be numbers, strings, arrays or other objects! We’ll see this over and over again in this course. For example, in the Particles tutorial, we’ll write an object to describe a system of particles. That `ParticleSystem` object will have as its data an array of `Particle` objects…and each `Particle` object will have as its data several `PVector` objects!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the bouncing ball example, all of this code happened inside the ProcessingJS's `draw` function. What we want to do now is move towards encapsulating all of the logic for motion inside of an **_object_**. This way, we can create a foundation for programming moving objects in all of our ProcessingJS programs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In this case, we’re going to create a generic Mover object that will describe a thing moving around the screen. And so we must consider the following two questions:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Its functionality is just about as simple. The Mover needs to move and it needs to be seen. We’ll implement these needs as methods named `update()` and `display()`. We’ll put all of our motion logic code in `update()` and draw the object in `display()`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s finish off the `Mover` object by incorporating a function to determine what the object should do when it reaches the edge of the window. For now let’s do something simple, and just have it wrap around the edges:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let’s take a look at the changes to the `Mover` object, complete with `acceleration` and `limit()`:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice above that we also started the velocity at 0 - because we know we'll be speeding it up as the program runs, thanks to acceleration. We'll do that in the `update()` method:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now on to Algorithm #2, _a totally random acceleration_. In this case, instead of initializing acceleration in the object’s constructor, we want to pick a new acceleration each cycle, i.e. each time `update()` is called."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that the `Mover` object is finished, we can look at what we need to do in our main program. We first declare and initialize new Mover instance:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "OK. At this point, we should feel comfortable with two things: (1) what a `PVector` is and (2) how we use `PVector`s inside of an object to keep track of its location and movement. This is an excellent first step and deserves a mild round of applause. Before standing ovations and screaming fans, however, we need to make one more, somewhat bigger step forward. After all, watching the Motion 101 example is fairly boring—the circle never speeds up, never slows down, and never turns. For more interesting motion, for motion that appears in the real world around us, we need to add one more `PVector` to our `Mover` object—acceleration."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our Motion 101 algorithm tells us the answers to these questions. A `Mover` object has two pieces of data: `location` and `velocity`, which are both `PVector` objects. We can start by writing the constructor function that initializes those properties to appropriate random values:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since we are continuously increasing velocity, we run the risk of our velocity values becoming incredibly large, if we leave the program running long enough. We want to limit the velocity to a maximum. We can do that using the `PVector` [`limit`](/cs/pvectorlimitmax/5261465007161344) method, which restricts a vector to a given magnitude."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first thing we need to do is add another `PVector` property to the `Mover` constructor to represent the acceleration. We'll initialize it to $ (-0.001, 0.01) $ and keep it at that value forever, since our current algorithm is _constant_ acceleration. You might be thinking, “Gosh, those values seem awfully small!” That’s right, they are quite tiny. It’s important to realize that our acceleration values (measured in pixels) will accumulate over time in the velocity, about thirty times per second depending on our sketch’s frame rate. And so to keep the magnitude of the velocity vector within a reasonable range, our acceleration values should start and remain quite small."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The strict definition of acceleration we’re using here is: the rate of change of velocity. Let’s think about that definition for a moment. Is this a new concept? Not really. Velocity is defined as the rate of change of location. In essence, we are developing a “trickle-down” effect. Acceleration affects velocity, which in turn affects location (for some brief foreshadowing, this point will become even more crucial in the next chapter, when we see how forces affect acceleration, which affects velocity, which affects location). In code, this reads:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then we call the appropriate functions in `draw`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is Motion 101:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"This translates to the following:  \n"
"_What is the magnitude of velocity? If it’s less than 10, no worries; just leave it as is. If it’s more than 10, however, reduce it to 10!_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "While this may seem like an obvious point, it’s crucial to understand that acceleration does not merely refer to the _speeding up_ or _slowing down_ of a moving object, but rather any change in velocity in either magnitude or direction. Acceleration is used to steer an object, and we’ll see this again and again in future chapters as we begin to program objects that make decisions about how to move about the screen."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    acceleration = PVector.random2D();\n"
"    acceleration.mult(0.5);\n"
"    ```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"    acceleration = PVector.random2D();\n"
"    acceleration.mult(random(2));\n"
"    ```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.checkEdges = function() {\n"
"\n"
"  if (this.position.x > width) {\n"
"    this.position.x = 0;\n"
"  } \n"
"  else if (this.position.x < 0) {\n"
"    this.position.x = width;\n"
"  }\n"
"\n"
"  if (this.position.y > height) {\n"
"    this.position.y = 0;\n"
"  } \n"
"  else if (this.position.y < 0) {\n"
"    this.position.y = height;\n"
"  }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.update = function() {\n"
"  this.acceleration = PVector.random2D();\n"
"  this.velocity.add(this.acceleration);\n"
"  this.velocity.limit(10);\n"
"  this.position.add(this.velocity);  \n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.update = function() {\n"
"  this.position.add(this.velocity);\n"
"};\n"
"\n"
"Mover.prototype.display = function() {\n"
"  stroke(0);\n"
"  strokeWeight(2);\n"
"  fill(127);\n"
"  ellipse(this.position.x, this.position.y, 48, 48);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.update = function() {\n"
"  this.velocity.add(this.acceleration);\n"
"  this.position.add(this.velocity);  \n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Mover.prototype.update = function() {\n"
"  this.velocity.add(this.acceleration);\n"
"  this.velocity.limit(10);\n"
"  this.position.add(this.velocity);  \n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"draw = function() {\n"
"  background(255, 255, 255);\n"
"\n"
"  mover.update();\n"
"  mover.checkEdges();\n"
"  mover.display(); \n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"ellipse(location.x,location.y,16,16);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Mover = function() {\n"
"  this.position = new PVector(random(width), random(height));\n"
"  this.velocity = new PVector(random(-2, 2), random(-2, 2));\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Mover = function() {\n"
"  this.position = new PVector(width/2,height/2);\n"
"  this.velocity = new PVector(0, 0);\n"
"  this.acceleration = new PVector(-0.001, 0.01);\n"
"  this.topspeed = 10;  \n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var mover = new Mover();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion">http://translate.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/vector-motion</a>.
# Article is at (xd3aedd63) on the bn stage.
# Article is at (xd3aedd63) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"velocity.add(acceleration);\n"
"location.add(velocity);\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>
# Title of tutorial article (x79d13d25) on the bn stage
# Title of tutorial article (x79d13d25) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "What are animations?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But now we live in the future! We can make a better animation programmatically in a few minutes with only a dozen lines of code, like this one:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Congrats on learning how to make drawings with your programming skills! Now you'll learn how to turn those drawings into animations, with only a few more lines of code."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "First, though, let's talk about what an animation is. How could you make an animation without programming?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It probably took a while to make that animation, though, and well, it's not that great. It's pretty shaky and it has no color at all. "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Pencil-and-paper animation of a car going down the street"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Programmed animation of a red car going down the street"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Want to learn how to program that? Keep going!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You could make a bunch of drawings on pieces of paper, then flip those pieces of paper so the drawings go by in a sequence, and it would look like an animation. Well, it'd look like an animation if those drawings were each just a little bit different from each other. For example, check out this pencil-and-paper animation of a car driving down the street:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d1e0c882458033c01fc8484273a2c3ed603a1614.gif"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations">http://translate.khanacademy.org/computing/computer-programming/programming/animation-basics/a/what-are-animations</a>.
# Article is at (x79d13d25) on the bn stage.
# Article is at (x79d13d25) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/ee003989849e8651e7fac24a79fc9683498690f0.gif"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>
# Title of tutorial article (xee3da0df) on the bn stage
# Title of tutorial article (xee3da0df) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: Arrays"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "After running that line of code, our array length property will change to reflect the new length, and the final index in the array will be 4 instead of 3."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Arrays can be changed in many ways. To start off with, we can change a value in them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you want a full list of what you can do with arrays in JavaScript, check out this [reference](http://www.w3schools.com/jsref/jsref_obj_array.asp). But don't worry, everything in this review will get you very far!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how we put `i` inside the square brackets, because it represents the current index each time the loop is run."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The second element is at index \"1\", the third is at index \"2\", and the fourth is at index \"3\":"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The zero-based indexing is one of the most confusing aspects of arrays for new programmers, so keep that in mind if you're just getting started with arrays. You'll get used to it eventually!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To create an array, we declare a variable like we always do, but then we surround our list of values with square brackets and separate each value with a comma:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can also add entirely new values to them, using the `[push()](http://www.w3schools.com/jsref/jsref_push.asp)` method, passing in the new value:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can store any sort of JavaScript value in an array - not just numbers. Here's an example where we store a list of strings:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often want to display the length of an array, or do something based on the length of the array. Thankfully, every array has a `length` property that will tell us the current length of the array:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often want to store lists of values when we're creating programs, and in JavaScript, we can do that using a type of value called an **_array_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often want to take some action for every element in an array, like how we used the text() command to display the names above. Instead of writing that code over and over, it's better to use a for loop to iterate through each of the elements in the array, and do something to each element inside the loop. We have to start from index 0, go until we reach the end of the array, and add 1 to the index each time. Here's how we'd do that:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we want to access a particular value in an array, we access it by referencing its \"index\" in the array, which represents its position. The first index in an array is \"0\", so if we want to access the first element in an array, we specify the name of the array variable, then square brackets, and 0:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_This is a review of what we covered in this tutorial on arrays._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var i = 0; i < myFriends.length; i++) {\n"
"   text(myFriends[i], 200, i*100);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"myFriends.push(\"Hopper\");\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"myFriends[1] = \"TheErrorBuddy\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(myFriends.length, 200, 200); // Displays \"4\"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(myFriends[0], 200, 0); // Displays \"Winston\"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(myFriends[1], 200, 100); // Displays \"OhNoesGuy\"\n"
"text(myFriends[2], 200, 200); // Displays \"John\"\n"
"text(myFriends[3], 200, 300); // Displays \"Sophia\"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myFriends = ['Winston', 'OhNoesGuy', 'John', 'Sophia'];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# Article is at (xee3da0df) on the bn stage.
# Article is at (xee3da0df) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var xPositions = [33, 72, 64];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays">http://translate.khanacademy.org/computing/computer-programming/programming/arrays/a/review-arrays</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(myFriends[1], 200, 100); // Displays \"OhNoesGuy\"\n"
"text(myFriends[2], 200, 200); // Displays \"John\"\n"
"text(myFriends[3], 200, 300); // Displays \"Sophia\"\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking">http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking</a>.
# Article is at (x92862546) on the bn stage.
# Article is at (x92862546) on the pl stage.
# Article is at (x92862546) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Click anywhere in the numbers to get the color picker to pop up. Then, click on the right hand color bar to change the general color you're picking, and click in the left hand side to change the lightness/brightness of the color. You'll get to try it in the next challenge!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking">http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking</a>.
# Article is at (x92862546) on the bn stage.
# Article is at (x92862546) on the pl stage.
# Article is at (x92862546) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the last talk-through, we explored how to use the color picker to easily find a color. Since you can't see the color picker in action in our talk-throughs, here's a GIF of it being used:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking">http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking</a>.
# Article is at (x92862546) on the bn stage.
# Article is at (x92862546) on the pl stage.
# Article is at (x92862546) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Recording of the color picker being used to change the background color."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking">http://translate.khanacademy.org/computing/computer-programming/programming/coloring/a/quick-tip-color-picking</a>.
# Article is at (x92862546) on the bn stage.
# Article is at (x92862546) on the pl stage.
# Article is at (x92862546) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/f3349c07ced434ab53561b647183a347348b01fa.gif"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>
# Title of tutorial article (xb43537b0) on the bn stage
# Title of tutorial article (xb43537b0) on the pl stage
# Title of tutorial article (xb43537b0) on the pt stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "More debugging tips"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Exaggerate your output**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Print debugging**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Rubber-duck debugging**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "As we just showed, you can insert [`$ \\text{print()} $`](/computer-programming/printdata/5110798099677184)s or [`$ \\text{println()} $`](/computer-programming/printlndata/6120466259378176)s into your code to help you figure out which code is being called and with what values. Both of these functions output values in a console that pops up over the canvas. You can also use [`$ \\text{debug()} $`](/computer-programming/debugarg1-arg2/939146973) to send the output to your browser's JavaScript console, if you know how to use that."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's the closest thing we have to a rubber duck in the Khan Academy office:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's a good idea to get comfortable with all your options for debugging programs so that you can use whichever one works the best in a particular situation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Photo of stuffed Oh Noes guy next to a laptop"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of program with exaggerated strokeWeight()"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Screenshot of using the print console in a program"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since you're making programs in ProcessingJS, you're dealing with lots of fill colors and strokes. When I'm not seeing the visual output I expect, sometimes it helps to use really big or extreme values for the fill and strokes—like `$ \\text{strokeWeight(30)} $`. Since our environment is realtime and includes the number scrubbers, it's really easy to change up the numbers in your program to see what effect the change has on the output. For example, it might help you figure out where a missing shape went."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Sit a rubber duck next to your computer—or whatever duck-like object you have handy—and explain your program and problem to it, line by line. Many programmers find that just the process of putting the problem in words helps their brains realize what's wrong. You can also ask a friend or teacher to be your rubber duck, sitting and listening to you explain it. Sometimes they might even think of a solution for you, but regardless, they're doing you a service by just listening to the explanation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are many ways to debug your programs! Here's a list to get you started:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/4ed11141d70074275dd975ca6267aac19f06f950.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/521c9f82e3e1be598260ff05addbb3b83854a0e2.jpg"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the bn stage.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/a3dc39981d3746e6b0de997d6e507a6b21012ec8.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As we just showed, you can insert [`print()`](/computer-programming/printdata/5110798099677184)s or [`println()`](/computer-programming/printlndata/6120466259378176)s into your code to help you figure out which code is being called and with what values. Both of these functions output values in a console that pops up over the canvas. You can also use [`debug()`](/computer-programming/debugarg1-arg2/939146973) to send the output to your browser's JavaScript console, if you know how to use that."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# Article is at (xb43537b0) on the pl stage.
# Article is at (xb43537b0) on the pt stage.
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since you're making programs in ProcessingJS, you're dealing with lots of fill colors and strokes. When I'm not seeing the visual output I expect, sometimes it helps to use really big or extreme values for the fill and strokes—like `strokeWeight(30)`. Since our environment is realtime and includes the number scrubbers, it's really easy to change up the numbers in your program to see what effect the change has on the output. For example, it might help you figure out where a missing shape went."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips">http://translate.khanacademy.org/computing/computer-programming/programming/debugging-programs/a/more-debugging-tips</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "As we just showed, you can insert [`$ \\text{print()} $`](https://www.khanacademy.org/computer-programming/printdata/5110798099677184)s or [`$ \\text{println()} $`](https://www.khanacademy.org/computer-programming/printlndata/6120466259378176)s into your code to help you figure out which code is being called and with what values. Both of these functions output values in a console that pops up over the canvas. You can also use [`$ \\text{debug()} $`](https://www.khanacademy.org/computer-programming/debugarg1-arg2/939146973) to send the output to your browser's JavaScript console, if you know how to use that."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing">http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing</a>
# Title of tutorial article (x84855443) on the bn stage
# Title of tutorial article (x84855443) on the pl stage
# Title of tutorial article (x84855443) on the sr stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Quick tip: number scrubbing"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing">http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing</a>.
# Article is at (x84855443) on the bn stage.
# Article is at (x84855443) on the pl stage.
# Article is at (x84855443) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "GIF showing the use of the number scrubber to change the width and height of eyes in an illustration"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing">http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing</a>.
# Article is at (x84855443) on the bn stage.
# Article is at (x84855443) on the pl stage.
# Article is at (x84855443) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the last talk-through, you learned how to use the \"number scrubber\" to quickly try out different numbers. Since you can't see the way the cursor moves to change the number scrubber in the talk-through, here's a GIF that shows the motion:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing">http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing</a>.
# Article is at (x84855443) on the bn stage.
# Article is at (x84855443) on the pl stage.
# Article is at (x84855443) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You click on the number, then click and drag on the arrows that pop up above it. Number scrubbing is great because of how easy it makes experimentation. Try it out in the challenge!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing">http://translate.khanacademy.org/computing/computer-programming/programming/drawing-basics/a/quick-tip-number-scrubbing</a>.
# Article is at (x84855443) on the bn stage.
# Article is at (x84855443) on the pl stage.
# Article is at (x84855443) on the sr stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sr)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/f355a90f2107023b0e7f3cf0be73d95a59052e9a.gif"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>
# Title of tutorial article (x81428b6b) on the bn stage
# Title of tutorial article (x81428b6b) on the pl stage
# Title of tutorial article (x81428b6b) on the pt stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: Functions"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And then call it like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And then we could call it whenever we wanted, as many times as we wanted!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And then we would have called it like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Every programming language is different, but for JavaScript, it's important to know that variables have \"function scope\" - a function can see the local variables that were declared inside of it and the global variables that were declared outside of it, but it cannot see the local variables inside other functions."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, what if we wanted to be able to say exactly where we want the message displayed, just like we can say exactly where we want to draw rect()s and ellipse()s? We could imagine calling it like so, to put the message at two precise coordinates:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Functions with return values are quite useful for manipulating data in programs, and they can be combined together in expressions, too:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It really depends on what you want your functions to do, and how much you want to customize what they can do. You can always start off with no arguments, and then add more as you realize you need them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that you know how to create functions that wrap around blocks of code, we have to bring up an important concept: **_local variables_** versus **_global variables_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, if all we do is declare the function, nothing will happen. In order for the program to execute the code that's inside the function, we actually have to \"call\" the function, by writing its name followed by empty parentheses:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, you've actually been calling functions this whole time - that's how you've been making drawings and animations - like with `rect`, `ellipse`, `triangle`, etc. All of those functions are ones that come from the ProcessingJS library, and we load them into every program that you make here, so that you can always use them. We've defined the functions for you, because we thought they'd be useful, and now it's up to you to decide what custom functions you want to use in your own programs. For example, we provide the `ellipse` function, but we don't provide a `cat` function - if your program involves a lot of different cats in different locations, maybe you should create your own cat function!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our functions can accept any number of arguments - zero, one, two, or more. We could have also decided that we wanted to change our function to accept a name to say hello to:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The **_return statement_** does two things: it gives a value back to whoever called it (which is why we could store it in the `sum` variable), and it immediately exits the function. That means it'd be silly if we had something like this, because that last line would never get executed:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The arguments that get passed in basically become like variables inside your function definition, and the names depend on what you call them in the parentheses. We could just as easily rename them to something shorter:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There's another powerful thing we can do with functions - we can use them to take in some values, compute them, and return a new value. Think about all the things you can do with a calculator - add values, subtract, calculate square root, multiply, etc. All of those would be done with functions that took in the input and output the result. The functions would take in the input as arguments and output the result using a **_return statement_**. Here's a function that adds two numbers and returns the result:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To create a function, we must first declare it and give it a name, the same way we'd create any variable, and then we follow it by a function definition:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To make that work, we need to change our `sayHello` function definition so it knows that it will receive 2 arguments, and then uses them inside:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could combine those ideas, and have it accept three arguments, for the name and position:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could put any code inside that function - one statement, multiple statements - depends on what we want to do. In this function, we could just output a message at a random location:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often want to be able to customize functions, to tell the program \"well, do all of this code, but change a few things about how you do it.\" That way we have code that is both reusable *and* flexible, the best of both worlds. We can achieve that by specifying \"arguments\" for a function, using those arguments to change how the function works, and passing them in when we call the function."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often want to be able to re-execute blocks of code when we are writing programs, without having to re-write the block of code entirely. We need a way of grouping code together and giving it a name, so that we can call it by that name later, and that's what we call a **_function_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we declare a new variable *inside* a function, we say that it is local to that function. That's because only that function can see that variable - the rest of the program outside of it cannot. Once we're outside that function, it's like it no longer exists. In the following function, `localResult` is a local variable:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we declare a variable outside our functions, we say that it is a global variable. That's because all functions can now access it and do whatever they want with it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we run that code, we'll get an error on the final line: \"localResult is not defined.\" The variable is only defined inside the function, because that's where we declared it with the `var localResult =` line, and is not defined outside of it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we run the above code, we will not get an error, because we declared `globalResult` outside of the function, so we can access it wherever we want."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can even call functions inside function calls, although that can get hard to read at times:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_This is a review of what we covered in this tutorial on functions._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"sayHello(\"Winston\");\n"
"sayHello(\"Pamela\");\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"sayHello(\"Winston\", 10, 100);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"sayHello();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"sayHello();\n"
"sayHello();\n"
"sayHello();\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"sayHello(50, 100);\n"
"sayHello(150, 200);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var addNumbers = function(num1, num2) {\n"
"  var localResult = num1 + num2;\n"
"  println(\"The local result is: \" + localResult);\n"
"  return localResult;\n"
"};\n"
"addNumbers(5, 7);\n"
"println(localResult); // oh noes!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var addNumbers = function(num1, num2) {\n"
"  var result = num1 + num2;\n"
"  return result;\n"
"  result = result * 2; // silly!\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var addNumbers = function(num1, num2) {\n"
"  var result = num1 + num2;\n"
"  return result;\n"
"};\n"
"\n"
"var sum = addNumbers(5, 2);\n"
"text(sum, 200, 200); // Displays \"7\"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var biggerSum = addNumbers(2, 5) + addNumbers(3, 2);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var globalResult;\n"
"\n"
"var addNumbers = function(num1, num2) {\n"
"  globalResult = num1 + num2;\n"
"  println(\"The global result is: \" + globalResult);\n"
"};\n"
"addNumbers(5, 7);\n"
"println(globalResult);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var hugeSum = addNumbers(addNumbers(5, 2), addNumbers(3, 7));\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var sayHello = function() {\n"
"   text(\"Halllllllo!\", random(200), random(200));\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var sayHello = function() {\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var sayHello = function(name) {\n"
"   text(\"Halllllllo, \" + name, random(200), random(200));\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var sayHello = function(name, x, y) {\n"
"   text(\"Halllllllo \" + name, x, y);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var sayHello = function(x, y) {\n"
"   text(\"Halllllllo!\", x, y);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# Article is at (x81428b6b) on the bn stage.
# Article is at (x81428b6b) on the pl stage.
# Article is at (x81428b6b) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var sayHello = function(xPos, yPos) {\n"
"   text(\"Halllllllo!\", xPos, yPos);\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "<pre>var biggerSum = addNumbers(2, 5) + addNumbers(3, 2);</pre>"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, you've actually been calling functions this whole time- that's how you've been making drawing and animations - like with `rect`, `ellipse`, `triangle`, etc. All of those functions are ones that come from the ProcessingJS library, and we load them into every program that you make here, so that you can always use them. We've defined the functions for you, because we thought they'd be useful, and now it's up to you to decide what custom functions you want to use in your own programs. For example, we provide the `ellipse` function, but we don't provide a `cat` function - if your program involves a lot of different cats in different locations, maybe you should create your own cat function!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var addNumbers = function(num1, num2) {\n"
"  var localResult = num1 + num2;\n"
"  println(\"The local result is: \" + localResult);\n"
"  return localResult;\n"
"};\n"
"addNumbers(5, 7);\n"
"println(localResult); // oh noes!\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions">http://translate.khanacademy.org/computing/computer-programming/programming/functions/a/review-functions</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var globalResult;\n"
"\n"
"var addNumbers = function(num1, num2) {\n"
"  globalResult = num1 + num2;\n"
"  println(\"The global result is: \" + globalResult);\n"
"};\n"
"addNumbers(5, 7);\n"
"println(globalResult);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "# Learning more"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Learn more JavaScript"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Learn more ProcessingJS"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Learn more on Khan Academy"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Learn new languages"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Learn web development"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Review: JavaScript"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Review: ProcessingJS"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Work on a big project"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Python**: used for webservers and data processing. Learn it on [Codecademy](http://www.codecademy.com/tracks/python), [Treehouse](http://teamtreehouse.com/), or with this [interactive online textbook](http://interactivepython.org/courselib/static/thinkcspy/index.html).\n"
"*   **Java**: used to make Android apps. Learn it on [Treehouse](http://teamtreehouse.com/library/topic:android).\n"
"*   **Objective C**: used to make iPhone apps. Learn it on [MakeGamesWIthUs](https://www.makegameswith.us/home/) or [Treehouse](http://teamtreehouse.com/library/topic:ios).\n"
"*   **Ruby**: used with the Rails framework to create webservers. Learn it on [Codecademy](http://www.codecademy.com/tracks/ruby) or [Treehouse](http://teamtreehouse.com/library/ruby-foundations).\n"
"*   **PHP**: used for webservers. Learn it on [Treehouse](http://teamtreehouse.com/library/topic:php) or [Codecademy](http://www.codecademy.com/tracks/php).\n"
"*   **Haskell**: used for functional programming and popular with researchers. Learn it from [Learn you a Haskell for Great Good](http://learnyouahaskell.com/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Shapes**: like rect(), ellipse(), and line()\n"
"*   **Colors**: like fill(), stroke(), and background()\n"
"*   **Text**: like text() and textSize()\n"
"*   **Events**: like draw() and mousePressed()\n"
"*   **Math**: like random() and dist()"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Variables**: how to declare variables, assign, re-assign, and local vs. global scope.\n"
"*   **Data types**: numbers, booleans, strings, arrays, and objects.\n"
"*   **Functions**: how to group code into functions, pass arguments to them, and return values from them.\n"
"*   **Conditionals**: how to use if/else statements and logical expressions.\n"
"*   **Loops**: how to use while and for loops to repeat code."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Brainstorm ideas for a game, simulation, or story, and pick one that you think would be hard but not *too* hard.\n"
"*   Plan it out, using pseudo-code, sketching on paper, or writing it up in a document.\n"
"*   Start programming it. When you're stuck, try to find programs that do similar things (either from our official talk-throughs or from the community) and ask questions on them.\n"
"*   Share it with your friends and family when you're done. Reflect on how much you learnt."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [Advanced JS: Games & Visualizations](/computing/cs/programming-games-visualizations) \n"
"*   [Advanced JS: Natural Simulations](/computing/cs/programming-natural-simulations) (Recommended for those who have some familiarity with basic trigonometry and physics, like in high school).\n"
"*   [Algorithms](/computing/computer-science/algorithms) (Recommended for those who have done logarithms / functions, like in Algebra 2)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [Advanced Tutorials](https://github.com/musicalglass/AKA/wiki/Processing-JS)\n"
"*   [Making a Pop-Dots Game](https://github.com/musicalglass/AKA/wiki/Pop-Dots-Game)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [Khan Academy: HTML/CSS](/computing/computer-programming/html-css)\n"
"*   [TreeHouse: Build a Website](http://teamtreehouse.com/library/build-a-simple-website)\n"
"*   [CodeHS: HTML](http://codehs.com/library/module/12)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [Khan Academy: HTML/JS](/computing/computer-programming/html-css-js)\n"
"*   [TreeHouse: Build an Interactive Website](http://teamtreehouse.com/library/build-an-interactive-website)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   [TreeHouse: JavaScript Foundations](http://teamtreehouse.com/library/javascript-foundations)\n"
"*   [Mozilla Developer Network: JavaScript Guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide)\n"
"*   [Codecademy: JavaScript](http://www.codecademy.com/tracks/javascript)\n"
"*   [W3Schools JS Tutorial](http://www.w3schools.com/js/)\n"
"*   [Eloquent JavaScript](http://eloquentjavascript.net/contents.html)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before talking about what you can learn next, let's review what you've learned so far: JavaScript and ProcessingJS."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Besides our advanced tutorials on [Games & Visualization](/computing/cs/programming-games-visualizations) and [Natural Simulations](/computing/cs/programming-natural-simulations), you can also watch tutorials created by members of our community:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Have you watched all of the talk-throughs and completed all of the challenges up until this point? Awesome!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you feel very comfortable with JavaScript, maybe you'd like to learn an entirely new language. Here are a few languages you might want to learn:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you just use JavaScript without loading the ProcessingJS library, you will not have access to any of those functions. That's why we always load the library for you here."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you learn a new programming language, you will probably discover that it shares many of those constructs in common with JavaScript, and they often differ only in the exact syntax or subtle details."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, there are a ton of ways that you can keep learning programming, both by going deeper into what you've learnt so far or learning something related."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you feel comfortable with HTML and CSS, you then need to learn how to use the JavaScript \"DOM API\", a library that lets you manipulate a webpage using JavaScript:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "ProcessingJS is a powerful library, and we've only introduced half of it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Sometimes, the best way to really learn how to program is to work on a project that you're really passionate about."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There are many programming languages in the world, and JavaScript is one of the most popular ones. A programming language typically includes ways to store data in computer memory, ways to manipulate that data, ways to organize code and run code repeatedly. You learnt how to do all of that in JavaScript via:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There is still more to learn about JavaScript as a language, and several places that you can learn online. You may find that you already know the basics in these tutorials, so skip over them until you don't know something, or review them as practice."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To give you a fun way to learn JavaScript here, we gave you a drawing & animation \"library\" called ProcessingJS. That library is a collection of functions that you learnt how to use, and those functions know how to draw pixels into a canvas on the page. Here are examples of what you learnt how to use from ProcessingJS:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have three advanced tracks here on Khan Academy, with articles and challenges:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# Article is at (xec13d425) on the bn stage.
# Article is at (xec13d425) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Webpages are all written in HTML (to define their structure), CSS (to style them with different fonts and colors), and JavaScript (to make them interactive, like animating on user click). You already know the basics of JavaScript, but if you want to make webpages, you also need to learn HTML and CSS, like via these online tutorials:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/good-practices-what-to-learn-next</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have two advanced tracks here on Khan Academy, with articles and challenges:"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>
# Title of tutorial article (xcfdf6381) on the bn stage
# Title of tutorial article (xcfdf6381) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Planning a programming project"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## 1\\. What do you want to make?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## 2\\. What technology will you use?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## 3\\. What features will it include?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## 4\\. But what features **must** it include?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## 5\\. How will you implement it?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## 6\\. What's your timeline?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Are you ready!?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   (P1) User-controlled paddle\n"
"*   (P1) Multiple colored bricks\n"
"*   (P1) Angled ball movement\n"
"*   (P1) Collision detection\n"
"*   (P2) Life display\n"
"*   (P2) Score display\n"
"*   (P3) Sound effects"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   (P2) Headline\n"
"*   (P3) Fireworks animation"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   (P2) Play button\n"
"*   (P3) Help button"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   (P2) Text\n"
"*   (P3) Restart button"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   (P3) Text\n"
"*   (P3) Back button"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Ball deaths (`array)`\n"
"*   Ball hits (`array`)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Ball-brick collision (`function`, use bounding box)\n"
"*   Paddle-ball angling (`function`, invert angle)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Headline\n"
"*   Fireworks animation"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   If I shared this with a friend, which features would I want to make sure were working?\n"
"*   Which features am I the most excited about building?\n"
"*   Which features are the most unique to my program?\n"
"*   Which features will I learn the most from implementing?\n"
"*   Are there any features that seem too far beyond my current skill level?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Keyboard-paddle movement (`keyPressed`)\n"
"*   Buttons for scene changes (`mouseClicked`)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Life display\n"
"*   Score display\n"
"*   Start scene w/play button\n"
"*   Win scene w/headline"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Play button\n"
"*   Help button"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Sound effects\n"
"*   Help button\n"
"*   Fireworks\n"
"*   Lose scene w/Restart button"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Start\n"
"*   Game\n"
"*   End"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Text\n"
"*   Back button"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Text\n"
"*   Restart button"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   User-controlled paddle\n"
"*   Multiple colored bricks\n"
"*   Angled ball movement\n"
"*   Collision detection"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   User-controlled paddle\n"
"*   Multiple colored bricks\n"
"*   Angled ball movement\n"
"*   Collision detection\n"
"*   Life display\n"
"*   Score display\n"
"*   Sound effects"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Week 1: Design and pseudo-code\n"
"*   Week 2: Rough visuals\n"
"*   Week 3: Ball moving/collision mechanics\n"
"*   Week 4: Scoring mechanics\n"
"*   Week 5: Scenes (Start/Win/Lose)\n"
"*   Week 6: Polish, Manual tests (QA), Prep for demo"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   What are your other favorite academic fields? If you love art, could you make an art-making program? If you love history, how about an interactive timeline? If you love science, how about a scientific simulation? "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   What's a real-life gadget that you love? Could you make a simulation of it?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   What's your favorite game - arcade game, board game, sports game? Could you make a simplified, digital version of that? Could you mix it up a bit, like give it a different theme or main characters?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "*   What's your favorite movie or TV show? Could you make a digital version of a scene or character from it? Maybe make a game based on it?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   `Brick` (`.isHit()`)\n"
"*   `Paddle` (`.move()`)\n"
"*   `Ball` (`.move()`)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**(P1) Game scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**(P2) Lose Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**(P2) Main Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**(P2) Win Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**(P3) Help Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Game scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Help Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Logic**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Lose Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Main Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Objects**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Scenes**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**User data**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**User interaction**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**V1**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**V2**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**V3**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Win Scene**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "> **Breakout**: a game where you control a paddle at the bottom of the screen, and you use it to hit a ball upwards and at angles to break bricks. The goal is to break all the bricks, and not let the ball through the ground too many times."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As a general tip for those of you making games, here are features that I'd recommend de-prioritizing: menus, multiple levels, 3D graphics. Focus on what's unique and fun about your game, then add those extras."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Becoming a programmer isn't just about learning the syntax and the concepts of a programming language: it's about figuring out how to use that knowledge to make programs. You've made a bunch of programs in this course, in the challenges and projects, but now you should come up with ideas for new programs - **ideas that you're personally really excited about** - and try to turn those into actual programs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Figuring out timelines for programming projects is hard. Some things that seem easy take way longer than you expect (like some weird bug that you spend hours debugging), some things that seem hard take  less time than you expect. As a general rule, assume it will take you longer than you think, and adjust as you go along."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, here's an architecture for my Breakout clone:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For my Breakout clone feature list, I've put \"P1\", \"P2\", and \"P3\" next to the features, signifying top priority (P1), middle priority (P2), and lowest priority (P3). I decided to prioritize the unique game mechanics over general game features like scenes, because I find that the most exciting about this project:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For my Breakout clone, this could be my feature list, broken down by scene:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a timeline for my Breakout clone, assuming 2-4 hours of work each week:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what the versions would look like for my Breakout clone:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hopefully this gives you an idea for the process of planning a programming project, and inspires you to start a project now. Depending on what you want to build, you might also decide to go through other courses first, like [Advanced JS: Games & Visualizations](/computing/computer-programming/programming-games-visualizations) or [Advanced JS: Natural Simulations](/computing/computer-programming/programming-natural-simulations), to give you more ideas for building games and simulations."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How much time do you have to make this program? How many weeks, and how much time each day? What features will you write each week? Your goal in this step is to figure out a timeline for your project - which is particularly important if you have a deadline, but also useful so you start to understand how much time it takes you to write a program."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If I decided to make a game like Breakout, I'd pick JS+ProcessingJS, since I already know that technology and it also works great for 2D games like that."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we all had infinite time to make all the programs in our heads, then they'd all include every feature in our list. But we don't, so in this step, you have to decide which features are the most important, and which features you'll do only if we have time. This will also help you figure out which order to implement features in, from most to least important."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If you don't already have an idea, then here are some questions to help your brainstorming:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In this step, you need to consider which technologies (languages/libraries/environments) you're familiar with or able to learn easily, and which of them are the most well suited for the job. For many of you, that list may be one item long, \"1\\. JS+ProcessingJS\", and that makes your decision easy."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's step through the process of planning a programming project:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now you can use those mock-ups to help you make a feature list, where you think of every feature in your program, and make it into a list."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you've picked an idea, you should write a description of it. For example, if I decided to make a clone of \"Breakout\", because that's my favorite retro arcade game, I might write:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you've thought about the high-level architecture, it should become more clear what you can start coding first."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "One way you can figure that out is to think about the \"high level architecture\" of your program - breaking it into categories like \"objects\", \"logic\", \"user interaction\", \"user data\", and \"scenes\" - and then think about how you might implement them, like as object-oriented object types, functions, or variables."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our JS+ProcessingJS environment works great for making animations, games, visualizations, and simulations. Just check out the [community programs](/computing/computer-programming/browse) to see the wide range of programs that people make here."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our environment doesn't work for other things like multi-player games, mobile apps, data-crunching applications. If you know other languages/environments (like JS+HTML, Python, SCRATCH, Swift, etc) and you're thinking of building something that doesn't make as much sense with ProcessingJS, then consider which of those technologies would be best suited for your program. If you want to build those things but don't know other technologies, you might want to come up with a new program idea. You _can_ learn a new technology for a new project, but especially if you're just getting started in programming, it's a good idea to get really good at your first language first."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Sketched mock-ups of a Breakout clone"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first thing you can do is make \"mock-ups\"  - sketches that look like the thing you're making, but without details like coloring or exact sizing. You can make mock-ups on paper, or with online programs:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The important thing is to make sure you start making your own programs at some point, because that is where you'll learn the most, and also where you'll get the most joy out of programming, because you're making your dreams into reality."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then, go through your feature list from the last step, and either order the list or add a rank to each feature."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "This is where we get into the real planning, and where (I think) it gets fun. Your goal in this step is to figure out what you're actually making- what will it look like, what features it will include, what features it *won't* include."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To give you an idea of what mock-ups look like, I've included mock-ups below of my Breakout clone. I sketched each scene separately and drew arrows between them to show how one scene leads to another. Those arrows will help me understand what logic I need in my program to go between program states."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To help you figure out the importance of each feature, ask yourself these questions:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When I first started programming, I found myself constantly thinking of new programs to make and writing those down in a list. I was addicted to the power of creation, and there was so much my brain wanted to make. If you're like that, then you probably already have an idea of what you want to make, and perhaps you have your own list."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can also turn your prioritized list into project versions, so you can easily see what you need to implement in each versions, and you can always stop after a particular version and be happy with what you've made."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You might decide to write your whole program in pseudo-code first, which we talk about later in this tutorial. Basically, it'd mean writing the whole program in plain English text inside a comment, and then slowly turning that into actual code."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You now have an idea of what features you'll be building first in your program - but if you start now, you'll be staring at a completely blank program with no code written, and that can be intimidating. Which variables should you write first? Which functions?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You probably won't know everything you need for your program when you start it, and that's totally okay -- you'll be motivated to learn those new things because of how much you want to make your program real. Programmers are constantly learning new things for new projects, and that's part of why we love it so much."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You'll flesh that description out later, but for now, that gives you a good enough idea to keep going in the planning process."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# Article is at (xcfdf6381) on the bn stage.
# Article is at (xcfdf6381) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/d775ba67c59d763be9f60fee4929d560af19cfe1.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"Help Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"Logic | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"Lose Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"Main Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"Scenes | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"User data | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"User interaction | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"V2 | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"V3 | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"|   \n"
"Win Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"| (P2)  \n"
"Lose Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"| (P2)  \n"
"Main Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"| (P2)  \n"
"Win Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
" |\n"
"| (P3)  \n"
"Help Scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "Hopefully this gives you an idea for the process of planning a programming project, and inspires you to start a project now. Depending on what you want to build, you might also decide to go through other courses first, like [Advanced JS: Games & Visualizations](https://www.khanacademy.org/computing/computer-programming/programming-games-visualizations) or [Advanced JS: Natural Simulations](https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations), to give you more ideas for building games and simulations."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "Our JS+ProcessingJS environment works great for making animations, games, visualizations, and simulations. Just check out the [community programs](https://www.khanacademy.org/computing/computer-programming/browse) to see the wide range of programs that people make here."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"|   \n"
"Game scene | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"|   \n"
"Objects | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"|   \n"
"V1 | "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project">http://translate.khanacademy.org/computing/computer-programming/programming/good-practices/a/planning-a-programming-project</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| (P1)  \n"
"Game scene | "
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>
# Title of tutorial article (x39a46841) on the bn stage
# Title of tutorial article (x39a46841) on the pl stage
# Title of tutorial article (x39a46841) on the pt stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Learning programming on Khan Academy"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "## [Start learning now ➜](/computing/computer-programming/programming/drawing-basics/p/intro-to-drawing)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Welcome to programming land: we're a community learning together and inspiring each other to turn the visions in our head into reality. Onward!**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A screenshot of a new program with an error in it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A screenshot of the \"What's for Dinner?\" project."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "All in all, there are **40 talk-throughs**, **35 challenges**, and **9 projects** in this course, and it takes about 15-40 hours to complete, depending how wild you go with your projects. That might seem like a lot of time, but it's worth it, because at the end, you'll know the fundamentals of programming that are common across all programming languages."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An animated GIF of the \"More with variables\" talk-through"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An animated GIF of the Bucktooth Bunny coding challenge"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And hey, **it's totally okay to make mistakes**. That's what programmers do all the time - we break things, we make mistakes, we learn from them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In this course, we'll be teaching the concepts of the **JavaScript** programming language and the cool functions you can use with it in the **ProcessingJS** library. Before you dig in, here's a brief tour of how we teach programming here on Khan Academy, and how we think you can learn the most."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Normally, we teach on Khan Academy using videos, but here in programming land, we teach with something we call **\"talk-throughs\"**. A talk-through is like a video, but it's actually interactive- you can pause at any time if you want to play with the code yourself, and you can spin-off if you want to make your own version of what we made.  Here's an animated GIF of a talk-through (there will be sound in the actual talk-throughs!):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you're learning to program, you've got to practice-practice-practice. The challenges are a good way to try out what you've learned, but we want you to go deeper. That's why we now have **projects** in the course, opportunities to spend a lot more time and be more creative than you can be in the challenges. Some of the projects will be evaluated by your peers, and some just by yourself. You'll also evaluate some of your peer's projects, so you can learn from them. In programming land, we're constantly learning from our peers, there's _always_ something new to learn!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]After a talk-through, we'll give you a **step-by-step coding** **challenge** and guide you through them with messages and hints. If you feel like you're spending too much time on a challenge and getting frustrated, try re-watching the talk-through or just keep going and re-visit the challenge later. Here's an animated GIF of the Bucktooth Bunny challenge:  "
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Besides the projects, you should also make up completely new programs, whatever's in your head. Just click \"New program\" on the programming homepage, and look at the documentation to remember how to do things."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]Once you've made a program, you can save it and share it with your friends and family. It'll also show up in our [community programs area](/computing/computer-programming/browse), and other programmers can comment on it or ask you questions about how you did something. You can do the same for any interesting programs you find, too, and if you have an idea for customizing a program you see, just click \"Save as spin-off\" and you'll have your own copy of it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_P.S. If you'd like and you have the time, you can also watch this video tour I put together:_"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/6c37f4863d1905ac58bd1c6a06ca1812278bf0fe.gif"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/c5c6b2bd7f414b080652ec2e94934fc77e3c4d8d.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/e51f2cab1a1676126f745715a241625cc31aaeb4.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the bn stage.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/e7ca2b03eb0b93120484a11d8fc6adf5fa8cd24c.gif"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy">http://translate.khanacademy.org/computing/computer-programming/programming/intro-to-programming/a/learning-programming-on-khan-academy</a>.
# Article is at (x39a46841) on the pl stage.
# Article is at (x39a46841) on the pt stage.
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## [Start learning now ➜](/computing/computer-programming/programming/drawing-basics/p/making-drawings-with-code)"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>
# Title of tutorial article (x4a899dc9) on the bn stage
# Title of tutorial article (x4a899dc9) on the pl stage
# Title of tutorial article (x4a899dc9) on the pt stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: Logic and if Statements"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An **_if statement_** tells the program to execute a block of code, if a condition is true. In the code below, we output a message only if `x` is greater than 0:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As you can hopefully now see, conditionals are an important part of programming and let us create much more powerful and flexible programs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Assuming the following variable, here are the most common comparison operators and expressions that would be true with them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we only care that at least one condition is true, then we can use the `||` operator (\"or\"):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we want to require that two conditions are both true, we can use the `&&` operator (\"and\"):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It is a very common mistake to confuse the assignment operator (`=`) with the equality operator (`===`), because they both use equal signs, but they are quite different. The assignment operator will actually change the value of the variable, whereas the equality operator will just read the value of the variable and see if it's equal to something. For example:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now let's return to **_if statements_**. We often want to execute some block of code in the case that the if condition wasn't true - in that case, we add an **_else statement_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since x is 5, which is greater than 0, we would see the message on the canvas. If we changed x to -1, we wouldn't see the message show up at all, since x wouldn't be greater than 0."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Sometimes we want to check multiple conditions, and do different things based on each, in which case we can use `else if`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The `x > 0` is what we call a **_conditional expression_** - which means it's an expression that evaluates to either `true` or `false`. When a value is either `true` or `false`, we call it a **_boolean_** value (as opposed to a number or a string). For example, we could just display the conditional expression:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can use both `&&` and `||` in the same expression, if we have some very complex condition to check. Just use parentheses to group expressions, so that the program isn't confused about what order to evaluate them:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could also store it into a variable and then display it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have many ways of creating conditional expressions that will evaluate to `true` or `false`, because we have many comparison operators. Here are the most popular:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often use that in our programs here for checking that a user's mouse position is inside a rectangle (to mimic a button), in which case we need multiple `&&` operators:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often want to be able to \"conditionally\" do things in our programs - we want to be able to say \"if this thing is true, then do X but if this other thing is true, then do Y.\" It's like when we wake up in the morning - \"if it's raining outside, then I take an umbrella, but if it's sunny, I wear sunglasses.\" We can do things conditionally in our programs using **_if statements_** and **_if/else statements_** combined with **_conditional expressions_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We sometimes want to combine multiple comparisons together in a conditional expression, and that's why we have **_logical operators_**. These operators let us say things like \"if both X and Y are true\" or \"if either X or Y are true\" in our programs."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We would then say that `isPositive` is storing a boolean value, because it's either `true` or `false`, depending on what we set x to."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You can keep checking conditions as much as you want - just make sure that each of your conditions is actually reachable. Test your code by changing variables until you make it inside each of the blocks of code, so that you know it all works."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_This is a review of what we covered in this tutorial on logic and if statements._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"rect(100, 50, 100, 100); \n"
"\n"
"mousePressed = function() {\n"
"    if (mouseX > 100 && mouseX < 200 && mouseY > 50 && mouseY < 150) {\n"
"      text(\"You pressed it!\", 80, 75);\n"
"    }\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(x > 0, 200, 200); // Displays \"true\"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var age = 20;\n"
"if (age >= 35) {\n"
"  println('You can vote AND hold any place in government!');\n"
"} else if (age >= 30) {\n"
"  println('You can vote AND run for the Senate!');\n"
"} else if (age >= 18) {\n"
"  println('You can vote!');\n"
"} else {\n"
"  println('You have no voice in government!');\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var age = 28;\n"
"if (age > 16) {\n"
"  println('Yay, you can drive!');\n"
"} else {\n"
"  println('Sorry, but you have ' + (16 - age) + ' years until you can drive.');\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var degreesOutside = 70;\n"
"var numberOfClouds = 50;\n"
"if (degreesOutside < 70 || numberOfClouds < 5) {\n"
"  text(\"Wear sun screen, even if it's not hot out!\", 200, 200);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var degreesOutside = 70;\n"
"var numberOfClouds = 50;\n"
"if (degreesOutside > 70 && numberOfClouds < 5) {\n"
"  text(\"Wear sun screen!\", 200, 200);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var isPositive = x > 0;\n"
"text(isPositive, 200, 200);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myAge = 28;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myAge = 28;\n"
"if ((myAge >= 0 && myAge < 3)  || myAge > 90) {\n"
"  println('You\\'re not quite in your peak.');\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 2 + 2; // Sets it equal to 4\n"
"\n"
"if (x === 4) { // Asks the question, \"does this equal 4?\"\n"
"   text(\"yep, 2 + 2 = 4!\", 200, 200);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 5;\n"
"\n"
"if (x > 0) {\n"
"  text('x is a positive number!', 200, 200);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# Article is at (x4a899dc9) on the bn stage.
# Article is at (x4a899dc9) on the pl stage.
# Article is at (x4a899dc9) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Operator | Meaning | True expressions | |\n"
"| --- | --- | --- |--- |\n"
"| === | Strict equality | `myAge === 28` |  |\n"
"| !== | Strict inequality | `myAge !== 29` |`28 !== 29` |\n"
"| > | Greater than | `myAge > 25` | `28 > 25` |\n"
"| >= | Greater than or equal | `myAge >= 28` | `28 >= 28` |\n"
"| < | Less than | `myAge < 30` | `28 < 30` |\n"
"| <= | Less than or equal | `myAge <= 28` | `28 <= 28` |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "An **_if statement_** tells the program to execute a block of code, as long as a condition is true. In the code below, we output a message only if `x` is greater than 0:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid "We often want to be able to \"conditionally\" do things in our programs - we want to be able to say \"if this thing is true, then do X but if this other thing is true, then do Y.\" It's like when we wake up in the morning - \"if its raining outside, then I take an umbrella, but if its sunny, I wear sunglasses.\" We can do things conditionally in our programs using **_if statements_** and **_if/else statements_** combined with **_conditional expressions_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements">http://translate.khanacademy.org/computing/computer-programming/programming/logic-if-statements/a/review-logic-and-if-statements</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| Operator | Meaning | True expressions |\n"
"| --- | --- | --- |\n"
"| === | Strict equality | `myAge === 28` |\n"
"| !== | Strict inequality | `myAge !== 29`  \n"
"`28 !== 29` |\n"
"| > | Greater than | `myAge > 25`  \n"
"`28 > 25` |\n"
"| >= | Greater than or equal | `myAge >= 28`  \n"
"`28 >= 28` |\n"
"| < | Less than | `myAge < 30`  \n"
"`28 < 30` |\n"
"| <= | Less than or equal | `myAge <= 28`  \n"
"`28 <= 28` |"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>
# Title of tutorial article (xcf1d241d) on the bn stage
# Title of tutorial article (xcf1d241d) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: Looping"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A **_while loop_** is a way to repeat code until some condition is false. For example, this while loop will display the value of y at (30, y) as long as y is less than 400\\. The loop adds 20 to y each time it runs, so that y starts off at 40 but then increments to 60, 80, 100, 120, etc."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's important that the condition inside the parenthesis becomes false at some point - otherwise we'll have what's known as an **_infinite loop_**! That's what would happen if we removed `y += 20`, because y would be 40 forever, and always be less than 400, and the program would never know when to stop."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Loops can also be **_nested_**. It's actually very common to nest for loops, especially in 2-d drawings, because it makes it easy to draw grid-like shapes. When we nest a loop inside a loop, we're telling the program to \"do this thing X many times, and for each time you do that, also do this other thing Y many times.\" Think about drawing a grid- we'd want to tell the program to \"create a column 10 times, and for each column, also create 15 cells inside of it.\" Here's how you can use nested for loops to achieve that:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The **_for loop_** is similar to a while loop, but with a more specialized syntax. Programmers invented the for loop when they realized they were always doing the same three things- creating loop counter variables (like y above), incrementing them by some amount, and checking that they're less than a value. A for loop syntax has special places for each of those three things. Here's the same loop as the first while loop above, as a for loop:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When should you use a for loop versus a while loop? That's up to you. Many programmers prefer for loops because it's harder to accidentally create an infinite loop (because it's harder to forget to increment your counter variable), but sometimes a while loop might make more sense. Try them both!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we're writing programs, we often find that we want to repeat a bit of code over and over, or repeat it but change something about it each time. To save ourselves from writing all that code, we can use a **_loop_**. JavaScript has two kinds of loops, a **_while loop_** and a **_for loop_**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_This is a review of what we covered in this tutorial on loops._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var col = 0; col < 10; col++) {\n"
"    for (var row = 0; row < 15; row++) {\n"
"        rect(col*20, row*20, 20, 20);\n"
"    }\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"for (var y = 40; y < 400; y += 20) {\n"
"    text(y, 30, y);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var y = 40;\n"
"while (y < 400) {\n"
"    text(y, 30, y);\n"
"    y += 20;\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping">http://translate.khanacademy.org/computing/computer-programming/programming/looping/a/review-looping</a>.
# Article is at (xcf1d241d) on the bn stage.
# Article is at (xcf1d241d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var y = 40;\n"
"while (y < 400) {\n"
"    text(y, 30, y);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "(Well, we're not really going to burn it, because that's an amazing book, but perhaps if we were stuck in a glacial desert and desperate for warmth and about to die.)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A paperback is like a book, but it has one main thing different, at least for our program: it has a cover image. So, our constructor needs to take four arguments, to take in that extra info:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And now we can create a new paperback, read it all, and burn it!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And now you can see how we can use object-oriented design principles in JavaScript to create more complex data for your programs and model your program worlds better."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we pass the arguments into the constructor function but do not explicitly store them on `this`, then we will *not* be able to access them later! The object will have long forgotten about them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In that case, we want to use the idea of **object inheritance**. An object type could inherit properties and behavior from a parent object type, but then also have its own unique things about it. All the `Cat`s and `Dog`s could inherit from `Mammal`, so that they wouldn't have to invent `eat()`ing from scratch. How would we do that in JavaScript?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's like how we would define a function normally, except that we hang it off the `Book`'s prototype instead of just defining it globally. That's how JavaScript knows that this is a function that can be called on any `Book` object, and that this function should have access to the `this` of the book that it's called on."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's contrast this for a minute, and show what would have happened if we didn't set up our constructor function properly:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's go back to our book example, and say that `Book` is the \"parent\" object type, and we want to make two object types that inherit from it - `Paperback` and `EBook`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, if you think about the world, cats and dogs are different types of objects, so you'd probably create different object types for them if you were programming a `Cat` and a `Dog`. A cat would `meow()`, a dog would `bark()`. But they're also similar- both a cat and dog would `eat()`, they both have an `age`, and a `birth`, and a `death`. They're both mammals, and that means they share a lot in common, even if they're also different."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we don't want to have to do all the work that we already did in the `Book` constructor to remember those first three arguments - we want to take advantage of the fact that the code for that would be the same. So we can actually call the `Book` constructor from the `PaperBack` constructor, and pass in those arguments:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we have a constructor for our `PaperBack`, which helps it share the same properties as `Book`s, but we also want our `PaperBack` to inherit its methods. Here's how we do that, by telling the program that the `PaperBack` prototype should be based on the `Book` prototype:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Remember, the whole point of object-oriented design is that it makes it easy for us to make multiple related objects (**_object instances_**). Let's see that in code:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That code gives us three books that are similar - they all have the same types of properties and behavior, but also different. Sweet!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The function takes in arguments for the aspects that will be different about each book - the title, author, and number of pages. It then sets the initial properties of the object based on those arguments, using the `this` keyword. When we use `this` in an object, we are referring to the current instance of an object, referring to itself. We need to store the properties on `this` to make sure we can remember them later."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To create an instance of a `Book` object, we declare a new variable to store it, then use the `new` keyword, followed by the constructor function name, and pass in the arguments that the constructor expects:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To define an object type in JavaScript, we first have to define a \"constructor function\". This is the function that we'll use whenever we want to create a new instance of that object type. Here's a constructor function for a `Book` object type:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can then access any properties that we stored in the object using dot notation:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can then call the function (which we call a **_method_**, since it's attached to an object), like so:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We might also want to attach paperback-specific behavior, like being able to burn it, and we can do that by defining functions on the prototype, after that line above:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We still need to store the `cover` property in the object though, so we need one more line to take care of that:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we create programs, we often find that we want to create many different objects that all share similar properties - like many cats, that have slightly different fur color and size, or many buttons, with different labels and positions. We want to be able to say \"this is generally what a cat is like\" and then say \"let's make this specific cat, and this other cat, and they'll be similar in some ways and different in a few ways as well.\" In that case, we want to use **_object-oriented design_** to define object types and create new instances of those objects."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we define object types, we often want to associate both properties *and behavior* with them - like all of our cat objects should be able to meow() and eat(). So we need to be able to attach functions to our object type definitions, and we can do that by defining them on what's called the **object prototype**:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_This is a review of what we covered in this tutorial on object-oriented design._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"Book.prototype.readItAll = function() {\n"
"  this.currentPage = this.numPages;\n"
"  println(\"You read \" + this.numPages + \" pages!\");\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PaperBack.prototype = Object.create(Book.prototype);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"PaperBack.prototype.burn = function() {\n"
"  println(\"Omg, you burnt all \" + this.numPages + \" pages\");\n"
"  this.numPages = 0;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"println(\"I loved reading \" + book.title); // I loved reading Robot Dreams\n"
"println(book.author + \" is my fav author\"); // \"Isaac Asimov\" is my fav author\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Book = function(title, author, numPages) {\n"
"  this.title = title;\n"
"  this.author = author;\n"
"  this.numPages = numPages;\n"
"  this.currentPage = 0;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Book = function(title, author, numPages) {\n"
"};\n"
"var book = new Book(\"Little Brother\", \"Cory Doctorow\", 380);\n"
"println(\"I loved reading \" + book.title); // I loved reading undefined\n"
"println(book.author + \" is my fav author\"); // undefined is my favorite author\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var PaperBack = function(title, author, numPages, cover) {\n"
"  // ...\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var PaperBack = function(title, author, numPages, cover) {\n"
"  Book.call(this, title, author, numPages);\n"
"  // ...\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var PaperBack = function(title, author, numPages, cover) {\n"
"  Book.call(this, title, author, numPages);\n"
"  this.cover = cover;\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var book = new Book(\"Animal Farm\", \"George Orwell\", 112);\n"
"book.readItAll(); // You read 112 pages!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var book = new Book(\"Robot Dreams\", \"Isaac Asimov\", 320);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var calvin = new PaperBack(\"The Essential Calvin & Hobbes\", \"Bill Watterson\", 256, \"http://ecx.images-amazon.com/images/I/61M41hxr0zL.jpg\");\n"
"\n"
"calvin.readItAll(); // You read 256 pages!\n"
"calvin.burn(); // Omg, you burnt all 256 pages!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# Article is at (x10d55122) on the bn stage.
# Article is at (x10d55122) on the pl stage.
# Article is at (x10d55122) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var pirate = new Book(\"Pirate Cinema\", \"Cory Doctorow\", 384);\n"
"var giver = new Book(\"The Giver\", \"Lois Lowry\", 179);\n"
"var tuck = new Book(\"Tuck Everlasting\", \"Natalie Babbit\", 144);\n"
"\n"
"pirate.readItAll(); // You read 384 pages!\n"
"giver.readItAll(); // You read 179 pages!\n"
"tuck.readItAll(); // You read 144 pages!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var Book = function(title, author, numPages) {\n"
"};\n"
"var book = new Book(\"Little Brother\", \"Cory Doctorow\", 380);\n"
"println(\"I loved reading \" + book.title); // I loved reading undefined\n"
"println(book.author + \" is my fav author\"); // undefined is my favorite author\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design">http://translate.khanacademy.org/computing/computer-programming/programming/object-oriented/a/review-object-oriented-design</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var pirate = new Book(\"Pirate Cinema\", \"Cory Doctorow\", 384);\n"
"var giver = new Book(\"The Giver\", \"Lois Lowry\", 179);\n"
"var tuck = new Book(\"Tuck Everlasting\", \"Natalie Babbit\", 144);\n"
"\n"
"pirate.readItAll(); // You read 384 pages!\n"
"giver.readItAll(); // You read 179 pages!\n"
"tuck.readItAll(); // You read 144 pages!\n"
"\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>
# Title of tutorial article (x97439a8f) on the bn stage
# Title of tutorial article (x97439a8f) on the pl stage
# Title of tutorial article (x97439a8f) on the pt stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: Objects"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Accessing object properties"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Arrays of objects"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "## Modifying object properties"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An **_object_** is a data type that lets us store a collection of properties in a single variable. To create an object, we declare a variable like we normally would, and then we use curly braces to surround key-value property pairs:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An object is not useful unless we can look inside it and grab the values of the different properties. We can do that two ways - first, using what we call \"dot notation\", where we write the name of the variable, followed by a \".\", and then the property name:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a more complex object that describes a cat, with four properties- `age`, `furColor`, `likes`, and `birthday`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's an object that describes Winston - this object has two properties, `hometown` and `hair`, and each of the property values are strings:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's another practical example that you might use in your programs, an array of coordinate positions:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we try to access a property that doesn't exist, we'd see \"undefined\":"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we're done with a property, we can delete it (but most of the time we'll probably just change its value):"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Just like when we store other data types in variables, we can change the values of the object properties at any time during a program, using the dot or bracket notation:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how each property stores a different data type- `age` stores a number, `furColor` stores a string, `likes` stores an array, and `birthday` stores another object. That's the cool thing about objects (well, one of the cool things) - they can store other objects inside them! So you can have deeply nested objects to describe complex data."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice that we iterate through an array of objects the same way that we iterate through an array of numbers or strings, using a for loop. Inside each iteration, we access the current array element with bracket notation, and then access the properties of that array element (an object) with dot notation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that you know both arrays and objects, you can combine them to make arrays of objects, which are actually really useful ways of storing data in programs. For example, an array of cats:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Pretty neat, aye? Objects can be confusing at first, but keep using them, and eventually you'll be addicted and turn everything into an object!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "That's equivalent to what we saw before with no quote marks, but it takes longer to type. The only time that you absolutely **need** quote marks is if your property name has a whitespace in it, like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can also add entirely new properties!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can also use \"bracket notation\", which looks similar to how we access array elements, where we write the variable name, then square brackets, with the property name inside in quotes:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have many types of values that we can store in JavaScript variables, and sometimes we want to store a bunch of related values together: that's where **_objects_** come in!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We have to use quotes there, because otherwise the JavaScript interpreter would get confused. Here's my tip for you: just don't use whitespace in your property names to begin with! Then you never have to use quote marks around property names."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You might also see objects declared using quotes around the property names, like:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_This is a review of what we covered in this tutorial on objects._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"aboutWinston.hair = \"curly\"; // Winston gets a wig!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"aboutWinston.lifeGoal = \"teach JavaScript\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"delete aboutWinston.hair;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(\"Winston's life goal is \" + aboutWinston.lifeGoal, 100, 150);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var aboutWinston = {\n"
"  hometown: \"Mountain View, CA\",\n"
"  hair: \"no\"\n"
"};\n"
"\n"
"text(\"Winston is from \" + aboutWinston.hometown, 100, 100);\n"
"text(\"Winston has \" + aboutWinston.hair + \" hair\", 100, 150);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var aboutWinston = {\n"
"  hometown: \"Mountain View, CA\",\n"
"  hair: \"no\"\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var aboutWinston = {\n"
"  \"his hair\": \"none\"\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var aboutWinston = {\n"
"  \"hometown\": \"Mountain View, CA\",\n"
"  \"hair\": \"no\"\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var hisHometown = aboutWinston[\"hometown\"];\n"
"var hisHair = aboutWinston[\"hair\"];\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var lizzieTheCat = {\n"
"  age: 18,\n"
"  furColor: \"grey\",\n"
"  likes: [\"catnip\", \"milk\"],\n"
"  birthday: {\"month\": 7, \"day\": 17, year: 1994}\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myCats = [\n"
"  {name: \"Lizzie\", \n"
"   age: 18},\n"
"  {name: \"Daemon\",\n"
"   age: 1}\n"
"];\n"
"\n"
"for (var i = 0; i < myCats.length; i++) {\n"
"  var myCat = myCats[i];\n"
"  println(myCat.name + ' is ' + myCat.age + ' years old.');\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var objectName = { \n"
"  propertyName: propertyValue,\n"
"  propertyName: propertyValue,\n"
"  ...\n"
"};\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# Article is at (x97439a8f) on the bn stage.
# Article is at (x97439a8f) on the pl stage.
# Article is at (x97439a8f) on the pt stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var positions = [\n"
"    {x: 200, y: 100},\n"
"    {x: 200, y: 200},\n"
"    {x: 200, y: 300}\n"
"];\n"
"\n"
"for (var i = 0; i < positions.length; i++) {\n"
"    var position = positions[i];\n"
"    ellipse(position.x, position.y, 100, 100);\n"
"}\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects">http://translate.khanacademy.org/computing/computer-programming/programming/objects/a/review-objects</a>.
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: pt)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var aboutWinston = {\n"
"  hometown: \"Mountain View, CA\",\n"
"  hair: \"no\"\n"
"};\n"
"\n"
"text(\"Winston is from \" + aboutWinston.hometown, 100, 100);\n"
"text(\"Winston has \" + aboutWinston.hair + \" hair\", 100, 150);\n"
"\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>
# Title of tutorial article (xe92b9d1d) on the bn stage
# Title of tutorial article (xe92b9d1d) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Using math expressions in JS"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, in the following code, it would first evaluate the two expressions in parentheses, then it would multiply those results together, and finally, it would add 100 to that result."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In the JavaScript language (and most programming languages), we can use mathematical operators to calculate numbers and create expressions."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Just like in math expressions, you only need parentheses if you want your expression to be evaluated differently than it would be according to the order of operations. You can leave them out otherwise."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Next up, we'll go through an example using more complicated expressions with variables and math operators. If you want, play around with some of these math expressions first, to make sure you have a handle on how the computer evaluates them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you use multiple math operators in a single expression, the computer follows an \"order of operations\" to make sure it computes the result the same way each time. It's the same order of operations that you probably learned in math class, and is commonly remembered as \"PEMDAS\" - parentheses, exponents, multiplication, division, addition, subtraction. You can learn more about [order of operations](/math/cc-sixth-grade-math/cc-6th-arithmetic-operations/cc-6th-order-of-operations) on Khan Academy."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You've already seen examples of adding in JS, using the `+` operator. You can also use `-` for subtraction, `*` for multiplication, `/` for division, and `%` to take the remainder. Here are examples of those in action:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"  var x = 10;\n"
"  var a = (x + 10) * (x / 2) + 100;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# Article is at (xe92b9d1d) on the bn stage.
# Article is at (xe92b9d1d) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 10;\n"
"var a = x + 5; // add 5, result is 15\n"
"var b = x - 5; // subtract 5, result is 5\n"
"var c = x * 2; // multiply by 2, result is 20\n"
"var d = x / 4; // divide by 4, result is 2.5\n"
"var e = x % 4; // divide by 4 & return remainder, result is 2\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "When you use multiple math operators in a single expression, the computer follows an \"order of operations\" to make sure it computes the result the same way each time. It's the same order of operations that you probably learned in math class, and is commonly remembered as \"PEMDAS\" - parentheses, exponents, multiplication, division, addition, subtraction. You can learn more about [order of operations](https://www.khanacademy.org/math/cc-sixth-grade-math/cc-6th-arithmetic-operations/cc-6th-order-of-operations) on Khan Academy."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\n"
"  var x = 10;\n"
"  var a = (x + 10) * (x / 2) + 100;\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js">http://translate.khanacademy.org/computing/computer-programming/programming/resizing-with-variables/a/using-math-expressions-in-js</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var x = 10;\n"
"var a = x + 5; // add 5, result is 15\n"
"var b = x - 5; // subtract 5, result is 5\n"
"var c = x * 2; // multiply by 2, result is 20\n"
"var d = x / 4; // divide by 4, result is 2.5\n"
"var e = x % 4; // divide by 4 & return remainder, result is 2\n"
"\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>
# Title of tutorial article (x4fe57463) on the bn stage
# Title of tutorial article (x4fe57463) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Review: text and strings"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before this tutorial, we were using number values for most things: passing numbers into functions, storing numbers in variables, etc. As you've now seen, we can also use text values.  We call these text values **strings** in JavaScript; think of them as a string of letters."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But we _can't_ mix and match quotation marks—that's an error! Pick either single or double marks, and stick with them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's a review of what we covered in this tutorial on text:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Just like we can manipulate number values, we can also manipulate strings. We can, for example, add one string to another string:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Note that we can also use single quotation marks:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Then we have to actually do something with that string, like pass it to the $ text() $ command:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "To create a string, we surround text in quotation marks:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We also saw in this tutorial that we can use different commands to change the text size and text color when we display strings using the $ text() $ command. You can read more about those commands in the [text section](/computer-programming/texttext-x-y/937624625) of our documentation (click the \"documentation\" tab to access)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could also store it in a variable, and then pass that variable into the $ text() $ command:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we combine strings in JS, we call it **concatenating** strings. We can also combine strings with number values:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"\"Hello World!\"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"text(\"Hello World!\", 100, 100);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myGreeting = \"Alo\";\n"
"var myName = \"Winston\";\n"
"var sayHello = myGreeting + \", \" + myName + \"!\"; // Alo, Winston!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myGreeting = \"Hello World!\";\n"
"text(myGreeting, 100, 100);\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myGreeting = 'Hello World!\"; // oh noes!\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myGreeting = 'Hello World!';\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# Article is at (x4fe57463) on the bn stage.
# Article is at (x4fe57463) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var xPos = 10;\n"
"var yPos = 20;\n"
"var label = \"The coordinates are \" + xPos + \", \" + yPos;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "We also saw in this tutorial that we can use different commands to change the text size and text color when we display strings using the $ text() $ command. You can read more about those commands in the [text section](/cs/program-docs#cs-documentation-text) of our documentation."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myGreeting = \"Alo\";\n"
"var myName = \"Winston\";\n"
"var sayHello = myGreeting + \", \" + myName + \"!\"; // Alo, Winston!\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var myGreeting = \"Hello World!\";\n"
"text(myGreeting, 100, 100);\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings">http://translate.khanacademy.org/computing/computer-programming/programming/text-basics/a/review-text-and-strings</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var xPos = 10;\n"
"var yPos = 20;\n"
"var label = \"The coordinates are \" + xPos + \", \" + yPos;\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Variable names can begin with letters, or the symbols \\$ or \\_. They can only contain letters, numbers, \\$ and \\_.  They cannot begin with a number. \"myVariable\", \"leaf_1\", and \"\\$money3\" are all examples of valid variable names.\n"
"*   Variable names are case sensitive, which means that \"xPos\" is different from \"xpos\", so make sure you are consistent.\n"
"*   Variable names can't be the same as existing variable names, and there are a lot in our ProcessingJS programming environment. If you ever see an error pop up like \"Read only!\", try changing your variable name.\n"
"*   Variable names should be clear and meaningful; for example, instead of \"ts\", use \"toothSize\".\n"
"*   Variable names should use camel case for multiple words, like \"toothSize\" instead of \"toothsize\" or \"tooth_size\"."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A variable is a way to store values. To use a variable, we must both declare it—to let the program know about the variable—and then assign it—to let the program know what value we are storing in the variable."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's how we would declare a variable named \"xPos\":"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Here's what we covered in this tutorial on variables:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How can we pick names for our variables? For variables in JavaScript, follow these rules:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If we want to—and we often do!—we can declare and assign in one statement:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If, for some reason, we want to change the value of a variable later, we can re-assign it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now, we can assign xPos to hold the value 10:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'll soon see why re-assignment can be useful when we want to animate our drawings."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'll use variables a lot when we learn animation in the next tutorial, so ask questions here if you don't understand something about them."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var xPos = 10;\n"
"// some time later ...\n"
"xPos = 20;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var xPos = 10;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"var xPos;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# Article is at (x7b411616) on the bn stage.
# Article is at (x7b411616) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"xPos = 10;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables">http://translate.khanacademy.org/computing/computer-programming/programming/variables/a/review-variables</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   Variable names can begin with letters, or the symbols $ or _. They can only contain letters, numbers, $ and _.  They cannot begin with a number. \"myVariable\", \"leaf_1\", and \"$money3\" are all examples of valid variable names.\n"
"*   Variable names are case sensitive, which means that \"xPos\" is different from \"xpos\", so make sure you are consistent.\n"
"*   Variable names can't be the same as existing variable names, and there are a lot in our ProcessingJS programming environment. If you ever see an error pop up like \"Read only!\", try changing your variable name.\n"
"*   Variable names should be clear and meaningful; for example, instead of \"ts\", use \"toothSize\".\n"
"*   Variable names should use camel case for multiple words, like \"toothSize\" instead of \"toothsize\" or \"tooth_size\"."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Go deeper on databases"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Learn more SQL"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Try SQL in other environments"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Try SQL for data analysis.** These days, SQL is often used to analyze data that comes from all sorts of places. One way that you can start analyzing data immediately is with Google's BigQuery, which includes a SQL-like language, and lets you upload data or use public data sets. Read the [BigQuery documentation](https://cloud.google.com/bigquery/query-reference) or read this [BigQuery tutorial](https://www.thinkful.com/learn/google-bigquery-tutorial/)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Try SQL in a webpage**. If you don't have a server setup or data to analyze, you could use SQLite inside a webpage, to store data that the user creates while using the webpage. The data won't be stored when the user leaves the page, however. You can spin-off this example of [using SQLite in a webpage.](/computer-programming/using-sqlite-inside-a-webpage/5618461699080192)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Try SQL on the server-side.** SQL can be used to manage the data in a app's server-side database. A user uses the app via the \"frontend\" (webpage or mobile app), the frontend sends HTTP requests to the \"backend\" (server), and the backend issues SQL commands to the database. You can set up a server-side app on your own computer using many different languages/frameworks, two popular stacks are [LAMP](http://en.wikipedia.org/wiki/LAMP_%28software_bundle%29) and [LAPP](http://www.turnkeylinux.org/lapp)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Congratulations on learning SQL! Now that you've learned all that, here are some ideas for how to keep going."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "On Khan Academy, we created a playground for you to try out SQL with small amounts of fake data. We encourage you to keep experimenting with it here, but you'll likely want to use your skills in an environment with real data."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "SQL is a way to interact with databases, so by learning SQL, you've also learned a fair bit about how databases work. However, you can go much deeper in the area of databases - learning more about the theories, principles, and design - like [relational design theory](http://en.wikipedia.org/wiki/Relational_model), [relational algebra](http://en.wikipedia.org/wiki/Relational_algebra) and [unified modeling language](http://en.wikipedia.org/wiki/Unified_Modeling_Language). One way to learn those is with Stanford's self-paced [Intro to Databases class](https://lagunita.stanford.edu/courses/DB/2014/SelfPaced/about)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We covered a lot of SQL, but as you use it more, particularly for creating read/write databases to power apps, you should familiarize yourself with all the features available. You can learn more about [indexes and query planning](https://www.sqlite.org/queryplanner.html), [constraints](http://beginner-sql-tutorial.com/sql-integrity-constraints.htm), [triggers](http://en.wikipedia.org/wiki/Database_trigger), [views](http://en.wikipedia.org/wiki/View_%28SQL%29), and [foreign keys](http://en.wikipedia.org/wiki/Foreign_key). It's best if you know which SQL environment you'll be using those features in first, so you can read the most accurate documentation for it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next">http://translate.khanacademy.org/computing/computer-programming/sql/further-learning-in-sql/a/further-learning-in-sql-what-to-learn-next</a>.
# Article is at (x35ceecf3) on the bn stage.
# Article is at (x35ceecf3) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You could also learn different versions of SQL that are used with popular database vendors, like MySQL, [PostGreSQL](http://pgexercises.com/about.html), Oracle, MS SQL, and DB2, perhaps in combination with learning SQL on the server-side."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>
# Title of tutorial article (xed476b0a) on the bn stage
# Title of tutorial article (xed476b0a) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Make your SQL safer"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Avoiding bad updates/deletes"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Granting privileges"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Making backups"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Replication"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Using transactions"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A related approach is replication - always storing multiple copies of the databases in different places. If for some reason a particular copy of the database is unavailable (like lightning hit the building that it's in, which has actually happened to me!), then the query can be sent to another copy of the database which is hopefully still available. If the data is very important, then it should probably be replicated to ensure availability. For example, if a doctor is trying to pull up a list of a patient's allergies to determine how to treat them in an emergency situation, then they can't afford to wait for engineers to get the data out of a backup, they need it immediately."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And here's how we can give only SELECT access to a different user:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "At the same time, another user or process might be awarding the user a second badge:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Before you issue an `UPDATE`, run a `SELECT` with the same `WHERE` to make sure you're updating the right column and row."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "But if you are using a database system on a shared server one day, then you should make sure to set up users and privileges properly from the beginning. As a general rule, there should be only a few users that have full access to the database (like backend engineers), since it can be so dangerous."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, before running:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, here's how we can give full access to a particular user:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, the following commands create a row denoting that a user earned a badge, and then update the user's recent activity to describe that:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "However, it is a lot more effort to replicate databases and it often means slower performance since write operations have to be performed in all of them, so companies must decide whether the benefits of replication are worth the costs, and investigate the best way of setting it up for their environment."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If the database is unable to issue both those `UPDATE` commands for some reason, then it will rollback the transaction and leave the database how it was when it started."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In a big company, you often don't even want to give `SELECT` access to most users, because there might be private data in a table, like a user's email address or name. Many companies have anonymized versions of their databases that they can query on without worrying about access to private information."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "In that case, we can wrap the commands in `BEGIN TRANSACTION` and `COMMIT`:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Instead, we could run those in a transaction, to guarantee that no other transactions happen in the middle:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Many database systems have users and privileges built into them, because they are stored on a server and accessed by multiple users. There is no concept of user/privilege in the SQL scripts on Khan Academy, because SQLite is typically used in a single-user scenario, and thus you can write to it as long as you have access to the drive it's stored on."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Once you decide to run the update, you can use the LIMIT operator to make sure you don't accidentally update too many rows:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Or if you were deleting:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "SQL can be a beautiful thing, but it can also be a dangerous thing. If you're using SQL to access a database for an app that's used by hundreds or thousands or even millions of users, you need to be careful - because you could accidentally damage or erase all that data. There are various techniques you can use to make your SQL safer, however."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Their recent activity would now be \"Earned SQL Master badge\" even though the most recently inserted badge was \"Great listener\". That's not the end of the world, but it's also probably not what we expected."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "These commands could now actually be issued in this order:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We also use transactions when we want to make sure that all of our commands operate on the same view of the data - when we want to ensure that no other transactions operate on that same data while the sequence of commands is running. When you're looking at a sequence of commands you want to run, ask yourself what would happen if another user issued commands at the same time. Could your data end up in a weird state? In that case, you should run in a transaction."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "When we issue a SQL command that changes our database in some way, it starts what is called a \"transaction.\" A transaction is a sequence of operations treated as a single logical piece of work (like a bank transaction), and in the world of databases, a transaction must comply to the \"ACID\" principles to make sure they are processed reliably."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Whenever we issue a command like `CREATE`, `UPDATE`, `INSERT`, or `DELETE`, we are automatically starting a transaction. However, if we want, we can also wrap up multiple commands inside a bigger transaction. It may be that we only want an `UPDATE` to go through if another `UPDATE` goes through as well, so we want to put both of them in the same transaction."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You could run:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "You should definitely follow all those tips, but sometimes mistakes still happen. Because of that, most companies make backups of their databases - on an hourly, daily, or weekly basis, depending on the size of the database and space available. When something bad happens, they can then import data from the old database for whichever tables were damaged or lost. The data may end up a little outdated, but outdated data is often better than no data at all."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "_Bonus: Read this famous [XKCD comic](https://xkcd.com/327/) about safer SQL (plus [this explanation](http://stackoverflow.com/questions/332365/how-does-the-sql-injection-from-the-bobby-tables-xkcd-comic-work))._"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"BEGIN TRANSACTION;\n"
"INSERT INTO user_badges VALUES (1, \"SQL Master\");\n"
"UPDATE user SET recent_activity = \"Earned SQL Master badge\" WHERE id = 1;\n"
"COMMIT;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"BEGIN TRANSACTION;\n"
"UPDATE people SET husband = \"Winston\" WHERE user_id = 1;\n"
"UPDATE people SET wife = \"Winnefer\" WHERE user_id = 2;\n"
"COMMIT;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"DELETE users WHERE id = 1 LIMIT 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"GRANT FULL ON TABLE users TO super_admin;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"GRANT SELECT ON TABLE users TO analyzing_user;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"INSERT INTO user_badges VALUES (1, \"Great Listener\", \"4:05pm\");\n"
"UPDATE user SET recent_activity = \"Earned Great Listener badge\" WHERE id = 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"INSERT INTO user_badges VALUES (1, \"SQL Master\");\n"
"INSERT INTO user_badges VALUES (1, \"Great Listener\");\n"
"UPDATE user SET recent_activity = \"Earned Great Listener badge\" WHERE id = 1;\n"
"UPDATE user SET recent_activity = \"Earned SQL Master badge\" WHERE id = 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"INSERT INTO user_badges VALUES (1, \"SQL Master\", \"4pm\");\n"
"UPDATE user SET recent_activity = \"Earned SQL Master badge\" WHERE id = 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"SELECT id, deleted FROM users WHERE id = 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"UPDATE users SET deleted = true WHERE id = 1 LIMIT 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# Article is at (xed476b0a) on the bn stage.
# Article is at (xed476b0a) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"UPDATE users SET deleted = true WHERE id = 1;\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "In a big company, you often don't even want to give `SELECT` access to most users, because there might be private data in a table, like a user's email address or name. Many companies have anonymized version of their databases that they can query on without worrying about access to private information."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"INSERT INTO user_badges VALUES (1, \"Great Listener\", \"4:05pm\");\n"
"UPDATE user SET recent_activity = \"Earned Great Listener badge\" WHERE id = 1;\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"INSERT INTO user_badges VALUES (1, \"SQL Master\");\n"
"INSERT INTO user_badges VALUES (1, \"Great Listener\");\n"
"UPDATE user SET recent_activity = \"Earned Great Listener badge\" WHERE id = 1;\n"
"UPDATE user SET recent_activity = \"Earned SQL Master badge\" WHERE id = 1;\n"
"\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/make-your-sql-safer</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"INSERT INTO user_badges VALUES (1, \"SQL Master\", \"4pm\");\n"
"UPDATE user SET recent_activity = \"Earned SQL Master badge\" WHERE id = 1;\n"
"\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>
# Title of tutorial article (x357ae6d4) on the bn stage
# Title of tutorial article (x357ae6d4) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Using SQL to update a database"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An example of \"read/write operations\" is a software engineer creating the backend for a webapp. For example, if I was the software engineer working on the health tracker, I might write code that knows how to insert a new daily log in the database every time a user submits a form:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "An example of a \"read-only operation\" is a data analysis on a data dump from some app or research study. For example, if I was a data scientist working for a daily diary, I might query what percentage of users eat ice cream on the same day that they run, to understand if exercise makes people want to reward themselves:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "As we've mentioned throughout this course, there are many times we might find ourselves using SQL or a SQL-like query language on a database. We can think of some uses as \"read-only operations\" and other uses as \"read/write operations\"."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I would also need to write SQL to modify the database if the user edited their daily log, deleted it, or even deleted their account. If the team decided to add more features to the user's daily log, like an emotion column to track how happy while they were eating ice cream and running (my hypothesis: very happy), I would need to write SQL to modify the table schema itself."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I would probably be issuing that SQL command from inside a server-side language, likely using a library to make it easier to construct the commands. This is what that insertion would look like if I was using Python with the SQLAlchemy library:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If I'm doing a data analysis like that, then pretty much everything I'm doing is a `SELECT` - it's all read only. We're not creating any new data, we are just querying existing data. We need to get very good at `SELECT` queries, but we don't need to know how to create tables, update rows, and all of that."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Those are all \"write operations\", and they are necessary if we're going to use a database to store and update data for an app. `INSERT` is relatively safe, because all it does is add data, but operations like `UPDATE`, `DELETE`, `DROP`, or `ALTER` can be much more dangerous, because they are updating existing data. That's why it's important to really understand those well, and use them carefully. Keep going to learn how to use them!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"INSERT INTO diary_logs (id, food, activity)\n"
"            VALUES (123, \"ice cream\", \"running\");\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"SELECT * FROM diary_logs WHERE\n"
"       food LIKE \"%ice cream%\" AND activity LIKE \"%running%\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database">http://translate.khanacademy.org/computing/computer-programming/sql/modifying-databases-with-sql/a/using-sql-to-update-a-database</a>.
# Article is at (x357ae6d4) on the bn stage.
# Article is at (x357ae6d4) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"diary_logs.insert().values(id=123, food=\"ice cream\", activity='running')\n"
"```"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>
# Title of tutorial article (x6be18ad6) on the bn stage
# Title of tutorial article (x6be18ad6) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Who issues SQL queries?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Data scientists:**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Product management:**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "**Software engineers:**"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "A mock-up of an exercise website with graphs for exercise stats and a form for entering a new log."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Just with this simple data set of exercise logs, we've managed to come up with many different and useful queries. Now I want to take a break from querying to talk about who would usually be doing all this querying, and for what purpose."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's imagine that we have an exercise app with thousands of users, storing data similar to the exercise logs table we've been using.  That app lets users enter daily logs and view their progress on a personal dashboard:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "On that note, keep going to learn more advanced features...!"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Since all these people are working at the same company, they can and _should_ be sharing knowledge with each other about how to use SQL on their databases. Not everyone needs to be a SQL expert, but in my experience, many people at a company can benefit from having a basic understanding of SQL, and some of them may want to go into more advanced features as they get more sophisticated."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "They are the decision makers at a company, the people that look at the data, talk to users, look at the market, and try to understand how to improve a product to get more users, make users happier, or make more money. They often need an understanding of SQL queries so they can look at usage statistics and try to understand what parts of a product are being used the most, which parts are being used in surprising ways, and what isn't being used at all. They might use a `SELECT` to look at how many users even use the \"heart_rate\" field at all, if they're debating getting rid of it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "They are the ones analyzing the data, trying to learn more about users, maybe coming up with suggestions about how to help them exercise more. They need a deep understanding of `SELECT` statements, because they need to do very complex queries to do the analysis they're interested in. For example, they might use a `SELECT` to analyze what percentage of users were more likely to do more exercise if they started off exercising in the morning, maybe using `CASE` and `GROUP BY`."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "They are the ones building the backend (the server-side logic) and the frontend (the HTML/CSS/JS that renders data and forms). The software engineers would use SQL to communicate on the server-side with the database that's storing all of the user's data. They would need to know how to do any queries needed by the frontend. For example, if users saw a dashboard when they logged on of how much exercise they did that day, the engineer would need to figure out how to do a `SELECT` filtered by date and user. They would need to figure out how to insert data and update it (which we'll discuss much later)"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "[[☃ image 1]]For an app like that, there are a few folks on the team that might be issuing SQL queries:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries">http://translate.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/a/who-issues-sql-queries</a>.
# Article is at (x6be18ad6) on the bn stage.
# Article is at (x6be18ad6) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/638a710e1756d7a33a1054ce296d0e8c51451eb5.png"
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>
# Title of tutorial article (x6d31ca55) on the bn stage
# Title of tutorial article (x6d31ca55) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "More efficient SQL with query planning and optimization"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### The lifecycle of a SQL query"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Where do humans come in?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "### Why do SQL queries need a plan?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "(Here are some deep dives into different SQL query planners that I found interesting: [SQL Server Query Optimizer](http://sqlblog.com/blogs/paul_white/archive/2012/04/28/query-optimizer-deep-dive-part-1.aspx), [Oracle SQL Tuning](http://docs.oracle.com/cd/B19306_01/server.102/b14211/sql_1016.htm#g42927), [MSSQL Execution Plan Basics](https://www.simple-talk.com/sql/performance/execution-plan-basics/))"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"*   **Do a \"full table scan\":** look at every single row in the table, return the matching rows.\n"
"*   **Create an \"index\":** Make a copy of the table sorted by author, then do a binary search to find the row where the author is \"J K Rowling\", find the matching IDs, then do a binary search on the original table that returns the rows that match the ID."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  The **query parser** makes sure that the query is syntactically correct (e.g. commas out of place) and semantically correct (i.e. the tables exist), and returns errors if not. If it's correct, then it turns it into an algebraic expression and passes it to the next step.\n"
"2.  The **query planner and optimizer** does the hard thinking work. It first performs straightforward optimizations (improvements that always result in better performance, like simplifying 5*10 into 50). It then considers different \"query plans\" which may have different optimizations, estimates the cost (CPU and time) of each query plan based on the number of rows in the relevant tables, then it picks the optimal plan and passes it on to the next step.\n"
"3.  The **query executor** takes the plan and turns it into operations for the database, returning the results back to us if there are any."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Creating indexes can often make repeated queries more efficient. But there are many other approaches as well. For SQLite, you can get more insight in their [query planner overview](https://www.sqlite.org/optoverview.html) and take careful note of the \"manual\" sections."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, let's say we had this simple query:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, remember that query we discussed at the top? If we knew ahead of time that we would want to do hundreds of queries that restricted `WHERE` on the author column, then we could explicitly create the index, using `CREATE INDEX`. Then the SQL engine would be able to use that index to efficiently find the matching rows. You can read this guide about [SQLite query planning](https://www.sqlite.org/queryplanner.html) to help you understand when indexes would help."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For this query, these are 2 different ways that SQL could find the results:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How does a SQL engine decide which plan to pick? That's an important step that we haven't talked about yet, because we've been focused on the syntax of our queries, not their implementation. As you get into more advanced SQL usage on big databases, the planning step is increasingly important."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "If the table was 10 million rows long, then that full table scan would require looking at 10 million rows. It would be faster to do a binary search on a sorted table - we only need 23 lookups to find a value in 10 million rows. However, creating the sorted table would take a while (~230 million operations, depending on our engine). If we were executing that query many times (more than 23 times) or if we already had that table created, then that second plan would be better."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Many times, especially for complex queries, there are indeed ways you can help optimize a query, and that's known as **\"query tuning\"**."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now comes the hard part: manual optimization to improve that execution plan. This is also the part that is often dependent on the particularities of the SQL engine you're using, and the particularities of your own data."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Now that you've learned many ways of selecting data and are starting to do `SELECT`s across multiple tables, it's a good time to talk about the efficiency of your SQL queries - how quickly do they execute, and could they execute faster?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Parse, then Optimize, then Execute"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "SQL is a declarative language - each query declares _what_ we want the SQL engine to do, but it doesn't say _how_.  As it turns out, the _how_ -- the \"plan\" -- is what affects the efficiency of the queries, however, so it's pretty important."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The first step is to identify what queries you want to tune, which you can figure out by looking at which of your database calls are taking the longest or using the most resources, like with a SQL profiler. Sometimes, you might discover a badly performing query after it takes so long that it takes down your whole database. Hopefully, you find that out earlier."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The next step is to understand how a particular SQL engine is executing a query, and all SQL systems come with a way to ask the engine. In SQLite, you can stick [`EXPLAIN QUERY PLAN`](https://www.sqlite.org/eqp.html) in front of any SQL to see what it's doing behind the scenes. If you use that, be prepared to dig deep into the [`EXPLAIN QUERY PLAN` reference](https://www.sqlite.org/eqp.html), because the \"explanation\" is pretty detailed and implementation specific. If you're using another SQL engine, you can search for [\"how do I get an execution plan in X\"](http://stackoverflow.com/questions/7359702/how-do-i-obtain-a-query-execution-plan)."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "The query planning and optimization happens for every query, and you could go your whole life issuing SQL queries and not realize it. However, once you start dealing with bigger data sets, you'll start to care more about the speed of your queries, and you might find yourself wondering if there's any way you can improve the performance of your queries."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can think of the SQL engine going through these steps for each query we give it:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We can't cover all the complexities of query optimization and query tuning here, so I recommend that you dive deeper into it when you need it."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Which one is faster? It depends on the data, and on how often the query will be executed. If the table is only 10 rows long, then a full table scan only requires looking at 10 rows, and the first plan would work out well."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"```\n"
"SELECT * FROM books WHERE author = \"J K Rowling\";\n"
"```"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# Article is at (x6d31ca55) on the bn stage.
# Article is at (x6d31ca55) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "https://ka-perseus-images.s3.amazonaws.com/0886a3e020ce4ef32c1ac223bf7ed27432946c7f.png"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"1.  The **query parser** makes sure that the query is syntactically correct (i.e. commas out of place) and semantically correct (i.e. the tables exist), and returns errors if not. If it's correct, then it turns it into an algebraic expression and passes it to the next step.\n"
"2.  The **query planner and optimizer** does the hard thinking work. It first performs straightforward optimizations (improvements that always result in better performance, like simplifying 5*10 into 50). It then considers different \"query plans\" which may have different optimizations, estimates the cost (CPU and time) of each query plan based on the number of rows in the relevant tables, then it picks the optimal plan and passes it on to the next step.\n"
"3.  The **query executor** takes the plan and turns it into operations for the database, returning the results back to us if there are any."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "SQL is a declarative language - each query declares _what_ we want the SQL engine to do, but it doesn't say _how_.  As it turns out, the _how_ -- the \"plan\" -- is what effects the efficiency of the queries, however, so it's pretty important."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/more-efficient-sql-with-query-planning-and-optimization</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "The next step is to understand how a particular SQL engine is executing a query, and all SQL systems come with a way to ask the engine. In SQLlite, you can stick [`EXPLAIN QUERY PLAN`](https://www.sqlite.org/eqp.html) in front of any SQL to see what it's doing behind the scenes. If you use that, be prepared to dig deep into the [`EXPLAIN QUERY PLAN` reference](https://www.sqlite.org/eqp.html), because the \"explanation\" is pretty detailed and implementation specific. If you're using another SQL engine, you can search for [\"how do I get an execution plan in X\"](http://stackoverflow.com/questions/7359702/how-do-i-obtain-a-query-execution-plan)."
msgstr ""

# Title of tutorial article <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>
# Title of tutorial article (x99315768) on the bn stage
# Title of tutorial article (x99315768) on the pl stage
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: text)
#: intl/datastore:1
msgid "Splitting data into related tables"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "And then our `student_books` table becomes:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, let's say we have a table for logging how well students do on their tests, and we include emails in case we need to email parents about slipping grades:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "For example, what if a student's email changed? Which tables would we need to change?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "How could we figure out the email for each student? We could find the row in the student info table, matching by name. What if 2 students had the same name? (Did you know that in Bali, every person has only 1 of 4 possible first names?) We can't rely on name to look up a student, and really, we should never rely on something like name to identify anything uniquely in a table."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "I know, this table doesn't look nearly as readable as the old table that had all of information stuffed into every row. But, tables are often not designed to be readable to humans-- they're designed to be the best way to store data with the highest amount of maintainability and which is the least bug prone. In many cases, it may be best to split information into multiple related tables, so that there is less redundant data and fewer places to update."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's important to understand how to use SQL to deal with data that has been split up into multiple related tables, and bring the data back together across the tables when you need it. We do that using a concept called \"join\"s and that's what I'll show you next."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's often preferable to make sure that a particular column of data is only stored in a _single location_, so there are fewer places to update and less risk of having different data in different places. If we do that, we need to make sure we have a way to relate the data across the tables, which we'll get to later."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Let's say we decide to remove email from the grades table, because we realize it's redundant with the email in the student details table. This is what we'd have:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "Notice how we have the title and author repeated twice for Jabberwocky? That's another warning sign that we could break our table up into multiple related tables, so that we don't have to update multiple places if something changes about a book."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So far, we've just been working with one table at a time, and seeing what interesting data we can select out of that table. But actually, most of the time, we have our data distributed across multiple tables, and those tables are \"related\" to each other in some way."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "So the best thing to do is to remove the `student_name` and replace that with `student_id`, since that is a guaranteed unique identifier:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "There is one big thing to realize about these tables: they are describing relational data - as in, they are describing data that relates to each other. Each of these tables describe data related to a particular student, and many of the tables replicate the same data. When the same data is replicated across multiple tables, there can be interesting consequences."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We could have a table just about books:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We might also have a table for logging what books each student reads:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We might also have a table just for detailed student information:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We would make the same change to our books table, using student_id instead of student_name:"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "We'd need to change the student information table, but since we also included that data in the grades table, we'd also have to find _every row_ about that student, and change the email there too."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid "What do you think of these tables? Would you change them in any way?"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `id` | `book_title` | `book_author` |\n"
"| --- | --- | --- |\n"
"| 1 | The Tale of Mrs. Tiggy-Winkle | Beatrix Potter |\n"
"| 2 | Jabberwocky | Lewis Carroll |\n"
"| 3 | The Hunting of the Snark | Lewis Carroll |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `id` | `student_first` | `student_last` | `student_email` | `phone` | `birthday` |\n"
"| --- | --- | --- | --- | --- | --- |\n"
"| 1 | Peter | Rabbit | peter@rabbit.com | 555-6666 | 2001-05-10 |\n"
"| 2 | Alice | Wonderland | alice@wonderland.com | 555-4444 | 2001-04-02 |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `student_id` | `book_id` |\n"
"| --- | --- |\n"
"| 1 | 1 |\n"
"| 1 | 2 |\n"
"| 2 | 3 |\n"
"| 2 | 2 |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `student_id` | `book_title` | `book_author` |\n"
"| --- | --- | --- |\n"
"| 1 | The Tale of Mrs. Tiggy-Winkle | Beatrix Potter |\n"
"| 1 | Jabberwocky | Lewis Carroll |\n"
"| 2 | The Hunting of the Snark | Lewis Carroll |\n"
"| 2 | Jabberwocky | Lewis Carroll |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `student_id` | `test` | `grade` |\n"
"| --- | --- | --- |\n"
"| 1 | Nutrition | 95 |\n"
"| 2 | Nutrition | 92 |\n"
"| 1 | Chemistry | 85 |\n"
"| 2 | Chemistry | 95 |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `student_name` | `book_title` | `book_author` |\n"
"| --- | --- | --- |\n"
"| Peter Rabbit | The Tale of Mrs. Tiggy-Winkle | Beatrix Potter |\n"
"| Peter Rabbit | Jabberwocky | Lewis Carroll |\n"
"| Alice Wonderland | The Hunting of the Snark | Lewis Carroll |\n"
"| Alice Wonderland | Jabberwocky | Lewis Carroll |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `student_name` | `student_email` | `test` | `grade` |\n"
"| --- | --- | --- | --- |\n"
"| Peter Rabbit | peter@rabbit.com | Nutrition | 95 |\n"
"| Alice Wonderland | alice@wonderland.com | Nutrition | 92 |\n"
"| Peter Rabbit | peter@rabbit.com | Chemistry | 85 |\n"
"| Alice Wonderland | alice@wonderland.com | Chemistry | 95 |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# Article is at (x99315768) on the bn stage.
# Article is at (x99315768) on the pl stage.
# (KA_SOURCE_TREE: bg)
# (KA_SOURCE_TREE: bn)
# (KA_SOURCE_TREE: de)
# (KA_SOURCE_TREE: es)
# (KA_SOURCE_TREE: fr)
# (KA_SOURCE_TREE: hi)
# (KA_SOURCE_TREE: hy)
# (KA_SOURCE_TREE: it)
# (KA_SOURCE_TREE: ja)
# (KA_SOURCE_TREE: ka)
# (KA_SOURCE_TREE: ko)
# (KA_SOURCE_TREE: lol)
# (KA_SOURCE_TREE: nl)
# (KA_SOURCE_TREE: pl)
# (KA_SOURCE_TREE: pt)
# (KA_SOURCE_TREE: pt-pt)
# (KA_SOURCE_TREE: shared)
# (KA_SOURCE_TREE: sv)
# (KA_SOURCE_TREE: ta)
# (KA_SOURCE_TREE: tr)
# (KA_SOURCE_TREE: zh-hans)
# (format: perseus_text)
#: intl/datastore:1
msgid ""
"| `student_name` | `test` | `grade` |\n"
"| --- | --- | --- |\n"
"| Peter Rabbit | Nutrition | 95 |\n"
"| Alice Wonderland | Nutrition | 92 |\n"
"| Peter Rabbit | Chemistry | 85 |\n"
"| Alice Wonderland | Chemistry | 95 |"
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "I know, this table doesn't look nearly as readable as the old table that had all of information stuffed into every row. But, tables are often not designed to be readable to humans-- they're designed to be the best way to store data with the highest amount of maintainability and which is the least bug prone. In many cases, it may be best to split information into multiple related tables, so that there is less redundant data and less places to update."
msgstr ""

# Article is at <a href="http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables">http://translate.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/a/splitting-data-into-related-tables</a>.
# (KA_SOURCE_TREE: lol)
# (format: perseus_text)
#: intl/datastore:1
msgid "It's often preferable to make sure that a particular column of data is only stored in a _single location_, so there are less places to update and less risk of having different data in different places. If we do that, we need to make sure we have a way to relate the data across the tables, which we'll get to later."
msgstr ""
